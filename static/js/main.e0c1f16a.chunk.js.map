{"version":3,"sources":["lib/scraper/xemovie.js","components/Arrow.js","components/Card.js","components/ErrorBanner.js","components/InputBox.js","components/PercentageOverlay.js","lib/storage/VideoProgress.js","lib/storage/base.js","components/MovieRow.js","components/Progress.js","hooks/useMovie.js","components/Title.js","components/TypeSelector.js","lib/scraper/lookmovie.js","lib/scraper/theflix.js","lib/scraper/vidzstore.js","lib/index.js","views/Search.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/SelectBox.js","components/EpisodeSelector.js","hooks/useWindowSize.js","views/Movie.js","App.js","index.js"],"names":["BASE_URL","process","findContent","searchTerm","type","a","searchUrl","encodeURIComponent","fetch","then","d","text","searchRes","parser","DOMParser","doc","parseFromString","options","movieContainer","querySelectorAll","querySelector","movieNodes","filter","link","className","results","map","node","parentElement","title","Set","innerText","split","trim","year","slug","href","pop","source","fuse","Fuse","threshold","keys","matchedResults","search","result","item","length","res","forEach","r","push","getStreamUrl","season","episode","url","mediaUrl","subtitles","DOM","scripts","script","textContent","match","data","JSON","parse","stringify","eval","replace","playlist","file","tracks","subtitleTrack","URL","blob","subtitleBlob","createObjectURL","language","label","getEpisodes","xemovie","Arrow","props","dangerouslySetInnerHTML","__html","left","Card","React","useState","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","doTransition","style","ref","children","ErrorBanner","InputBox","onSubmit","placeholder","setSearchTerm","e","preventDefault","id","value","onChange","target","required","PercentageOverlay","percentage","Math","max","width","Fragment","VideoProgressStore","_data","versionList","maxVersion","versions","storageString","instanceHelpers","staticHelpers","setKey","str","this","addVersion","version","migrate","create","Error","toString","update","init","registerHelper","name","helper","constructor","String","Function","includes","build","versionListSorted","sort","b","v","i","arr","currentVersion","get","store","localStorage","getItem","console","error","Object","_","save","setItem","entries","undefined","bind","obj","Number","buildStoreObject","MovieRow","progress","progressData","movie","full","floor","currentlyAt","totalDuration","tabIndex","onKeyPress","event","code","onClick","viewBox","fill","xmlns","place","Progress","failed","steps","toFixed","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","streamData","setStreamData","Provider","navigate","setStreamUrl","streamUrl","p","resetStreamData","useMovie","useContext","Title","history","useHistory","size","accentLink","accent","handleAccentClick","TypeSelector","setType","choices","selected","noWrap","selectedIndex","findIndex","transformStyles","opacity","transform","choice","phpsessid","API_URL","CORS_URL","nodes","Array","from","distance","getVideoUrl","config","headers","json","subs","sub","videoUrl","streams","startsWith","pageReq","JSON5","slice","indexOf","seasons","episodes","pageRes","pageResText","id_movie","episodeObj","find","id_episode","lookMovie","term","toLowerCase","tmdbRes","getAttribute","sNodes","s","epRes","prop","pageProps","theflix","titleArray","splice","join","shift","decodeURIComponent","src","vidzstore","Promise","all","o","lookmovie","SearchView","routeMatch","useRouteMatch","params","streamRouteMatch","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","errorStatus","setErrorStatus","continueWatching","setContinueWatching","fail","getStream","realUrl","query","contentType","catch","fetchHealth","newContinueWatching","values","subselection","entry","percentageDone","meta","newShow","parseInt","updatedAt","to","handleKeyPress","Helmet","searchMovie","reduce","deletable","rel","VideoPlaceholder","VideoElement","loading","videoRef","startTime","setError","onLoad","currentTime","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","controls","autoPlay","onProgress","onLoadedData","index","kind","NumberSelector","Option","option","htmlFor","SelectBox","selectedItem","setSelectedItem","isArray","active","setActive","containerRef","handleClick","contains","closeDropdown","document","addEventListener","removeEventListener","onOptionClick","stopPropagation","handleOptionKeyPress","opt","EpisodeSelector","setSelectedSeason","selectedSeason","setEpisode","currentSeason","currentEpisode","round","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","useWindowSize","MovieView","baseRouteMatch","showRouteMatch","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","setStartTime","isVideoTimeSet","cancel","key","time","evt","progressSave","currentTarget","duration","Date","now","Router","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0c1f16a.chunk.js","sourcesContent":["import Fuse from 'fuse.js'\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://xemovie.co`;\n\nasync function findContent(searchTerm, type) {\n    try {\n        let results;\n\n        const searchUrl = `${BASE_URL}/search?q=${encodeURIComponent(searchTerm)}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        switch (type) {\n            case 'show':\n                // const showContainer = doc.querySelectorAll(\".py-10\")[1].querySelector(\".grid\");\n                // const showNodes = [...showContainer.querySelectorAll(\"a\")].filter(link => !link.className);\n                // results = showNodes.map(node => {\n                //     node = node.parentElement\n                //     return {\n                //         type,\n                //         title: [...new Set(node.innerText.split(\"\\n\"))][1].split(\"(\")[0].trim(),\n                //         year: [...new Set(node.innerText.split(\"\\n\"))][3],\n                //         slug: node.querySelector(\"a\").href.split('/').pop(),\n                //         source: \"xemovie\"\n                //     }\n                // })\n                // break;\n                return { options: [] };\n            case 'movie':\n                const movieContainer = doc.querySelectorAll(\".py-10\")[0].querySelector(\".grid\");\n                const movieNodes = [...movieContainer.querySelectorAll(\"a\")].filter(link => !link.className);\n                results = movieNodes.map(node => {\n                    node = node.parentElement\n                    return {\n                        type,\n                        title: [...new Set(node.innerText.split(\"\\n\"))][1].split(\"(\")[0].trim(),\n                        year: [...new Set(node.innerText.split(\"\\n\"))][3],\n                        slug: node.querySelector(\"a\").href.split('/').pop(),\n                        source: \"xemovie\"\n                    }\n                })\n                break;\n            default:\n                results = [];\n                break;\n        }\n\n        const fuse = new Fuse(results, { threshold: 0.3, keys: [\"title\"] });\n        const matchedResults = fuse\n            .search(searchTerm)\n            .map(result => result.item);\n\n        if (matchedResults.length === 0) {\n            return { options: [] };\n        }\n\n        if (matchedResults.length > 1) {\n            const res = { options: [] };\n    \n            matchedResults.forEach((r) => res.options.push({\n                title: r.title,\n                slug: r.slug,\n                type: r.type,\n                year: r.year,\n                source: 'xemovie'\n            }));\n    \n            return res;\n        } else {\n            const { title, slug, type, year } = matchedResults[0];\n    \n            return {\n                options: [{ title, slug, type, year, source: 'xemovie' }]\n            }\n        }\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    let url;\n\n    if (type === \"show\") {\n\n    } else {\n        url = `${BASE_URL}/movies/${slug}/watch`;\n    }\n\n    let mediaUrl = \"\";\n    let subtitles = [];\n\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n\n    for (const script of DOM.scripts) {\n        if (script.textContent.match(/https:\\/\\/s[0-9]\\.xemovie\\.com/)) {\n            // eslint-disable-next-line\n            let data = JSON.parse(JSON.stringify(eval(`(${script.textContent.replace(\"const data = \", \"\").split(\"};\")[0]}})`)));\n            // eslint-disable-next-line\n            mediaUrl = data.playlist[0].file;\n            // eslint-disable-next-line\n            for (const subtitleTrack of data.playlist[0].tracks) {\n                const subtitleBlob = URL.createObjectURL(await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}${subtitleTrack.file}`).then(res => res.blob())); // do this so no need for CORS errors\n                subtitles.push({\n                    file: subtitleBlob,\n                    language: subtitleTrack.label\n                })\n            }\n        }\n    }\n    return { url: mediaUrl, subtitles: subtitles }\n}\n\nasync function getEpisodes(slug) {\n\n}\n\nconst xemovie = { findContent, getStreamUrl, getEpisodes }\nexport default xemovie;","import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react'\r\nimport './Card.css'\r\n\r\n// fullWidth: boolean\r\n// show: boolean\r\n// doTransition: boolean\r\nexport function Card(props) {\r\n\r\n    const [showing, setShowing] = React.useState(false);\r\n    const measureRef = React.useRef(null)\r\n    const [height, setHeight] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!measureRef?.current) return;\r\n        setShowing(props.show);\r\n        setHeight(measureRef.current.clientHeight)\r\n    }, [props.show, measureRef])\r\n\r\n    return (\r\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' } ${ props.doTransition ? 'overflow-hidden' : '' }`} style={{\r\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\r\n        }}>\r\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './ErrorBanner.css';\n\nexport function ErrorBanner({children}) {\n\treturn (\n\t\t<div className=\"errorBanner\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div className=\"progressBar\">\n            <div className=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import { versionedStoreBuilder } from './base.js';\r\n\r\n/*\r\nversion 0\r\n{\r\n    [{scraperid}]: {\r\n        movie: {\r\n            [{movie-id}]: {\r\n                full: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        },\r\n        show: {\r\n            [{show-id}]: {\r\n                [{season}-{episode}]: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    show: {\r\n                        episode: string,\r\n                        season: string,\r\n                    },\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\nexport const VideoProgressStore = versionedStoreBuilder()\r\n    .setKey('video-progress')\r\n    .addVersion({\r\n        version: 0,\r\n        create() {\r\n            return {}\r\n        }\r\n    })\r\n    .build()\r\n","function buildStoreObject(d) {\r\n    const data = {\r\n        versions: d.versions,\r\n        currentVersion: d.maxVersion,\r\n        id: d.storageString,\r\n    }\r\n\r\n    function update(obj) {\r\n        if (!obj)\r\n            throw new Error(\"object to update is not an object\");\r\n\r\n        // repeat until object fully updated\r\n        if (obj[\"--version\"] === undefined)\r\n            obj[\"--version\"] = 0;\r\n        while (obj[\"--version\"] !== this.currentVersion) {\r\n            // get version\r\n            let version = obj[\"--version\"] || 0;\r\n            if (version.constructor !== Number || version < 0)\r\n                version = -42; // invalid on purpose so it will reset\r\n            else {\r\n                version = (version+1).toString()\r\n            }\r\n            \r\n            // check if version exists\r\n            if (!this.versions[version]) {\r\n                console.error(`Version not found for storage item in store ${this.id}, resetting`);\r\n                obj = null;\r\n                break;\r\n            }\r\n\r\n            // update object\r\n            obj = this.versions[version].update(obj);\r\n        }\r\n\r\n        // if resulting obj is null, use latest version as init object\r\n        if (obj === null) {\r\n            console.error(`Storage item for store ${this.id} has been reset due to faulty updates`);\r\n            return this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // updates succesful, return\r\n        return obj;\r\n    }\r\n\r\n    function get() {\r\n        // get from storage api\r\n        const store = this;\r\n        let data = localStorage.getItem(this.id);\r\n\r\n        // parse json if item exists\r\n        if (data) {\r\n            try {\r\n                data = JSON.parse(data);\r\n                if (!data.constructor) {\r\n                    console.error(`Storage item for store ${this.id} has not constructor`)\r\n                    throw new Error(\"storage item has no constructor\")\r\n                }\r\n                if (data.constructor !== Object) {\r\n                    console.error(`Storage item for store ${this.id} is not an object`)\r\n                    throw new Error(\"storage item is not an object\")\r\n                }\r\n            } catch (_) {\r\n                // if errored, set to null so it generates new one, see below\r\n                console.error(`Failed to parse storage item for store ${this.id}`)\r\n                data = null;\r\n            }\r\n        }\r\n\r\n        // if item doesnt exist, generate from version init\r\n        if (!data) {\r\n            data = this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // update the data if needed\r\n        data = this.update(data);\r\n\r\n        // add a save object to return value\r\n        data.save = function save() {\r\n            localStorage.setItem(store.id, JSON.stringify(data));\r\n        }\r\n        \r\n        // add instance helpers\r\n        Object.entries(d.instanceHelpers).forEach(([name, helper]) => {\r\n            if (data[name] !== undefined)\r\n                throw new Error(`helper name: ${name} on instance of store ${this.id} is reserved`)\r\n            data[name] = helper.bind(data);\r\n        })\r\n\r\n        // return data\r\n        return data;\r\n    }\r\n\r\n    // add functions to store\r\n    data.get = get.bind(data);\r\n    data.update = update.bind(data);\r\n\r\n    // add static helpers\r\n    Object.entries(d.staticHelpers).forEach(([name, helper]) => {\r\n        if (data[name] !== undefined)\r\n            throw new Error(`helper name: ${name} on store ${data.id} is reserved`)\r\n        data[name] = helper.bind({});\r\n    })\r\n\r\n    return data;\r\n}\r\n\r\n/*\r\n * Builds a versioned store\r\n *\r\n * manages versioning of localstorage items\r\n*/\r\nexport function versionedStoreBuilder() {\r\n    return {\r\n        _data: {\r\n            versionList: [],\r\n            maxVersion: 0,\r\n            versions: {},\r\n            storageString: null,\r\n            instanceHelpers: {},\r\n            staticHelpers: {},\r\n        },\r\n\r\n        /*\r\n         * set key of localstorage item, must be unique\r\n        */\r\n        setKey(str) {\r\n            this._data.storageString = str;\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * add a version to the store\r\n         *\r\n         * version: version number\r\n         * migrate: function to update from previous version to this version\r\n         * create: function to return an empty storage item from this version (in correct syntax)\r\n        */\r\n        addVersion({ version, migrate, create }) {\r\n            // input checking\r\n            if (version < 0)\r\n                throw new Error(\"Cannot add version below 0 in store\");\r\n            if (version > 0 && !migrate)\r\n                throw new Error(`Missing migration on version ${version} (needed for any version above 0)`);\r\n\r\n            // update max version list\r\n            if (version > this._data.maxVersion)\r\n                this._data.maxVersion = version;\r\n            // add to version list\r\n            this._data.versionList.push(version);\r\n\r\n\r\n            // register version\r\n            this._data.versions[version.toString()] = {\r\n                version: version, // version number\r\n                update: migrate ? (data) => { // update function, and increment version\r\n                    migrate(data);\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null,\r\n                init: create ? () => { // return an initial object\r\n                    const data = create();\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * register a instance or static helper to the store \r\n         *\r\n         * name: name of the helper function\r\n         * helper: function to execute, the 'this' context is the current storage item (type is instance)\r\n         * type: \"instance\" or \"static\". instance is put on the storage item when you store.get() it, static is on the store\r\n        */\r\n        registerHelper({ name, helper, type }) {\r\n            // type\r\n            if (!type)\r\n                type = \"instance\"\r\n\r\n            // input checking\r\n            if (!name || name.constructor !== String) {\r\n                throw new Error(\"helper name is not a string\")\r\n            }\r\n            if (!helper || helper.constructor !== Function) {\r\n                throw new Error(\"helper function is not a function\")\r\n            }\r\n            if (![\"instance\", \"static\"].includes(type)) {\r\n                throw new Error(\"helper type must be either 'instance' or 'static'\")\r\n            }\r\n\r\n            // register helper\r\n            if (type === \"instance\")\r\n                this._data.instanceHelpers[name] = helper\r\n            else if (type === \"static\")\r\n                this._data.staticHelpers[name] = helper\r\n\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * returns function store based on what has been set\r\n        */\r\n        build() {\r\n            // check if version list doesnt skip versions\r\n            const versionListSorted = this._data.versionList.sort((a,b)=>a-b);\r\n            versionListSorted.forEach((v, i, arr) => {\r\n                if (i === 0)\r\n                    return;\r\n                if (v !== arr[i-1]+1)\r\n                    throw new Error(\"Version list of store is not incremental\");\r\n            })\r\n\r\n            // version zero must exist\r\n            if (versionListSorted[0] !== 0)\r\n                throw new Error(\"Version 0 doesn't exist in version list of store\");\r\n\r\n            // max version must have init function\r\n            if (!this._data.versions[this._data.maxVersion.toString()].init)\r\n                throw new Error(`Missing create function on version ${this._data.maxVersion} (needed for latest version of store)`);\r\n\r\n            // check storage string\r\n            if (!this._data.storageString)\r\n                throw new Error(\"storage key not set in store\");\r\n\r\n            // build versioned store\r\n            return buildStoreObject(this._data);\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\nimport { Arrow } from './Arrow'\nimport { PercentageOverlay } from './PercentageOverlay'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport './MovieRow.css'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n    const progressData = VideoProgressStore.get();\n    let progress;\n    let percentage = null;\n    \n    if (props.type === \"movie\") {\n        progress = progressData?.[props.source]?.movie?.[props.slug]?.full\n        \n        if (progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    function handleKeyPress(event){\n        if ((event.code === 'Enter' || event.code === 'Space') && props.onClick){\n            props.onClick();\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" tabIndex={0} onKeyPress={handleKeyPress} onClick={() => props.onClick && props.onClick()}>\n        \n            { (props.source === \"lookmovie\" || props.source === \"xemovie\") && (\n                <div className=\"subtitleIcon\">\n                    <svg id=\"subtitleIcon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M20 4H4C2.897 4 2 4.897 2 6V18C2 19.103 2.897 20 4 20H20C21.103 20 22 19.103 22 18V6C22 4.897 21.103 4 20 4ZM11 10H8V14H11V16H8C6.897 16 6 15.103 6 14V10C6 8.897 6.897 8 8 8H11V10ZM18 10H15V14H18V16H15C13.897 16 13 15.103 13 14V10C13 8.897 13.897 8 15 8H18V10Z\" fill=\"#EEEEEE\"/>\n                    </svg>\n                </div>\n            ) }\n        \n            <div className=\"left\">\n                {/* <Cross /> */}\n                <div className=\"titleWrapper\">\n                    <div className=\"titleText\">\n                        {props.title}\n                        &nbsp;\n                        <span className=\"year\">({props.year})</span>\n                        <span className=\"seasonEpisodeSubtitle\">{props.place ? ` - S${props.place.season}:E${props.place.episode}` : ''}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            \n            <PercentageOverlay percentage={props.percentage || percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show ? '' : 'hide'} ${props.failed ? 'failed' : ''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState(null); //{ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] }) \n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n            resetStreamData() { setStreamData(null) }\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { streamData, resetStreamData } = useMovie();\n    const history = useHistory();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n\n    function handleAccentClick(){\n        if (accentLink.length > 0) {\n            history.push(`/${streamData.type}`);\n            resetStreamData();\n        }\n    }\n\n    function handleKeyPress(event){\n        if (event.code === 'Enter' || event.code === 'Space'){\n            handleAccentClick();\n        }\n    }\n    \n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={handleAccentClick} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`} tabIndex={accentLink.length > 0 ? 0 : undefined} onKeyPress={handleKeyPress}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? `title-size-${size}` : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport './TypeSelector.css';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n  const selectedIndex = choices.findIndex(v => v.value === selected);\n  const transformStyles = {\n    opacity: selectedIndex !== -1 ? 1 : 0,\n    transform: `translateX(${selectedIndex !== -1 ? selectedIndex * 7 : 0}rem)`,\n  };\n\n  const handleKeyPress = choice => event => {\n    if (event.code === 'Enter' || event.code === 'Space') {\n      setType(choice);\n    }\n  };\n\n  return (\n    <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n      {choices.map(v => (\n        <div\n          key={v.value}\n          className={`choice ${selected === v.value ? 'selected' : ''}`}\n          onClick={() => setType(v.value)}\n          onKeyPress={handleKeyPress(v.value)}\n          tabIndex={0}\n        >\n          {v.label}\n        </div>\n      ))}\n      <div className=\"selectedBar\" style={transformStyles} />\n    </div>\n  );\n}\n","import Fuse from 'fuse.js'\nimport JSON5 from 'json5'\n\nconst BASE_URL = `https://lookmovie.io`;\nconst API_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie125.xyz`;\nconst CORS_URL = `${process.env.REACT_APP_CORS_PROXY_URL}${BASE_URL}`;\nlet phpsessid;\n\nasync function findContent(searchTerm, type) {\n    try {\n        const searchUrl = `${CORS_URL}/${type}s/search/?q=${encodeURIComponent(searchTerm)}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n    \n        // Parse DOM to find search results on full search page\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        const nodes = Array.from(doc.querySelectorAll('.movie-item-style-1'));\n        const results = nodes.map(node => {\n            return {\n                type,\n                title: node.querySelector('h6 a').innerText.trim(),\n                year: node.querySelector('.year').innerText.trim(),\n                slug: node.querySelector('a').href.split('/').pop(),\n            }\n        });\n    \n        const fuse = new Fuse(results, { threshold: 0.3, distance: 200, keys: [\"title\"] });\n        const matchedResults = fuse\n            .search(searchTerm.toString())\n            .map((result) => result.item);\n    \n        if (matchedResults.length === 0) {\n            return { options: [] }\n        }\n    \n        if (matchedResults.length > 1) {\n            const res = { options: [] };\n    \n            matchedResults.forEach((r) => res.options.push({\n                title: r.title,\n                slug: r.slug,\n                type: r.type,\n                year: r.year,\n                source: 'lookmovie'\n            }));\n    \n            return res;\n        } else {\n            const { title, slug, type, year } = matchedResults[0];\n    \n            return {\n                options: [{ title, slug, type, year, source: 'lookmovie' }]\n            }\n        }\n    } catch (e) {\n        return { options: [] }\n    }\n}\nasync function getVideoUrl(config) {\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${API_URL}/api/v1/security/movie-access?id_movie=${config.id}&token=1&sk=&step=1`;\n    } else if (config.type === 'show') {\n        url = `${API_URL}/api/v1/security/episode-access?id_episode=${config.id}`;\n    }\n\n    const data = await fetch(url, {\n        headers: { phpsessid },\n    }).then((d) => d.json());\n\n    const subs = data?.subtitles.filter((sub) => {\n        if (typeof sub.file === 'object') return false;\n        return true;\n    })\n\n    // Find video URL and return it (with a check for a full url if needed)\n    const opts = [\"1080p\", \"1080\", \"720p\", \"720\", \"480p\", \"480\", \"auto\"];\n\n    let videoUrl = \"\";\n    for (let res of opts) {\n        if (data.streams[res] && !data.streams[res].includes('dummy') && !data.streams[res].includes('earth-1984') && !videoUrl) {\n            videoUrl = data.streams[res]\n        }\n    }\n\n    return {\n        videoUrl: videoUrl.startsWith(\"/\") ? `${BASE_URL}${videoUrl}` : videoUrl, \n        subs: subs, \n    };\n}\n\nasync function getEpisodes(slug) {\n    const url = `${CORS_URL}/shows/view/${slug}`;\n    const pageReq = await fetch(url, {\n        headers: { phpsessid },\n    }).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`show_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let seasons = [];\n    let episodes = [];\n    data.seasons.forEach((e) => {\n        if (!seasons.includes(e.season))\n            seasons.push(e.season);\n\n        if (!episodes[e.season])\n            episodes[e.season] = []\n        episodes[e.season].push(e.episode)\n    })\n\n    return { seasons, episodes }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    const url = `${CORS_URL}/${type}s/view/${slug}`;\n    const pageRes = await fetch(url);\n    if (pageRes.headers.get('phpsessid')) phpsessid = pageRes.headers.get('phpsessid');\n    const pageResText = await pageRes.text();\n\n    const data = JSON5.parse(\"{\" +\n        pageResText\n            .slice(pageResText.indexOf(`${type}_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let id = '';\n\n    if (type === \"movie\") {\n        id = data.id_movie;\n    } else if (type === \"show\") {\n        const episodeObj = data.seasons.find((v) => { return v.season === season && v.episode === episode; });\n\n        if (episodeObj) {\n            id = episodeObj.id_episode;\n        }\n    }\n\n    if (id === '') {\n        return { url: '' }\n    }\n\n    const videoUrl = await getVideoUrl({\n        slug: slug,\n        id: id,\n        type: type,\n    }); \n\n    return { url: videoUrl.videoUrl, subtitles: videoUrl.subs };\n}\n\n\nconst lookMovie = { findContent, getStreamUrl, getEpisodes };\nexport default lookMovie;\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://theflix.to`;\n\nasync function findContent(searchTerm, type) {\n    try {\n        const term = searchTerm.toLowerCase()\n        const tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/search/${type === 'show' ? 'tv' : type}?query=${term}`).then(d => d.text());\n\n        const doc = new DOMParser().parseFromString(tmdbRes, 'text/html');\n        const nodes = Array.from(doc.querySelectorAll('div.results > div > div.wrapper'));\n        const results = nodes.slice(0, 10).map((node) => {\n            let type = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('data-media-type');\n            type = type === 'tv' ? 'show' : type;\n\n            let title;\n            let year;\n            let slug;\n\n            if (type === 'movie') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            } else if (type === 'show') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a > h2').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            }\n\n            return {\n                type: type,\n                title: title,\n                year: year,\n                slug: slug + '-' + title.replace(/[^a-z0-9]+|\\s+/gmi, \" \").replace(/\\s+/g, '-').toLowerCase(),\n                source: 'theflix'\n            }\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getEpisodes(slug) {\n    let tmdbRes;\n    \n    try {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/seasons`).then(d => d.text());\n    } catch (err) {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug.split('-')[0]}/seasons`).then(d => d.text());\n\n        if (tmdbRes)\n            slug = slug.split('-')[0];\n    }\n\n    const sNodes = Array.from(new DOMParser().parseFromString(tmdbRes, 'text/html').querySelectorAll('div.column_wrapper > div.flex > div'));\n\n    let seasons = [];\n    let episodes = [];\n\n    for (let s of sNodes) {\n        const text = s.querySelector('div > section > div > div > div > h2 > a').textContent;\n        if (!text.includes('Season')) continue;\n\n        const season = text.split(' ')[1];\n\n        if (!seasons.includes(season)) {\n            seasons.push(season);\n        }\n\n        if (!episodes[season]) {\n            episodes[season] = [];\n        }\n        \n        const epRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/season/${season}`).then(d => d.text());\n        const epNodes = Array.from(new DOMParser().parseFromString(epRes, 'text/html').querySelectorAll('div.episode_list > div.card'));\n        epNodes.forEach((e, i) => episodes[season].push(++i));\n    }\n    \n    return { seasons, episodes };\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    let url;\n\n    if (type === 'show') {\n        url = `${BASE_URL}/tv-show/${slug}/season-${season}/episode-${episode}`;\n    } else {\n        url = `${BASE_URL}/movie/${slug}?movieInfo=${slug}`;\n    }\n\n    const res = await fetch(url).then(d => d.text());\n\n    const scripts = Array.from(new DOMParser().parseFromString(res, \"text/html\").querySelectorAll('script'));\n    const prop = scripts.find((e) => e.textContent.includes(\"theflixvd.b-cdn\"));\n\n    if (prop) {\n        const data = JSON.parse(prop.textContent);\n        return { url: data.props.pageProps.videoUrl };\n    }\n\n    return { url: '' }\n}\n\nconst theflix = { findContent, getStreamUrl, getEpisodes }\nexport default theflix;\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://stream.vidzstore.com`;\n\nasync function findContent(searchTerm, type) {\n    if (type === 'show') return { options: [] };\n    try {\n        const searchUrl = `${BASE_URL}/search.php?sd=${searchTerm.replace(/ /g, \"_\")}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        const nodes = [...doc.querySelectorAll(\".post\")];\n        const results = nodes.map(node => {\n            const title = node.querySelector(\"a\").title.replace(/-/g, \" \").trim();\n            const titleArray = title.split(\" \");\n            titleArray.splice(-2);\n            return {\n                type,\n                title: titleArray.join(\" \"),\n                year: node.querySelector(\".post-meta\").innerText.split(\" \").pop().split(\"-\").shift(),\n                slug: encodeURIComponent(node.querySelector(\"a\").href.split('/').pop()),\n                source: \"vidzstore\",\n            }\n        });\n\n        return { options: results };\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug) {\n    const url = `${BASE_URL}/${decodeURIComponent(slug)}`;\n\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n\n    return { url: DOM.querySelector(\"source\").src };\n}\n\nconst vidzstore = { findContent, getStreamUrl }\nexport default vidzstore;","import lookmovie from './scraper/lookmovie';\r\nimport xemovie from './scraper/xemovie';\r\nimport theflix from './scraper/theflix';\r\nimport vidzstore from './scraper/vidzstore';\r\n\r\nasync function findContent(searchTerm, type) {\r\n    const results = { options: []};\r\n    const content = await Promise.all([\r\n        // lookmovie.findContent(searchTerm, type),\r\n        xemovie.findContent(searchTerm, type),\r\n        theflix.findContent(searchTerm, type),\r\n        vidzstore.findContent(searchTerm, type)\r\n    ]);\r\n\r\n    content.forEach((o) => {\r\n        if (!o || !o.options) return;\r\n\r\n        o.options.forEach((i) => {\r\n            if (!i) return;\r\n            results.options.push(i)\r\n        })\r\n    });\r\n\r\n    return results;\r\n}\r\n\r\nasync function getStreamUrl(slug, type, source, season, episode) {\r\n    switch (source) {\r\n        case 'lookmovie':\r\n            return await lookmovie.getStreamUrl(slug, type, season, episode);\r\n        case 'theflix':\r\n            return await theflix.getStreamUrl(slug, type, season, episode);\r\n        case 'vidzstore':\r\n            return await vidzstore.getStreamUrl(slug);\r\n        case 'xemovie':\r\n            return await xemovie.getStreamUrl(slug, type, season, episode);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nasync function getEpisodes(slug, source) {\r\n    switch (source) {\r\n        case 'lookmovie':\r\n            return await lookmovie.getEpisodes(slug);\r\n        case 'theflix':\r\n            return await theflix.getEpisodes(slug);\r\n        case 'xemovie':\r\n            return await xemovie.getEpisodes(slug);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nexport { findContent, getStreamUrl, getEpisodes }\r\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Redirect, useHistory, useRouteMatch } from 'react-router-dom';\nimport { Arrow } from '../components/Arrow';\nimport { Card } from '../components/Card';\nimport { ErrorBanner } from '../components/ErrorBanner';\nimport { InputBox } from '../components/InputBox';\nimport { MovieRow } from '../components/MovieRow';\nimport { Progress } from '../components/Progress';\nimport { Title } from '../components/Title';\nimport { TypeSelector } from '../components/TypeSelector';\nimport { useMovie } from '../hooks/useMovie';\nimport { findContent, getEpisodes, getStreamUrl } from '../lib/index';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Search.css';\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const history = useHistory();\n    const routeMatch = useRouteMatch('/:type');\n    const type = routeMatch?.params?.type;\n    const streamRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [errorStatus, setErrorStatus] = React.useState(false);\n    const [page, setPage] = React.useState('search');\n    const [continueWatching, setContinueWatching] = React.useState([])\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type, source, year) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`);\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const data = await getEpisodes(slug, source);\n                seasons = data.seasons;\n                episodes = data.episodes;\n            }\n\n            let realUrl = '';\n            let subtitles = []\n\n            if (type === \"movie\") {\n                const { url, subtitles: subs } = await getStreamUrl(slug, type, source);\n\n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n\n                realUrl = url;\n                subtitles = subs\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug,\n                source,\n                year,\n                subtitles\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            console.error(err);\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType);\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type, source, year } = options[0];\n            history.push(`${routeMatch.url}/${source}/${title}/${slug}`);\n            getStream(title, slug, type, source, year);\n        } catch (err) {\n            console.error(err);\n            fail(`Failed to watch ${contentType}`)\n        }\n    }\n\n    React.useEffect(() => {\n        async function fetchHealth() {\n            await fetch(process.env.REACT_APP_CORS_PROXY_URL).catch(() => {\n                // Request failed; source likely offline\n                setErrorStatus(`Our content provider is currently offline, apologies.`)\n            })\n        }\n        fetchHealth()\n    }, []);\n\n    React.useEffect(() => {\n        if (streamRouteMatch) {\n            if (streamRouteMatch?.params.type === 'movie' || streamRouteMatch.params.type === 'show') getStream(streamRouteMatch.params.title, streamRouteMatch.params.slug, streamRouteMatch.params.type, streamRouteMatch.params.source);\n            else return setErrorStatus(\"Failed to find movie. Please try searching below.\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let newContinueWatching = []\n\n        Object.keys(progressData).forEach((source) => {\n            const all = [\n                ...Object.entries(progressData[source]?.show ?? {}),\n                ...Object.entries(progressData[source]?.movie ?? {})\n            ];\n\n            for (const [slug, data] of all) {\n                for (let subselection of Object.values(data)) {\n                    let entry = {\n                        slug,\n                        data: subselection,\n                        type: subselection.show ? 'show' : 'movie',\n                        percentageDone: Math.floor((subselection.currentlyAt / subselection.totalDuration) * 100),\n                        source\n                    }\n\n                    // due to a constraint with incompatible localStorage data,\n                    // we must quit here if episode and season data is not included\n                    // in the show's data. watching the show will resolve.\n                    if (!subselection.meta) continue;\n\n                    if (entry.percentageDone < 90) {\n                        newContinueWatching.push(entry)\n                        // begin next episode logic\n                    } else {\n                        // we can't do next episode for movies!\n                        if (!subselection.show) continue;\n\n                        let newShow = {};\n\n                        // if the current season has a next episode, load it\n                        if (subselection.meta.episodes[subselection.show.season].includes(`${parseInt(subselection.show.episode) + 1}`)) {\n                            newShow.season = subselection.show.season;\n                            newShow.episode = `${parseInt(subselection.show.episode) + 1}`;\n                            entry.percentageDone = 0;\n                            // if the current season does not have a next epsiode, and the next season has a first episode, load that\n                        } else if (subselection.meta.episodes?.[`${parseInt(subselection.show.season) + 1}`]?.[0]) {\n                            newShow.season = `${parseInt(subselection.show.season) + 1}`;\n                            newShow.episode = subselection.meta.episodes[`${parseInt(subselection.show.season) + 1}`][0];\n                            entry.percentageDone = 0;\n                            // the next episode does not exist\n                        } else {\n                            continue;\n                        }\n\n                        // assign the new episode and season data\n                        entry.data.show = { ...newShow };\n\n                        // if the next episode exists, continue. we don't want to end up with duplicate data.\n                        let nextEpisode = progressData?.[source]?.show?.[slug]?.[`${entry.data.show.season}-${entry.data.show.episode}`];\n                        if (nextEpisode) continue;\n\n                        newContinueWatching.push(entry);\n                    }\n                }\n            }\n\n            newContinueWatching = newContinueWatching.sort((a, b) => {\n                return b.data.updatedAt - a.data.updatedAt\n            });\n\n            setContinueWatching(newContinueWatching)\n        })\n    }, []);\n\n    if (!type || (type !== 'movie' && type !== 'show')) {\n        return <Redirect to=\"/movie\" />\n    }\n\n    const handleKeyPress = page => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setPage(page);\n        }\n    }\n\n    return (\n        <div className=\"cardView\">\n            <Helmet>\n                <title>{type === 'movie' ? 'movies' : 'shows'} | movie-web</title>\n            </Helmet>\n\n            {/* Nav */}\n            <nav>\n                <span className={page === 'search' ? 'selected-link' : ''} onClick={() => setPage('search')} onKeyPress={handleKeyPress('search')} tabIndex={0}>Search</span>\n                {continueWatching.length > 0 ?\n                    <span className={page === 'watching' ? 'selected-link' : ''} onClick={() => setPage('watching')} onKeyPress={handleKeyPress('watching')} tabIndex={0}>Continue watching</span>\n                    : ''}\n            </nav>\n\n            {/* Search */}\n            {page === 'search' ?\n                <React.Fragment>\n                    <Card>\n                        {errorStatus ? <ErrorBanner>{errorStatus}</ErrorBanner> : ''}\n                        <Title accent=\"Because watching content legally is boring\">\n                            What do you wanna watch?\n                        </Title>\n                        <TypeSelector\n                            setType={(type) => history.push(`/${type}`)}\n                            choices={[\n                                { label: \"Movie\", value: \"movie\" },\n                                { label: \"TV Show\", value: \"show\" }\n                            ]}\n                            noWrap={true}\n                            selected={type}\n                        />\n                        <InputBox placeholder={type === \"movie\" ? \"Hamilton\" : \"Atypical\"} onSubmit={(str) => searchMovie(str, type)} />\n                        <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                    </Card>\n\n                    <Card show={showingOptions} doTransition>\n                        <Title size=\"medium\">\n                            Whoops, there are a few {type}s like that\n                        </Title>\n                        {Object.entries(options.reduce((a, v) => {\n                            if (!a[v.source]) a[v.source] = []\n                            a[v.source].push(v)\n                            return a;\n                        }, {})).map(v => (\n                            <div key={v[0]}>\n                                <p className=\"source\">{v[0]}</p>\n                                {v[1].map((v, i) => (\n                                    <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} source={v.source} onClick={() => {\n                                        history.push(`${routeMatch.url}/${v.source}/${v.title}/${v.slug}`);\n                                        setShowingOptions(false)\n                                        getStream(v.title, v.slug, v.type, v.source, v.year)\n                                    }} />\n                                ))}\n                            </div>\n                        ))}\n                    </Card>\n                </React.Fragment> : <React.Fragment />}\n\n            {/* Continue watching */}\n            {continueWatching.length > 0 && page === 'watching' ? <Card>\n                <Title>Continue watching</Title>\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                {continueWatching?.map((v, i) => (\n                    <MovieRow key={i} title={v.data.meta.title} slug={v.data.meta.slug} type={v.type} year={v.data.meta.year} source={v.source} place={v.data.show} percentage={v.percentageDone} deletable onClick={() => {\n                        if (v.type === 'show') {\n                            history.push(`/show/${v.source}/${v.data.meta.title}/${v.slug}/season/${v.data.show.season}/episode/${v.data.show.episode}`)\n                        } else {\n                            history.push(`/movie/${v.source}/${v.data.meta.title}/${v.slug}`)\n                        }\n\n                        setShowingOptions(false)\n                        getStream(v.data.meta.title, v.data.meta.slug, v.type, v.source, v.data.meta.year)\n                    }} />\n                ))}\n            </Card> : <React.Fragment></React.Fragment>}\n\n            <div className=\"topRightCredits\">\n                <a href=\"https://github.com/JamesHawkinss/movie-web\" target=\"_blank\" rel=\"noreferrer\">Check it out on GitHub <Arrow /></a>\n                <br />\n                <a href=\"https://discord.gg/vXsRvye8BS\" target=\"_blank\" rel=\"noreferrer\">Join the Discord <Arrow /></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\nimport './VideoElement.css'\n\n// streamUrl: string\n// loading: boolean\n// setProgress: (event: NativeEvent) => void\n// videoRef: useRef\n// startTime: number\nexport function VideoElement({ streamUrl, loading, setProgress, videoRef, startTime, streamData }) {\n    const [error, setError] = React.useState(false);\n\n    function onLoad() {\n        if (startTime)\n            videoRef.current.currentTime = startTime;\n    }\n\n    React.useEffect(() => {\n        if (!streamUrl.includes('.mp4')) {\n            setError(false)\n            if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n            \n            const hls = new Hls();\n            \n            if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                videoRef.current.src = streamUrl;\n                return;\n            } else if (!Hls.isSupported()) {\n                setError(true)\n                return;\n            }\n            \n            hls.attachMedia(videoRef.current);\n            hls.loadSource(streamUrl);\n        }\n    }, [videoRef, streamUrl, loading]);\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    if (!streamUrl.includes('.mp4')) {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={sub.file} />) }\n            </video>\n        )\n    } else {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={sub.file} />) }\n                <source src={streamUrl} type=\"video/mp4\" />\n            </video>\n        )\n    }\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    const handleKeyPress = choice => event => {\n        if (event.code === 'Space' || event.code === 'Enter'){\n            setType(choice);\n        }\n    }\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\" tabIndex={0} onKeyPress={handleKeyPress(v.value)}>\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import { useRef, useState, useEffect } from \"react\"\nimport \"./SelectBox.css\"\n\nfunction Option({ option, ...props }) {\n    return (\n        <div className=\"option\" {...props}>\n            <input\n                type=\"radio\"\n                className=\"radio\"\n                id={option.id} />\n            <label htmlFor={option.id}>\n                <div className=\"item\">{option.name}</div>\n            </label>\n        </div>\n    )\n}\n\nexport function SelectBox({ options, selectedItem, setSelectedItem }) {\n    if (!Array.isArray(options)) {\n        throw new Error(\"Items must be an array!\")\n    }\n\n    const [active, setActive] = useState(false)\n\n    const containerRef = useRef();\n\n    const handleClick = e => {\n        if (containerRef.current.contains(e.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        closeDropdown()\n    };\n\n    const closeDropdown = () => {\n        setActive(false)\n    }\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onOptionClick = (e, option, i) => {\n        e.stopPropagation()\n        setSelectedItem(i)\n        closeDropdown()\n    }\n\n    const handleSelectedKeyPress = event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setActive(a => !a);\n        }\n    }\n\n    const handleOptionKeyPress = (option, i) => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            onOptionClick(event, option, i);\n        }\n    }\n\n    return (\n        <div className=\"select-box\" ref={containerRef} onClick={() => setActive(a => !a)} >\n            <div className=\"selected\" tabIndex={0} onKeyPress={handleSelectedKeyPress}>\n                {options ? (\n                    <Option option={options[selectedItem]} />\n                ) : null}\n            </div>\n            <div className={\"options-container\" + (active ? \" active\" : \"\")}>\n                {options.map((opt, i) => (\n                    <Option option={opt} key={i} onClick={(e) => onOptionClick(e, opt, i)} tabIndex={active ? 0 : undefined} onKeyPress={active ? handleOptionKeyPress(opt, i) : undefined} />\n                ))}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport { SelectBox } from '../components/SelectBox';\nimport './EpisodeSelector.css'\nimport { useWindowSize } from '../hooks/useWindowSize';\n\nexport function EpisodeSelector({ setSelectedSeason, selectedSeason, setEpisode, seasons, episodes, currentSeason, currentEpisode, streamData }) {\n    const choices = episodes ? episodes.map(v => {\n        const progressData = VideoProgressStore.get();\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[`${selectedSeason}-${v}`]\n\n        if (progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    }) : [];\n\n    const windowSize = useWindowSize()\n\n    return (\n        <div className=\"episodeSelector\">\n            {\n                (seasons.length > 0 && (windowSize.width <= 768 || seasons.length > 4)) ? \n                (\n                    <SelectBox setSelectedItem={(index) => setSelectedSeason(seasons[index])} selectedItem={seasons.findIndex(s => s === selectedSeason)} options={seasons.map(season => { return {id: season, name: `Season ${season}` }})}/>\n                )\n                :\n                (\n                    <TypeSelector setType={setSelectedSeason} selected={selectedSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} />\n                )\n            }\n            <br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: selectedSeason})} choices={choices} selected={(selectedSeason.toString() === currentSeason) ? currentEpisode : null} />\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n  }","import React from 'react'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport { getStreamUrl } from '../lib/index'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Movie.css'\n\nexport function MovieView(props) {\n    const baseRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n    const showRouteMatch = useRouteMatch('/:type/:source/:title/:slug/season/:season/episode/:episode');\n    const history = useHistory();\n\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [ seasonList, setSeasonList ] = React.useState([]);\n    const [ episodeLists, setEpisodeList ] = React.useState([]);\n    const [ loading, setLoading ] = React.useState(false);\n    const [ selectedSeason, setSelectedSeason ] = React.useState(\"1\");\n    const [ startTime, setStartTime ] = React.useState(0);\n    const videoRef = React.useRef(null);\n    let isVideoTimeSet = React.useRef(false);\n\n    const season = showRouteMatch?.params.season || \"1\";\n    const episode = showRouteMatch?.params.episode || \"1\";\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function setEpisode({ season, episode }) {\n        history.push(`${baseRouteMatch.url}/season/${season}/episode/${episode}`);\n        isVideoTimeSet.current = false;\n    }\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && !showRouteMatch) history.replace(`${baseRouteMatch.url}/season/1/episode/1`);\n    }, [streamData.type, showRouteMatch, history, baseRouteMatch.url]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && showRouteMatch) setSelectedSeason(showRouteMatch.params.season.toString());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        let cancel = false;\n\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n\n        if (!episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n\n        setLoading(true);\n        getStreamUrl(streamData.slug, streamData.type, streamData.source, season, episode)\n        .then(({ url, subtitles }) => {\n                if (cancel) return;\n                streamData.subtitles = subtitles;\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch((e) => {\n                if (cancel) return;\n                console.error(e)\n            })\n\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl, season]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            setEpisodeList(streamData.episodes[selectedSeason]);\n        }\n    }, [streamData.seasons, streamData.episodes, streamData.type, selectedSeason])\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        let time = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[key]?.currentlyAt;\n        setStartTime(time);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [baseRouteMatch, showRouteMatch]);\n\n    const setProgress = (evt) => {\n        let progressSave = VideoProgressStore.get();\n\n        if (!progressSave[streamData.source])\n            progressSave[streamData.source] = {}\n        if (!progressSave[streamData.source][streamData.type])\n            progressSave[streamData.source][streamData.type] = {}\n        if (!progressSave[streamData.source][streamData.type][streamData.slug])\n            progressSave[streamData.source][streamData.type][streamData.slug] = {}\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        progressSave[streamData.source][streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now(),\n            meta: streamData\n        }\n\n        if(streamData.type === \"show\") {\n            progressSave[streamData.source][streamData.type][streamData.slug][key].show = {\n                season,\n                episode\n            }\n        }\n\n        progressSave.save();\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Helmet>\n                <title>{streamData.title}{streamData.type === 'show' ? ` | S${season}E${episode}` : ''} | movie-web</title>\n            </Helmet>\n\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {season}: Episode {episode}\n                </Title> : undefined}\n\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} videoRef={videoRef} startTime={startTime} streamData={streamData} />\n\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSelectedSeason={setSelectedSeason}\n                        selectedSeason={selectedSeason}\n\n                        setEpisode={setEpisode}\n\n                        seasons={seasonList}\n                        episodes={episodeLists}\n\n                        currentSeason={season}\n                        currentEpisode={episode}\n\n                        streamData={streamData}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import { SearchView } from './views/Search';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider } from './hooks/useMovie';\nimport './index.css';\n\nfunction Router() {\n  const { streamData } = useMovie();\n  return streamData ? <MovieView /> : <SearchView />;\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router />\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}