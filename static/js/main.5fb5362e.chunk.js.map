{"version":3,"sources":["components/Arrow.js","components/Card.js","components/ErrorBanner.js","components/InputBox.js","components/PercentageOverlay.js","lib/storage/VideoProgress.js","lib/storage/base.js","components/MovieRow.js","components/Progress.js","hooks/useMovie.js","components/Title.js","components/TypeSelector.js","lib/scraper/lookmovie.js","lib/scraper/theflix.js","lib/scraper/vidzstore.js","lib/index.js","views/Search.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/SelectBox.js","components/EpisodeSelector.js","hooks/useWindowSize.js","views/Movie.js","App.js","index.js","lib/scraper/xemovie.js","lib/scraper/gdriveplayer.js"],"names":["Arrow","props","className","dangerouslySetInnerHTML","__html","left","Card","React","useState","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","doTransition","style","ref","children","ErrorBanner","InputBox","onSubmit","placeholder","searchTerm","setSearchTerm","e","preventDefault","type","id","value","onChange","target","required","PercentageOverlay","percentage","Math","max","width","Fragment","VideoProgressStore","_data","versionList","maxVersion","versions","storageString","instanceHelpers","staticHelpers","setKey","str","this","addVersion","version","migrate","create","Error","push","toString","update","data","init","registerHelper","name","helper","constructor","String","Function","includes","build","versionListSorted","sort","a","b","forEach","v","i","arr","d","currentVersion","get","store","localStorage","getItem","JSON","parse","console","error","Object","_","save","setItem","stringify","entries","undefined","bind","obj","Number","buildStoreObject","MovieRow","progress","progressData","source","movie","slug","full","floor","currentlyAt","totalDuration","tabIndex","onKeyPress","event","code","onClick","viewBox","fill","xmlns","title","year","place","season","episode","Progress","failed","text","length","steps","toFixed","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","streamData","setStreamData","Provider","navigate","setStreamUrl","streamUrl","p","resetStreamData","useMovie","useContext","Title","history","useHistory","size","accentLink","accent","handleAccentClick","TypeSelector","setType","choices","selected","noWrap","selectedIndex","findIndex","transformStyles","opacity","transform","map","choice","label","phpsessid","BASE_URL","API_URL","process","CORS_URL","searchUrl","encodeURIComponent","fetch","then","searchRes","parser","DOMParser","doc","parseFromString","nodes","Array","from","querySelectorAll","results","node","querySelector","innerText","trim","href","split","pop","fuse","Fuse","threshold","distance","keys","matchedResults","search","result","item","options","res","r","getVideoUrl","config","url","headers","json","subs","subtitles","filter","sub","file","videoUrl","streams","startsWith","pageReq","JSON5","slice","indexOf","seasons","episodes","pageRes","pageResText","id_movie","episodeObj","find","id_episode","lookMovie","findContent","getStreamUrl","getEpisodes","term","toLowerCase","tmdbRes","getAttribute","textContent","replace","sNodes","s","epRes","scripts","prop","pageProps","theflix","titleArray","splice","join","shift","decodeURIComponent","DOM","src","vidzstore","Promise","all","gdriveplayer","xemovie","o","lookmovie","SearchView","routeMatch","useRouteMatch","params","streamRouteMatch","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","errorStatus","setErrorStatus","continueWatching","setContinueWatching","fail","getStream","realUrl","query","contentType","catch","fetchHealth","newContinueWatching","values","subselection","entry","percentageDone","meta","newShow","parseInt","updatedAt","to","handleKeyPress","Helmet","searchMovie","reduce","deletable","rel","VideoPlaceholder","VideoElement","loading","videoRef","startTime","setError","onLoad","currentTime","log","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","controls","autoPlay","onProgress","onLoadedData","index","kind","language","NumberSelector","Option","option","htmlFor","SelectBox","selectedItem","setSelectedItem","isArray","active","setActive","containerRef","handleClick","contains","closeDropdown","document","addEventListener","removeEventListener","onOptionClick","stopPropagation","handleOptionKeyPress","opt","EpisodeSelector","setSelectedSeason","selectedSeason","setEpisode","currentSeason","currentEpisode","round","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","useWindowSize","MovieView","baseRouteMatch","showRouteMatch","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","setStartTime","isVideoTimeSet","cancel","key","time","evt","progressSave","currentTarget","duration","Date","now","Router","App","ReactDOM","render","StrictMode","getElementById","movieContainer","movieNodes","link","parentElement","Set","mediaUrl","script","match","eval","playlist","tracks","subtitleTrack","URL","blob","subtitleBlob","createObjectURL","format","cipher","ct","ciphertext","CryptoJS","enc","Base64","iv","salt","jsonStr","Hex","lib","CipherParams","imdb","unpacked","unpack","decryptedData","AES","decrypt","Utf8","sources","unmappedSubtitles"],"mappings":"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","file":"static/js/main.5fb5362e.chunk.js","sourcesContent":["import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react'\r\nimport './Card.css'\r\n\r\n// fullWidth: boolean\r\n// show: boolean\r\n// doTransition: boolean\r\nexport function Card(props) {\r\n\r\n    const [showing, setShowing] = React.useState(false);\r\n    const measureRef = React.useRef(null)\r\n    const [height, setHeight] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!measureRef?.current) return;\r\n        setShowing(props.show);\r\n        setHeight(measureRef.current.clientHeight)\r\n    }, [props.show, measureRef])\r\n\r\n    return (\r\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' } ${ props.doTransition ? 'overflow-hidden' : '' }`} style={{\r\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\r\n        }}>\r\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './ErrorBanner.css';\n\nexport function ErrorBanner({children}) {\n\treturn (\n\t\t<div className=\"errorBanner\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div className=\"progressBar\">\n            <div className=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import { versionedStoreBuilder } from './base.js';\r\n\r\n/*\r\nversion 0\r\n{\r\n    [{scraperid}]: {\r\n        movie: {\r\n            [{movie-id}]: {\r\n                full: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        },\r\n        show: {\r\n            [{show-id}]: {\r\n                [{season}-{episode}]: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    show: {\r\n                        episode: string,\r\n                        season: string,\r\n                    },\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\nexport const VideoProgressStore = versionedStoreBuilder()\r\n    .setKey('video-progress')\r\n    .addVersion({\r\n        version: 0,\r\n        create() {\r\n            return {}\r\n        }\r\n    })\r\n    .build()\r\n","function buildStoreObject(d) {\r\n    const data = {\r\n        versions: d.versions,\r\n        currentVersion: d.maxVersion,\r\n        id: d.storageString,\r\n    }\r\n\r\n    function update(obj) {\r\n        if (!obj)\r\n            throw new Error(\"object to update is not an object\");\r\n\r\n        // repeat until object fully updated\r\n        if (obj[\"--version\"] === undefined)\r\n            obj[\"--version\"] = 0;\r\n        while (obj[\"--version\"] !== this.currentVersion) {\r\n            // get version\r\n            let version = obj[\"--version\"] || 0;\r\n            if (version.constructor !== Number || version < 0)\r\n                version = -42; // invalid on purpose so it will reset\r\n            else {\r\n                version = (version+1).toString()\r\n            }\r\n            \r\n            // check if version exists\r\n            if (!this.versions[version]) {\r\n                console.error(`Version not found for storage item in store ${this.id}, resetting`);\r\n                obj = null;\r\n                break;\r\n            }\r\n\r\n            // update object\r\n            obj = this.versions[version].update(obj);\r\n        }\r\n\r\n        // if resulting obj is null, use latest version as init object\r\n        if (obj === null) {\r\n            console.error(`Storage item for store ${this.id} has been reset due to faulty updates`);\r\n            return this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // updates succesful, return\r\n        return obj;\r\n    }\r\n\r\n    function get() {\r\n        // get from storage api\r\n        const store = this;\r\n        let data = localStorage.getItem(this.id);\r\n\r\n        // parse json if item exists\r\n        if (data) {\r\n            try {\r\n                data = JSON.parse(data);\r\n                if (!data.constructor) {\r\n                    console.error(`Storage item for store ${this.id} has not constructor`)\r\n                    throw new Error(\"storage item has no constructor\")\r\n                }\r\n                if (data.constructor !== Object) {\r\n                    console.error(`Storage item for store ${this.id} is not an object`)\r\n                    throw new Error(\"storage item is not an object\")\r\n                }\r\n            } catch (_) {\r\n                // if errored, set to null so it generates new one, see below\r\n                console.error(`Failed to parse storage item for store ${this.id}`)\r\n                data = null;\r\n            }\r\n        }\r\n\r\n        // if item doesnt exist, generate from version init\r\n        if (!data) {\r\n            data = this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // update the data if needed\r\n        data = this.update(data);\r\n\r\n        // add a save object to return value\r\n        data.save = function save() {\r\n            localStorage.setItem(store.id, JSON.stringify(data));\r\n        }\r\n        \r\n        // add instance helpers\r\n        Object.entries(d.instanceHelpers).forEach(([name, helper]) => {\r\n            if (data[name] !== undefined)\r\n                throw new Error(`helper name: ${name} on instance of store ${this.id} is reserved`)\r\n            data[name] = helper.bind(data);\r\n        })\r\n\r\n        // return data\r\n        return data;\r\n    }\r\n\r\n    // add functions to store\r\n    data.get = get.bind(data);\r\n    data.update = update.bind(data);\r\n\r\n    // add static helpers\r\n    Object.entries(d.staticHelpers).forEach(([name, helper]) => {\r\n        if (data[name] !== undefined)\r\n            throw new Error(`helper name: ${name} on store ${data.id} is reserved`)\r\n        data[name] = helper.bind({});\r\n    })\r\n\r\n    return data;\r\n}\r\n\r\n/*\r\n * Builds a versioned store\r\n *\r\n * manages versioning of localstorage items\r\n*/\r\nexport function versionedStoreBuilder() {\r\n    return {\r\n        _data: {\r\n            versionList: [],\r\n            maxVersion: 0,\r\n            versions: {},\r\n            storageString: null,\r\n            instanceHelpers: {},\r\n            staticHelpers: {},\r\n        },\r\n\r\n        /*\r\n         * set key of localstorage item, must be unique\r\n        */\r\n        setKey(str) {\r\n            this._data.storageString = str;\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * add a version to the store\r\n         *\r\n         * version: version number\r\n         * migrate: function to update from previous version to this version\r\n         * create: function to return an empty storage item from this version (in correct syntax)\r\n        */\r\n        addVersion({ version, migrate, create }) {\r\n            // input checking\r\n            if (version < 0)\r\n                throw new Error(\"Cannot add version below 0 in store\");\r\n            if (version > 0 && !migrate)\r\n                throw new Error(`Missing migration on version ${version} (needed for any version above 0)`);\r\n\r\n            // update max version list\r\n            if (version > this._data.maxVersion)\r\n                this._data.maxVersion = version;\r\n            // add to version list\r\n            this._data.versionList.push(version);\r\n\r\n\r\n            // register version\r\n            this._data.versions[version.toString()] = {\r\n                version: version, // version number\r\n                update: migrate ? (data) => { // update function, and increment version\r\n                    migrate(data);\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null,\r\n                init: create ? () => { // return an initial object\r\n                    const data = create();\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * register a instance or static helper to the store \r\n         *\r\n         * name: name of the helper function\r\n         * helper: function to execute, the 'this' context is the current storage item (type is instance)\r\n         * type: \"instance\" or \"static\". instance is put on the storage item when you store.get() it, static is on the store\r\n        */\r\n        registerHelper({ name, helper, type }) {\r\n            // type\r\n            if (!type)\r\n                type = \"instance\"\r\n\r\n            // input checking\r\n            if (!name || name.constructor !== String) {\r\n                throw new Error(\"helper name is not a string\")\r\n            }\r\n            if (!helper || helper.constructor !== Function) {\r\n                throw new Error(\"helper function is not a function\")\r\n            }\r\n            if (![\"instance\", \"static\"].includes(type)) {\r\n                throw new Error(\"helper type must be either 'instance' or 'static'\")\r\n            }\r\n\r\n            // register helper\r\n            if (type === \"instance\")\r\n                this._data.instanceHelpers[name] = helper\r\n            else if (type === \"static\")\r\n                this._data.staticHelpers[name] = helper\r\n\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * returns function store based on what has been set\r\n        */\r\n        build() {\r\n            // check if version list doesnt skip versions\r\n            const versionListSorted = this._data.versionList.sort((a,b)=>a-b);\r\n            versionListSorted.forEach((v, i, arr) => {\r\n                if (i === 0)\r\n                    return;\r\n                if (v !== arr[i-1]+1)\r\n                    throw new Error(\"Version list of store is not incremental\");\r\n            })\r\n\r\n            // version zero must exist\r\n            if (versionListSorted[0] !== 0)\r\n                throw new Error(\"Version 0 doesn't exist in version list of store\");\r\n\r\n            // max version must have init function\r\n            if (!this._data.versions[this._data.maxVersion.toString()].init)\r\n                throw new Error(`Missing create function on version ${this._data.maxVersion} (needed for latest version of store)`);\r\n\r\n            // check storage string\r\n            if (!this._data.storageString)\r\n                throw new Error(\"storage key not set in store\");\r\n\r\n            // build versioned store\r\n            return buildStoreObject(this._data);\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\nimport { Arrow } from './Arrow'\nimport { PercentageOverlay } from './PercentageOverlay'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport './MovieRow.css'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n    const progressData = VideoProgressStore.get();\n    let progress;\n    let percentage = null;\n    \n    if (props.type === \"movie\") {\n        progress = progressData?.[props.source]?.movie?.[props.slug]?.full\n        \n        if (progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    function handleKeyPress(event){\n        if ((event.code === 'Enter' || event.code === 'Space') && props.onClick){\n            props.onClick();\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" tabIndex={0} onKeyPress={handleKeyPress} onClick={() => props.onClick && props.onClick()}>\n        \n            { (props.source === \"lookmovie\" || props.source === \"xemovie\") && (\n                <div className=\"subtitleIcon\">\n                    <svg id=\"subtitleIcon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M20 4H4C2.897 4 2 4.897 2 6V18C2 19.103 2.897 20 4 20H20C21.103 20 22 19.103 22 18V6C22 4.897 21.103 4 20 4ZM11 10H8V14H11V16H8C6.897 16 6 15.103 6 14V10C6 8.897 6.897 8 8 8H11V10ZM18 10H15V14H18V16H15C13.897 16 13 15.103 13 14V10C13 8.897 13.897 8 15 8H18V10Z\" fill=\"#EEEEEE\"/>\n                    </svg>\n                </div>\n            ) }\n        \n            <div className=\"left\">\n                {/* <Cross /> */}\n                <div className=\"titleWrapper\">\n                    <div className=\"titleText\">\n                        {props.title}\n                        &nbsp;\n                        <span className=\"year\">({props.year})</span>\n                        <span className=\"seasonEpisodeSubtitle\">{props.place ? ` - S${props.place.season}:E${props.place.episode}` : ''}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            \n            <PercentageOverlay percentage={props.percentage || percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show ? '' : 'hide'} ${props.failed ? 'failed' : ''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState(null); //{ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] }) \n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n            resetStreamData() { setStreamData(null) }\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { streamData, resetStreamData } = useMovie();\n    const history = useHistory();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n\n    function handleAccentClick(){\n        if (accentLink.length > 0) {\n            history.push(`/${streamData.type}`);\n            resetStreamData();\n        }\n    }\n\n    function handleKeyPress(event){\n        if (event.code === 'Enter' || event.code === 'Space'){\n            handleAccentClick();\n        }\n    }\n    \n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={handleAccentClick} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`} tabIndex={accentLink.length > 0 ? 0 : undefined} onKeyPress={handleKeyPress}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? `title-size-${size}` : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport './TypeSelector.css';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n  const selectedIndex = choices.findIndex(v => v.value === selected);\n  const transformStyles = {\n    opacity: selectedIndex !== -1 ? 1 : 0,\n    transform: `translateX(${selectedIndex !== -1 ? selectedIndex * 7 : 0}rem)`,\n  };\n\n  const handleKeyPress = choice => event => {\n    if (event.code === 'Enter' || event.code === 'Space') {\n      setType(choice);\n    }\n  };\n\n  return (\n    <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n      {choices.map(v => (\n        <div\n          key={v.value}\n          className={`choice ${selected === v.value ? 'selected' : ''}`}\n          onClick={() => setType(v.value)}\n          onKeyPress={handleKeyPress(v.value)}\n          tabIndex={0}\n        >\n          {v.label}\n        </div>\n      ))}\n      <div className=\"selectedBar\" style={transformStyles} />\n    </div>\n  );\n}\n","import Fuse from 'fuse.js'\nimport JSON5 from 'json5'\n\nconst BASE_URL = `https://lookmovie.io`;\nconst API_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie125.xyz`;\nconst CORS_URL = `${process.env.REACT_APP_CORS_PROXY_URL}${BASE_URL}`;\nlet phpsessid;\n\nasync function findContent(searchTerm, type) {\n    try {\n        const searchUrl = `${CORS_URL}/${type}s/search/?q=${encodeURIComponent(searchTerm)}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n    \n        // Parse DOM to find search results on full search page\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        const nodes = Array.from(doc.querySelectorAll('.movie-item-style-1'));\n        const results = nodes.map(node => {\n            return {\n                type,\n                title: node.querySelector('h6 a').innerText.trim(),\n                year: node.querySelector('.year').innerText.trim(),\n                slug: node.querySelector('a').href.split('/').pop(),\n            }\n        });\n    \n        const fuse = new Fuse(results, { threshold: 0.3, distance: 200, keys: [\"title\"] });\n        const matchedResults = fuse\n            .search(searchTerm.toString())\n            .map((result) => result.item);\n    \n        if (matchedResults.length === 0) {\n            return { options: [] }\n        }\n    \n        if (matchedResults.length > 1) {\n            const res = { options: [] };\n    \n            matchedResults.forEach((r) => res.options.push({\n                title: r.title,\n                slug: r.slug,\n                type: r.type,\n                year: r.year,\n                source: 'lookmovie'\n            }));\n    \n            return res;\n        } else {\n            const { title, slug, type, year } = matchedResults[0];\n    \n            return {\n                options: [{ title, slug, type, year, source: 'lookmovie' }]\n            }\n        }\n    } catch (e) {\n        return { options: [] }\n    }\n}\nasync function getVideoUrl(config) {\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${API_URL}/api/v1/security/movie-access?id_movie=${config.id}&token=1&sk=&step=1`;\n    } else if (config.type === 'show') {\n        url = `${API_URL}/api/v1/security/episode-access?id_episode=${config.id}`;\n    }\n\n    const data = await fetch(url, {\n        headers: { phpsessid },\n    }).then((d) => d.json());\n\n    const subs = data?.subtitles.filter((sub) => {\n        if (typeof sub.file === 'object') return false;\n        return true;\n    })\n\n    // Find video URL and return it (with a check for a full url if needed)\n    const opts = [\"1080p\", \"1080\", \"720p\", \"720\", \"480p\", \"480\", \"auto\"];\n\n    let videoUrl = \"\";\n    for (let res of opts) {\n        if (data.streams[res] && !data.streams[res].includes('dummy') && !data.streams[res].includes('earth-1984') && !videoUrl) {\n            videoUrl = data.streams[res]\n        }\n    }\n\n    return {\n        videoUrl: videoUrl.startsWith(\"/\") ? `${BASE_URL}${videoUrl}` : videoUrl, \n        subs: subs, \n    };\n}\n\nasync function getEpisodes(slug) {\n    const url = `${CORS_URL}/shows/view/${slug}`;\n    const pageReq = await fetch(url, {\n        headers: { phpsessid },\n    }).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`show_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let seasons = [];\n    let episodes = [];\n    data.seasons.forEach((e) => {\n        if (!seasons.includes(e.season))\n            seasons.push(e.season);\n\n        if (!episodes[e.season])\n            episodes[e.season] = []\n        episodes[e.season].push(e.episode)\n    })\n\n    return { seasons, episodes }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    const url = `${CORS_URL}/${type}s/view/${slug}`;\n    const pageRes = await fetch(url);\n    if (pageRes.headers.get('phpsessid')) phpsessid = pageRes.headers.get('phpsessid');\n    const pageResText = await pageRes.text();\n\n    const data = JSON5.parse(\"{\" +\n        pageResText\n            .slice(pageResText.indexOf(`${type}_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let id = '';\n\n    if (type === \"movie\") {\n        id = data.id_movie;\n    } else if (type === \"show\") {\n        const episodeObj = data.seasons.find((v) => { return v.season === season && v.episode === episode; });\n\n        if (episodeObj) {\n            id = episodeObj.id_episode;\n        }\n    }\n\n    if (id === '') {\n        return { url: '' }\n    }\n\n    const videoUrl = await getVideoUrl({\n        slug: slug,\n        id: id,\n        type: type,\n    }); \n\n    return { url: videoUrl.videoUrl, subtitles: videoUrl.subs };\n}\n\n\nconst lookMovie = { findContent, getStreamUrl, getEpisodes };\nexport default lookMovie;\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://theflix.to`;\n\nasync function findContent(searchTerm, type) {\n    try {\n        const term = searchTerm.toLowerCase()\n        const tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/search/${type === 'show' ? 'tv' : type}?query=${term}`).then(d => d.text());\n\n        const doc = new DOMParser().parseFromString(tmdbRes, 'text/html');\n        const nodes = Array.from(doc.querySelectorAll('div.results > div > div.wrapper'));\n        const results = nodes.slice(0, 10).map((node) => {\n            let type = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('data-media-type');\n            type = type === 'tv' ? 'show' : type;\n\n            let title;\n            let year;\n            let slug;\n\n            if (type === 'movie') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            } else if (type === 'show') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a > h2').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            }\n\n            return {\n                type: type,\n                title: title,\n                year: year,\n                slug: slug + '-' + title.replace(/[^a-z0-9]+|\\s+/gmi, \" \").replace(/\\s+/g, '-').toLowerCase(),\n                source: 'theflix'\n            }\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getEpisodes(slug) {\n    let tmdbRes;\n    \n    try {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/seasons`).then(d => d.text());\n    } catch (err) {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug.split('-')[0]}/seasons`).then(d => d.text());\n\n        if (tmdbRes)\n            slug = slug.split('-')[0];\n    }\n\n    const sNodes = Array.from(new DOMParser().parseFromString(tmdbRes, 'text/html').querySelectorAll('div.column_wrapper > div.flex > div'));\n\n    let seasons = [];\n    let episodes = [];\n\n    for (let s of sNodes) {\n        const text = s.querySelector('div > section > div > div > div > h2 > a').textContent;\n        if (!text.includes('Season')) continue;\n\n        const season = text.split(' ')[1];\n\n        if (!seasons.includes(season)) {\n            seasons.push(season);\n        }\n\n        if (!episodes[season]) {\n            episodes[season] = [];\n        }\n        \n        const epRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/season/${season}`).then(d => d.text());\n        const epNodes = Array.from(new DOMParser().parseFromString(epRes, 'text/html').querySelectorAll('div.episode_list > div.card'));\n        epNodes.forEach((e, i) => episodes[season].push(++i));\n    }\n    \n    return { seasons, episodes };\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    let url;\n\n    if (type === 'show') {\n        url = `${BASE_URL}/tv-show/${slug}/season-${season}/episode-${episode}`;\n    } else {\n        url = `${BASE_URL}/movie/${slug}?movieInfo=${slug}`;\n    }\n\n    const res = await fetch(url).then(d => d.text());\n\n    const scripts = Array.from(new DOMParser().parseFromString(res, \"text/html\").querySelectorAll('script'));\n    const prop = scripts.find((e) => e.textContent.includes(\"theflixvd.b-cdn\"));\n\n    if (prop) {\n        const data = JSON.parse(prop.textContent);\n        return { url: data.props.pageProps.videoUrl };\n    }\n\n    return { url: '' }\n}\n\nconst theflix = { findContent, getStreamUrl, getEpisodes }\nexport default theflix;\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://stream.vidzstore.com`;\n\nasync function findContent(searchTerm, type) {\n    if (type === 'show') return { options: [] };\n    try {\n        const searchUrl = `${BASE_URL}/search.php?sd=${searchTerm.replace(/ /g, \"_\")}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        const nodes = [...doc.querySelectorAll(\".post\")];\n        const results = nodes.map(node => {\n            const title = node.querySelector(\"a\").title.replace(/-/g, \" \").trim();\n            const titleArray = title.split(\" \");\n            titleArray.splice(-2);\n            return {\n                type,\n                title: titleArray.join(\" \"),\n                year: node.querySelector(\".post-meta\").innerText.split(\" \").pop().split(\"-\").shift(),\n                slug: encodeURIComponent(node.querySelector(\"a\").href.split('/').pop()),\n                source: \"vidzstore\",\n            }\n        });\n\n        return { options: results };\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug) {\n    const url = `${BASE_URL}/${decodeURIComponent(slug)}`;\n\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n\n    return { url: DOM.querySelector(\"source\").src };\n}\n\nconst vidzstore = { findContent, getStreamUrl }\nexport default vidzstore;","import lookmovie from './scraper/lookmovie';\r\nimport xemovie from './scraper/xemovie';\r\nimport theflix from './scraper/theflix';\r\nimport vidzstore from './scraper/vidzstore';\r\nimport gdriveplayer from './scraper/gdriveplayer';\r\n\r\nasync function findContent(searchTerm, type) {\r\n    const results = { options: []};\r\n    const content = await Promise.all([\r\n        theflix.findContent(searchTerm, type),\r\n        gdriveplayer.findContent(searchTerm, type),\r\n        xemovie.findContent(searchTerm, type),\r\n        vidzstore.findContent(searchTerm, type),\r\n    ]);\r\n\r\n    content.forEach((o) => {\r\n        if (!o || !o.options) return;\r\n\r\n        o.options.forEach((i) => {\r\n            if (!i) return;\r\n            results.options.push(i)\r\n        })\r\n    });\r\n\r\n    return results;\r\n}\r\n\r\nasync function getStreamUrl(slug, type, source, season, episode) {\r\n    switch (source) {\r\n        case 'lookmovie':\r\n            return await lookmovie.getStreamUrl(slug, type, season, episode);\r\n        case 'theflix':\r\n            return await theflix.getStreamUrl(slug, type, season, episode);\r\n        case 'vidzstore':\r\n            return await vidzstore.getStreamUrl(slug);\r\n        case 'xemovie':\r\n            return await xemovie.getStreamUrl(slug, type, season, episode);\r\n        case 'gdriveplayer':\r\n            return await gdriveplayer.getStreamUrl(slug, type, season, episode);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nasync function getEpisodes(slug, source) {\r\n    switch (source) {\r\n        case 'lookmovie':\r\n            return await lookmovie.getEpisodes(slug);\r\n        case 'theflix':\r\n            return await theflix.getEpisodes(slug);\r\n        case 'xemovie':\r\n            return await xemovie.getEpisodes(slug);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nexport { findContent, getStreamUrl, getEpisodes }\r\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Redirect, useHistory, useRouteMatch } from 'react-router-dom';\nimport { Arrow } from '../components/Arrow';\nimport { Card } from '../components/Card';\nimport { ErrorBanner } from '../components/ErrorBanner';\nimport { InputBox } from '../components/InputBox';\nimport { MovieRow } from '../components/MovieRow';\nimport { Progress } from '../components/Progress';\nimport { Title } from '../components/Title';\nimport { TypeSelector } from '../components/TypeSelector';\nimport { useMovie } from '../hooks/useMovie';\nimport { findContent, getEpisodes, getStreamUrl } from '../lib/index';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Search.css';\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const history = useHistory();\n    const routeMatch = useRouteMatch('/:type');\n    const type = routeMatch?.params?.type;\n    const streamRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [errorStatus, setErrorStatus] = React.useState(false);\n    const [page, setPage] = React.useState('search');\n    const [continueWatching, setContinueWatching] = React.useState([])\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type, source, year) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`);\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const data = await getEpisodes(slug, source);\n                seasons = data.seasons;\n                episodes = data.episodes;\n            }\n\n            let realUrl = '';\n            let subtitles = []\n\n            if (type === \"movie\") {\n                const { url, subtitles: subs } = await getStreamUrl(slug, type, source);\n\n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n\n                realUrl = url;\n                subtitles = subs\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug,\n                source,\n                year,\n                subtitles\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            console.error(err);\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType);\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type, source, year } = options[0];\n            history.push(`${routeMatch.url}/${source}/${title}/${slug}`);\n            getStream(title, slug, type, source, year);\n        } catch (err) {\n            console.error(err);\n            fail(`Failed to watch ${contentType}`)\n        }\n    }\n\n    React.useEffect(() => {\n        async function fetchHealth() {\n            await fetch(process.env.REACT_APP_CORS_PROXY_URL).catch(() => {\n                // Request failed; source likely offline\n                setErrorStatus(`Our content provider is currently offline, apologies.`)\n            })\n        }\n        fetchHealth()\n    }, []);\n\n    React.useEffect(() => {\n        if (streamRouteMatch) {\n            if (streamRouteMatch?.params.type === 'movie' || streamRouteMatch.params.type === 'show') getStream(streamRouteMatch.params.title, streamRouteMatch.params.slug, streamRouteMatch.params.type, streamRouteMatch.params.source);\n            else return setErrorStatus(\"Failed to find movie. Please try searching below.\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let newContinueWatching = []\n\n        Object.keys(progressData).forEach((source) => {\n            const all = [\n                ...Object.entries(progressData[source]?.show ?? {}),\n                ...Object.entries(progressData[source]?.movie ?? {})\n            ];\n\n            for (const [slug, data] of all) {\n                for (let subselection of Object.values(data)) {\n                    let entry = {\n                        slug,\n                        data: subselection,\n                        type: subselection.show ? 'show' : 'movie',\n                        percentageDone: Math.floor((subselection.currentlyAt / subselection.totalDuration) * 100),\n                        source\n                    }\n\n                    // due to a constraint with incompatible localStorage data,\n                    // we must quit here if episode and season data is not included\n                    // in the show's data. watching the show will resolve.\n                    if (!subselection.meta) continue;\n\n                    if (entry.percentageDone < 90) {\n                        newContinueWatching.push(entry)\n                        // begin next episode logic\n                    } else {\n                        // we can't do next episode for movies!\n                        if (!subselection.show) continue;\n\n                        let newShow = {};\n\n                        // if the current season has a next episode, load it\n                        if (subselection.meta.episodes[subselection.show.season].includes(`${parseInt(subselection.show.episode) + 1}`)) {\n                            newShow.season = subselection.show.season;\n                            newShow.episode = `${parseInt(subselection.show.episode) + 1}`;\n                            entry.percentageDone = 0;\n                            // if the current season does not have a next epsiode, and the next season has a first episode, load that\n                        } else if (subselection.meta.episodes?.[`${parseInt(subselection.show.season) + 1}`]?.[0]) {\n                            newShow.season = `${parseInt(subselection.show.season) + 1}`;\n                            newShow.episode = subselection.meta.episodes[`${parseInt(subselection.show.season) + 1}`][0];\n                            entry.percentageDone = 0;\n                            // the next episode does not exist\n                        } else {\n                            continue;\n                        }\n\n                        // assign the new episode and season data\n                        entry.data.show = { ...newShow };\n\n                        // if the next episode exists, continue. we don't want to end up with duplicate data.\n                        let nextEpisode = progressData?.[source]?.show?.[slug]?.[`${entry.data.show.season}-${entry.data.show.episode}`];\n                        if (nextEpisode) continue;\n\n                        newContinueWatching.push(entry);\n                    }\n                }\n            }\n\n            newContinueWatching = newContinueWatching.sort((a, b) => {\n                return b.data.updatedAt - a.data.updatedAt\n            });\n\n            setContinueWatching(newContinueWatching)\n        })\n    }, []);\n\n    if (!type || (type !== 'movie' && type !== 'show')) {\n        return <Redirect to=\"/movie\" />\n    }\n\n    const handleKeyPress = page => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setPage(page);\n        }\n    }\n\n    return (\n        <div className=\"cardView\">\n            <Helmet>\n                <title>{type === 'movie' ? 'movies' : 'shows'} | movie-web</title>\n            </Helmet>\n\n            {/* Nav */}\n            <nav>\n                <span className={page === 'search' ? 'selected-link' : ''} onClick={() => setPage('search')} onKeyPress={handleKeyPress('search')} tabIndex={0}>Search</span>\n                {continueWatching.length > 0 ?\n                    <span className={page === 'watching' ? 'selected-link' : ''} onClick={() => setPage('watching')} onKeyPress={handleKeyPress('watching')} tabIndex={0}>Continue watching</span>\n                    : ''}\n            </nav>\n\n            {/* Search */}\n            {page === 'search' ?\n                <React.Fragment>\n                    <Card>\n                        {errorStatus ? <ErrorBanner>{errorStatus}</ErrorBanner> : ''}\n                        <Title accent=\"Because watching content legally is boring\">\n                            What do you wanna watch?\n                        </Title>\n                        <TypeSelector\n                            setType={(type) => history.push(`/${type}`)}\n                            choices={[\n                                { label: \"Movie\", value: \"movie\" },\n                                { label: \"TV Show\", value: \"show\" }\n                            ]}\n                            noWrap={true}\n                            selected={type}\n                        />\n                        <InputBox placeholder={type === \"movie\" ? \"Hamilton\" : \"Atypical\"} onSubmit={(str) => searchMovie(str, type)} />\n                        <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                    </Card>\n\n                    <Card show={showingOptions} doTransition>\n                        <Title size=\"medium\">\n                            Whoops, there are a few {type}s like that\n                        </Title>\n                        {Object.entries(options.reduce((a, v) => {\n                            if (!a[v.source]) a[v.source] = []\n                            a[v.source].push(v)\n                            return a;\n                        }, {})).map(v => (\n                            <div key={v[0]}>\n                                <p className=\"source\">{v[0]}</p>\n                                {v[1].map((v, i) => (\n                                    <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} source={v.source} onClick={() => {\n                                        history.push(`${routeMatch.url}/${v.source}/${v.title}/${v.slug}`);\n                                        setShowingOptions(false)\n                                        getStream(v.title, v.slug, v.type, v.source, v.year)\n                                    }} />\n                                ))}\n                            </div>\n                        ))}\n                    </Card>\n                </React.Fragment> : <React.Fragment />}\n\n            {/* Continue watching */}\n            {continueWatching.length > 0 && page === 'watching' ? <Card>\n                <Title>Continue watching</Title>\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                {continueWatching?.map((v, i) => (\n                    <MovieRow key={i} title={v.data.meta.title} slug={v.data.meta.slug} type={v.type} year={v.data.meta.year} source={v.source} place={v.data.show} percentage={v.percentageDone} deletable onClick={() => {\n                        if (v.type === 'show') {\n                            history.push(`/show/${v.source}/${v.data.meta.title}/${v.slug}/season/${v.data.show.season}/episode/${v.data.show.episode}`)\n                        } else {\n                            history.push(`/movie/${v.source}/${v.data.meta.title}/${v.slug}`)\n                        }\n\n                        setShowingOptions(false)\n                        getStream(v.data.meta.title, v.data.meta.slug, v.type, v.source, v.data.meta.year)\n                    }} />\n                ))}\n            </Card> : <React.Fragment></React.Fragment>}\n\n            <div className=\"topRightCredits\">\n                <a href=\"https://github.com/JamesHawkinss/movie-web\" target=\"_blank\" rel=\"noreferrer\">Check it out on GitHub <Arrow /></a>\n                <br />\n                <a href=\"https://discord.gg/vXsRvye8BS\" target=\"_blank\" rel=\"noreferrer\">Join the Discord <Arrow /></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\nimport './VideoElement.css'\n\n// streamUrl: string\n// loading: boolean\n// setProgress: (event: NativeEvent) => void\n// videoRef: useRef\n// startTime: number\nexport function VideoElement({ streamUrl, loading, setProgress, videoRef, startTime, streamData }) {\n    const [error, setError] = React.useState(false);\n\n    function onLoad() {\n        if (startTime)\n            videoRef.current.currentTime = startTime;\n    }\n\n    React.useEffect(() => {\n        if (!streamUrl.includes('.mp4') && !streamUrl.includes('redirector.php')) {\n            console.log(streamUrl)\n            setError(false)\n            if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n            \n            const hls = new Hls();\n            \n            if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                videoRef.current.src = streamUrl;\n                return;\n            } else if (!Hls.isSupported()) {\n                setError(true)\n                return;\n            }\n            \n            hls.attachMedia(videoRef.current);\n            hls.loadSource(streamUrl);\n        }\n    }, [videoRef, streamUrl, loading]);\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    if (!streamUrl.includes('.mp4') && !streamUrl.includes('redirector.php')) {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={sub.file} />) }\n            </video>\n        )\n    } else {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={sub.file} />) }\n                <source src={streamUrl} type=\"video/mp4\" />\n            </video>\n        )\n    }\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    const handleKeyPress = choice => event => {\n        if (event.code === 'Space' || event.code === 'Enter'){\n            setType(choice);\n        }\n    }\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\" tabIndex={0} onKeyPress={handleKeyPress(v.value)}>\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import { useRef, useState, useEffect } from \"react\"\nimport \"./SelectBox.css\"\n\nfunction Option({ option, ...props }) {\n    return (\n        <div className=\"option\" {...props}>\n            <input\n                type=\"radio\"\n                className=\"radio\"\n                id={option.id} />\n            <label htmlFor={option.id}>\n                <div className=\"item\">{option.name}</div>\n            </label>\n        </div>\n    )\n}\n\nexport function SelectBox({ options, selectedItem, setSelectedItem }) {\n    if (!Array.isArray(options)) {\n        throw new Error(\"Items must be an array!\")\n    }\n\n    const [active, setActive] = useState(false)\n\n    const containerRef = useRef();\n\n    const handleClick = e => {\n        if (containerRef.current.contains(e.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        closeDropdown()\n    };\n\n    const closeDropdown = () => {\n        setActive(false)\n    }\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onOptionClick = (e, option, i) => {\n        e.stopPropagation()\n        setSelectedItem(i)\n        closeDropdown()\n    }\n\n    const handleSelectedKeyPress = event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setActive(a => !a);\n        }\n    }\n\n    const handleOptionKeyPress = (option, i) => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            onOptionClick(event, option, i);\n        }\n    }\n\n    return (\n        <div className=\"select-box\" ref={containerRef} onClick={() => setActive(a => !a)} >\n            <div className=\"selected\" tabIndex={0} onKeyPress={handleSelectedKeyPress}>\n                {options ? (\n                    <Option option={options[selectedItem]} />\n                ) : null}\n            </div>\n            <div className={\"options-container\" + (active ? \" active\" : \"\")}>\n                {options.map((opt, i) => (\n                    <Option option={opt} key={i} onClick={(e) => onOptionClick(e, opt, i)} tabIndex={active ? 0 : undefined} onKeyPress={active ? handleOptionKeyPress(opt, i) : undefined} />\n                ))}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport { SelectBox } from '../components/SelectBox';\nimport './EpisodeSelector.css'\nimport { useWindowSize } from '../hooks/useWindowSize';\n\nexport function EpisodeSelector({ setSelectedSeason, selectedSeason, setEpisode, seasons, episodes, currentSeason, currentEpisode, streamData }) {\n    const choices = episodes ? episodes.map(v => {\n        const progressData = VideoProgressStore.get();\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[`${selectedSeason}-${v}`]\n\n        if (progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    }) : [];\n\n    const windowSize = useWindowSize()\n\n    return (\n        <div className=\"episodeSelector\">\n            {\n                (seasons.length > 0 && (windowSize.width <= 768 || seasons.length > 4)) ? \n                (\n                    <SelectBox setSelectedItem={(index) => setSelectedSeason(seasons[index])} selectedItem={seasons.findIndex(s => s === selectedSeason)} options={seasons.map(season => { return {id: season, name: `Season ${season}` }})}/>\n                )\n                :\n                (\n                    <TypeSelector setType={setSelectedSeason} selected={selectedSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} />\n                )\n            }\n            <br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: selectedSeason})} choices={choices} selected={(selectedSeason.toString() === currentSeason) ? currentEpisode : null} />\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n  }","import React from 'react'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport { getStreamUrl } from '../lib/index'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Movie.css'\n\nexport function MovieView(props) {\n    const baseRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n    const showRouteMatch = useRouteMatch('/:type/:source/:title/:slug/season/:season/episode/:episode');\n    const history = useHistory();\n\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [ seasonList, setSeasonList ] = React.useState([]);\n    const [ episodeLists, setEpisodeList ] = React.useState([]);\n    const [ loading, setLoading ] = React.useState(false);\n    const [ selectedSeason, setSelectedSeason ] = React.useState(\"1\");\n    const [ startTime, setStartTime ] = React.useState(0);\n    const videoRef = React.useRef(null);\n    let isVideoTimeSet = React.useRef(false);\n\n    const season = showRouteMatch?.params.season || \"1\";\n    const episode = showRouteMatch?.params.episode || \"1\";\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function setEpisode({ season, episode }) {\n        history.push(`${baseRouteMatch.url}/season/${season}/episode/${episode}`);\n        isVideoTimeSet.current = false;\n    }\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && !showRouteMatch) history.replace(`${baseRouteMatch.url}/season/1/episode/1`);\n    }, [streamData.type, showRouteMatch, history, baseRouteMatch.url]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && showRouteMatch) setSelectedSeason(showRouteMatch.params.season.toString());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        let cancel = false;\n\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n\n        if (!episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n\n        setLoading(true);\n        getStreamUrl(streamData.slug, streamData.type, streamData.source, season, episode)\n        .then(({ url, subtitles }) => {\n                if (cancel) return;\n                streamData.subtitles = subtitles;\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch((e) => {\n                if (cancel) return;\n                console.error(e)\n            })\n\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl, season]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            setEpisodeList(streamData.episodes[selectedSeason]);\n        }\n    }, [streamData.seasons, streamData.episodes, streamData.type, selectedSeason])\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        let time = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[key]?.currentlyAt;\n        setStartTime(time);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [baseRouteMatch, showRouteMatch]);\n\n    const setProgress = (evt) => {\n        let progressSave = VideoProgressStore.get();\n\n        if (!progressSave[streamData.source])\n            progressSave[streamData.source] = {}\n        if (!progressSave[streamData.source][streamData.type])\n            progressSave[streamData.source][streamData.type] = {}\n        if (!progressSave[streamData.source][streamData.type][streamData.slug])\n            progressSave[streamData.source][streamData.type][streamData.slug] = {}\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        progressSave[streamData.source][streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now(),\n            meta: streamData\n        }\n\n        if(streamData.type === \"show\") {\n            progressSave[streamData.source][streamData.type][streamData.slug][key].show = {\n                season,\n                episode\n            }\n        }\n\n        progressSave.save();\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Helmet>\n                <title>{streamData.title}{streamData.type === 'show' ? ` | S${season}E${episode}` : ''} | movie-web</title>\n            </Helmet>\n\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {season}: Episode {episode}\n                </Title> : undefined}\n\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} videoRef={videoRef} startTime={startTime} streamData={streamData} />\n\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSelectedSeason={setSelectedSeason}\n                        selectedSeason={selectedSeason}\n\n                        setEpisode={setEpisode}\n\n                        seasons={seasonList}\n                        episodes={episodeLists}\n\n                        currentSeason={season}\n                        currentEpisode={episode}\n\n                        streamData={streamData}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import { SearchView } from './views/Search';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider } from './hooks/useMovie';\nimport './index.css';\n\nfunction Router() {\n  const { streamData } = useMovie();\n  return streamData ? <MovieView /> : <SearchView />;\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router />\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","import Fuse from 'fuse.js'\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://xemovie.co`;\n\nasync function findContent(searchTerm, type) {\n    try {\n        let results;\n\n        const searchUrl = `${BASE_URL}/search?q=${encodeURIComponent(searchTerm)}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        switch (type) {\n            case 'show':\n                // const showContainer = doc.querySelectorAll(\".py-10\")[1].querySelector(\".grid\");\n                // const showNodes = [...showContainer.querySelectorAll(\"a\")].filter(link => !link.className);\n                // results = showNodes.map(node => {\n                //     node = node.parentElement\n                //     return {\n                //         type,\n                //         title: [...new Set(node.innerText.split(\"\\n\"))][1].split(\"(\")[0].trim(),\n                //         year: [...new Set(node.innerText.split(\"\\n\"))][3],\n                //         slug: node.querySelector(\"a\").href.split('/').pop(),\n                //         source: \"xemovie\"\n                //     }\n                // })\n                // break;\n                return { options: [] };\n            case 'movie':\n                const movieContainer = doc.querySelectorAll(\".py-10\")[0].querySelector(\".grid\");\n                const movieNodes = [...movieContainer.querySelectorAll(\"a\")].filter(link => !link.className);\n                results = movieNodes.map(node => {\n                    node = node.parentElement\n                    return {\n                        type,\n                        title: [...new Set(node.innerText.split(\"\\n\"))][1].split(\"(\")[0].trim(),\n                        year: [...new Set(node.innerText.split(\"\\n\"))][3],\n                        slug: node.querySelector(\"a\").href.split('/').pop(),\n                        source: \"xemovie\"\n                    }\n                })\n                break;\n            default:\n                results = [];\n                break;\n        }\n\n        const fuse = new Fuse(results, { threshold: 0.3, keys: [\"title\"] });\n        const matchedResults = fuse\n            .search(searchTerm)\n            .map(result => result.item);\n\n        if (matchedResults.length === 0) {\n            return { options: [] };\n        }\n\n        if (matchedResults.length > 1) {\n            const res = { options: [] };\n    \n            matchedResults.forEach((r) => res.options.push({\n                title: r.title,\n                slug: r.slug,\n                type: r.type,\n                year: r.year,\n                source: 'xemovie'\n            }));\n    \n            return res;\n        } else {\n            const { title, slug, type, year } = matchedResults[0];\n    \n            return {\n                options: [{ title, slug, type, year, source: 'xemovie' }]\n            }\n        }\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    let url;\n\n    if (type === \"show\") {\n\n    } else {\n        url = `${BASE_URL}/movies/${slug}/watch`;\n    }\n\n    let mediaUrl = \"\";\n    let subtitles = [];\n\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n\n    for (const script of DOM.scripts) {\n        if (script.textContent.match(/https:\\/\\/s[0-9]\\.xemovie\\.com/)) {\n            // eslint-disable-next-line\n            let data = JSON.parse(JSON.stringify(eval(`(${script.textContent.replace(\"const data = \", \"\").split(\"};\")[0]}})`)));\n            mediaUrl = data.playlist[0].file;\n            for (const subtitleTrack of data.playlist[0].tracks) {\n                const subtitleBlob = URL.createObjectURL(await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}${subtitleTrack.file}`).then(res => res.blob())); // do this so no need for CORS errors\n                subtitles.push({\n                    file: subtitleBlob,\n                    language: subtitleTrack.label\n                })\n            }\n        }\n    }\n    return { url: mediaUrl, subtitles: subtitles }\n}\n\nasync function getEpisodes(slug) {\n\n}\n\nconst xemovie = { findContent, getStreamUrl, getEpisodes }\nexport default xemovie;","// THIS SCRAPER CURRENTLY WORKS AND IS IN USE\nimport CryptoJS from \"crypto-js\";\nimport { unpack } from \"unpacker\";\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://database.gdriveplayer.us`;\nconst API_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://api.gdriveplayer.us`;\n\nconst format = {\n    stringify: (cipher) => {\n        const ct = cipher.ciphertext.toString(CryptoJS.enc.Base64);\n        const iv = cipher.iv.toString() || \"\";\n        const salt = cipher.salt.toString() || \"\";\n        return JSON.stringify({\n            ct,\n            iv,\n            salt,\n        });\n    },\n    parse: (jsonStr) => {\n        const json = JSON.parse(jsonStr);\n        const ciphertext = CryptoJS.enc.Base64.parse(json.ct);\n        const iv = CryptoJS.enc.Hex.parse(json.iv) || \"\";\n        const salt = CryptoJS.enc.Hex.parse(json.s) || \"\";\n\n        const cipher = CryptoJS.lib.CipherParams.create({\n            ciphertext,\n            iv,\n            salt,\n        });\n        return cipher;\n    }\n};\n\nasync function findContent(searchTerm, type) {\n    if (type === 'show') return { options: [] }; // will be like this until rewrite\n    try {\n        const searchUrl = `${API_URL}/v1/movie/search?title=${searchTerm}`;\n        const searchRes = await fetch(searchUrl).then((r) => r.json());\n        const results = searchRes.map(movie => {\n            return {\n                type,\n                title: movie.title,\n                year: movie.year,\n                slug: encodeURIComponent(`player.php?imdb=${movie.imdb}`),\n                source: \"gdriveplayer\",\n            }\n        });\n\n        return { options: results };\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug) {\n    const url = `${BASE_URL}/${decodeURIComponent(slug)}`;\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n    \n    const script = [...DOM.querySelectorAll(\"script\")].find(s => s.textContent.includes(\"eval\"));\n    const unpacked = unpack(script.textContent);\n\n    const data = unpacked.split(\"var data=\\\\'\")[1].split(\"\\\\'\")[0].replace(/\\\\/g, \"\");\n    const decryptedData = unpack(CryptoJS.AES.decrypt(data, \"alsfheafsjklNIWORNiolNIOWNKLNXakjsfwnBdwjbwfkjbJjkopfjweopjASoiwnrflakefneiofrt\", { format }).toString(CryptoJS.enc.Utf8));\n    // eslint-disable-next-line\n    const sources = JSON.parse(JSON.stringify(eval(decryptedData.split(\"sources:\")[1].split(\",image\")[0].replace(/\\\\/g, \"\").replace(/document\\.referrer/g, \"\\\"\\\"\"))));\n    const unmappedSubtitles = JSON.parse(DOM.querySelector(\"#subtitlez\").textContent).filter(s => s.file.length !== 2);\n    const subtitles = unmappedSubtitles.map(async (sub) => {\n        const subtitleBlob = URL.createObjectURL(await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}${sub.file}`).then(res => res.blob()));\n        return {\n            file: subtitleBlob,\n            language: sub.label,\n        }\n    });\n\n    return { url: sources[sources.length - 1].file, subtitles };\n}\n\nconst gdriveplayer = { findContent, getStreamUrl }\nexport default gdriveplayer;"],"sourceRoot":""}