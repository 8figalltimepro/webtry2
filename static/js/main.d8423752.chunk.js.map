{"version":3,"sources":["components/Arrow.js","components/InputBox.js","hooks/useMovie.js","components/Title.js","components/Card.js","components/PercentageOverlay.js","components/MovieRow.js","components/Progress.js","lib/lookMovie.js","components/TypeSelector.js","views/Search.js","views/NotFound.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/EpisodeSelector.js","views/Movie.js","App.js","index.js"],"names":["Arrow","props","className","dangerouslySetInnerHTML","__html","left","InputBox","onSubmit","placeholder","React","useState","searchTerm","setSearchTerm","e","preventDefault","type","id","value","onChange","target","required","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","title","slug","episodes","seasons","streamData","setStreamData","Provider","navigate","str","setStreamUrl","streamUrl","d","p","children","useMovie","useContext","Title","size","accentLink","accent","length","onClick","Card","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","style","doTransition","ref","PercentageOverlay","percentage","Math","max","class","width","Fragment","MovieRow","progress","progressData","JSON","parse","localStorage","getItem","lookmovie","movie","full","floor","currentlyAt","totalDuration","year","Progress","failed","text","steps","toFixed","getCorsUrl","url","getVideoUrl","config","a","getAccessToken","accessToken","now","Date","fetch","then","json","videoOpts","videoUrl","res","includes","startsWith","data","token","getEpisodes","pageReq","JSON5","slice","indexOf","split","trim","getStreamUrl","season","episode","id_movie","episodeObj","find","v","id_episode","findContent","searchUrl","encodeURIComponent","searchRes","parser","DOMParser","doc","parseFromString","nodes","Array","from","querySelectorAll","results","map","node","querySelector","innerText","href","pop","fuse","Fuse","threshold","distance","keys","matchedResults","search","toString","result","item","options","forEach","r","push","TypeSelector","setType","choices","selected","noWrap","selectedIndex","findIndex","transformStyles","opacity","transform","label","SearchView","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","fail","getStream","realUrl","query","contentType","searchMovie","i","rel","NotFound","VideoPlaceholder","VideoElement","loading","videoRef","error","setError","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","src","controls","autoPlay","onProgress","NumberSelector","EpisodeSelector","setSeason","setEpisode","currentSeason","currentEpisode","round","MovieView","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","cancel","catch","console","undefined","evt","ls","key","currentTarget","currentTime","duration","updatedAt","setItem","stringify","Router","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8423752.chunk.js","sourcesContent":["import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState({ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] })\n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { navigate } = useMovie();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={ () => accentLink.length > 0 && navigate(accentLink)} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? 'title-size-' + size : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Card.css'\n\n// fullWidth: boolean\n// show: boolean\n// doTransition: boolean\nexport function Card(props) {\n\n    const [showing, setShowing] = React.useState(false);\n    const measureRef = React.useRef(null)\n    const [height, setHeight] = React.useState(0);\n\n    React.useEffect(() => {\n        if (!measureRef?.current) return;\n        setShowing(props.show);\n        setHeight(measureRef.current.clientHeight)\n    }, [props.show, measureRef])\n\n    return (\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' }`} style={{\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\n        }}>\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div class=\"progressBar\">\n            <div class=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import React from 'react'\nimport { Arrow } from './Arrow'\nimport './MovieRow.css'\nimport { PercentageOverlay } from './PercentageOverlay'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n\n    const progressData = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n    let progress;\n    let percentage = null;\n    if(props.type === \"movie\") {\n        progress = progressData?.lookmovie?.movie?.[props.slug]?.full\n        if(progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" onClick={() => props.onClick && props.onClick()}>\n            <div className=\"left\">\n                {props.title}&nbsp;\n                <span className=\"year\">({props.year})</span>\n            </div>\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            <PercentageOverlay percentage={percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show?'':'hide'} ${props.failed?'failed':''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import Fuse from 'fuse.js'\nimport JSON5 from 'json5'\n\nfunction getCorsUrl(url) {\n    return `https://hidden-inlet-27205.herokuapp.com/${url}`;\n}\n\nasync function getVideoUrl(config) {\n    const accessToken = await getAccessToken(config);\n    const now = Math.floor(Date.now() / 1e3);\n\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = getCorsUrl(`https://lookmovie.io/manifests/movies/json/${config.id}/${now}/${accessToken}/master.m3u8`);\n    } else if (config.type === 'show') {\n        url = getCorsUrl(`https://lookmovie.io/manifests/shows/json/${accessToken}/${now}/${config.id}/master.m3u8`);\n    }\n\n    if (url) {\n        const videoOpts = await fetch(url).then((d) => d.json());\n\n        // Find video URL and return it (with a check for a full url if needed)\n        const opts = [\"1080p\", \"1080\", \"720p\", \"720\", \"480p\", \"480\", \"auto\"]\n\n        let videoUrl = \"\";\n        for (let res of opts) {\n            if (videoOpts[res] && !videoOpts[res].includes('dummy') && !videoOpts[res].includes('earth-1984') && !videoUrl) {\n                videoUrl = videoOpts[res]\n            }\n        }\n\n        return videoUrl.startsWith(\"/\") ? getCorsUrl(`https://lookmovie.io/${videoUrl}`) : getCorsUrl(videoUrl);\n    }\n\n    return \"Invalid type.\";\n}\n\nasync function getAccessToken(config) {\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = getCorsUrl(`https://lookmovie.io/api/v1/security/movie-access?id_movie=${config.id}&token=1&sk=&step=1`);\n    } else if (config.type === 'show') {\n        url = getCorsUrl(`https://lookmovie.io/api/v1/security/show-access?slug=${config.slug}&token=&step=2`);\n    }\n\n    const data = await fetch(url).then((d) => d.json());\n\n    const token = data?.data?.accessToken;\n    if (token) return token;\n\n    return \"Invalid type provided in config\";\n}\n\nasync function getEpisodes(slug) {\n    const url = getCorsUrl(`https://lookmovie.io/shows/view/${slug}`);\n    const pageReq = await fetch(url).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`show_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    return data.seasons\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    const url = getCorsUrl(`https://lookmovie.io/${type}s/view/${slug}`);\n    const pageReq = await fetch(url).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`${type}_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let id = '';\n\n    if (type === \"movie\") {\n\t\tid = data.id_movie;\n\t} else if (type === \"show\") {\n\t\tconst episodeObj = data.seasons.find((v) => { return v.season === season && v.episode === episode; });\n\n        if (episodeObj) {\n\t\t\tid = episodeObj.id_episode;\n\t\t}\n\t}\n\n    if (id === '') {\n        return { url: '' }\n    }\n\n    const videoUrl = await getVideoUrl({\n        slug: slug,\n        id: id,\n        type: type,\n    });\n\n    return { url: videoUrl }\n}\n\nasync function findContent(searchTerm, type) {    \n    // const searchUrl = getCorsUrl(`https://lookmovie.io/api/v1/${type}s/search/?q=${encodeURIComponent(searchTerm)}`);\n    const searchUrl = getCorsUrl(`https://lookmovie.io/${type}s/search/?q=${encodeURIComponent(searchTerm)}`);\n    const searchRes = await fetch(searchUrl).then((d) => d.text());\n    \n    // Parse DOM to find search results on full search page\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(searchRes, \"text/html\");\n    const nodes = Array.from(doc.querySelectorAll('.movie-item-style-1'));\n    const results = nodes.map(node => {\n        return {\n            type,\n            title: node.querySelector('h6 a').innerText.trim(),\n            year: node.querySelector('.year').innerText.trim(),\n            slug: node.querySelector('a').href.split('/').pop(),\n        }\n    });\n\n    const fuse = new Fuse(results, { threshold: 0.3, distance: 200, keys: [\"title\"] });\n    const matchedResults = fuse\n        .search(searchTerm.toString())\n        .map((result) => result.item);\n\n    if (matchedResults.length === 0) {\n        return { options: [] }\n    }\n\n    if (matchedResults.length > 1) {\n        const res = { options: [] };\n        \n        matchedResults.forEach((r) => res.options.push({\n            title: r.title,\n            slug: r.slug,\n            type: r.type,\n            year: r.year\n        }));\n\n        return res;\n    } else {\n        const { title, slug, type, year } = matchedResults[0];\n        \n        return {\n            options: [{ title, slug, type, year }]\n        }\n    }\n}\n\nexport { findContent, getStreamUrl, getEpisodes };","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './TypeSelector.css'\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n    const selectedIndex = choices.findIndex(v=>v.value===selected);\n    const transformStyles = {\n        opacity: selectedIndex!==-1?1:0,\n        transform: `translateX(${selectedIndex!==-1?selectedIndex*7:0}rem)`\n    }\n    return (\n        <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n            {choices.map(v=>(\n                <div key={v.value} className={`choice ${selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                    {v.label}\n                </div>\n            ))}\n            <div className=\"selectedBar\" style={transformStyles}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { InputBox } from '../components/InputBox'\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { MovieRow } from '../components/MovieRow'\nimport { Arrow } from '../components/Arrow'\nimport { Progress } from '../components/Progress'\nimport { findContent, getStreamUrl } from '../lib/lookMovie'\nimport { useMovie } from '../hooks/useMovie';\nimport { TypeSelector } from '../components/TypeSelector'\nimport { getEpisodes } from '../lib/lookMovie'\n\nimport './Search.css'\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [type, setType] = React.useState(\"movie\");\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`)\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const episodeData = await getEpisodes(slug);\n                episodeData.forEach((e) => {\n                    if (!seasons.includes(e.season))\n                        seasons.push(e.season);\n                    \n                    if (!episodes[e.season])\n                        episodes[e.season] = []\n                    episodes[e.season].push(e.episode)\n                    \n                })\n            }\n\n            let realUrl = '';\n            if (type === \"movie\") {\n                const { url } = await getStreamUrl(slug, type);\n    \n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n                realUrl = url;\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType)\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type } = options[0];\n            getStream(title, slug, type);\n        } catch (err) {\n            fail(`Failed to watch ${contentType}`)\n        }\n    }\n\n    return (\n        <div className=\"cardView\">\n            <Card>\n                <Title accent=\"Because watching content legally is boring\">\n                    What do you wanna watch?\n                </Title>\n                <TypeSelector\n                    setType={(type) => setType(type)}\n                    choices={[\n                        { label: \"Movie\", value: \"movie\" },\n                        { label: \"TV Show\", value: \"show\" }\n                    ]}\n                    noWrap={true}\n                    selected={type}\n                />\n                <InputBox placeholder={ type === \"movie\" ? \"Hamilton\" : \"Atypical\" } onSubmit={(str) => searchMovie(str, type)} />\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n            </Card>\n\n            <Card show={showingOptions} doTransition>\n                <Title size=\"medium\">\n                    Whoops, there are a few {type}s like that\n                </Title>\n                {options?.map((v, i) => (\n                    <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} season={v.season} episode={v.episode} onClick={() => {\n                        setShowingOptions(false)\n                        getStream(v.title, v.slug, v.type, v.season, v.episode)\n                    }}/>\n                ))}\n            </Card>\n            <div className=\"topRightCredits\">\n                <a href=\"https://github.com/JamesHawkinss/movie-web\" target=\"_blank\" rel=\"noreferrer\">Check it out on GitHub <Arrow/></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\n\nexport function NotFound(props) {\n    return (\n        <div className=\"cardView\">\n            <Card>\n                <Title accent=\"How did you end up here?\">\n                    Oopsie doopsie\n                </Title>\n            </Card>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport './VideoElement.css'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\n// streamUrl: string\n// loading: boolean\nexport function VideoElement({ streamUrl, loading, setProgress }) {\n    const videoRef = React.useRef(null);\n    const [error, setError] = React.useState(false);\n\n    React.useEffect(() => {\n        setError(false)\n        if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n        \n        const hls = new Hls();\n        \n        if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n            videoRef.current.src = streamUrl;\n            return;\n        } else if (!Hls.isSupported()) {\n            setError(true)\n            return;\n        }\n        \n        hls.attachMedia(videoRef.current);\n        hls.loadSource(streamUrl);\n    }, [videoRef, streamUrl, loading])\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    return (\n        <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} />\n    )\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\">\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport './EpisodeSelector.css'\n\nexport function EpisodeSelector({ setSeason, setEpisode, seasons, season, episodes, currentSeason, currentEpisode, slug }) {\n\n    const choices = episodes.map(v => {\n\n        let progressData = JSON.parse(localStorage.getItem('video-progress') || \"{}\")\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.lookmovie?.show?.[slug][`${season}-${v}`]\n        if(progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    })\n\n    return (\n        <div className=\"episodeSelector\">\n            <TypeSelector setType={setSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} selected={currentSeason}/><br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: currentSeason})} choices={choices} selected={currentEpisode.season === currentSeason?currentEpisode.episode:null}/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport './Movie.css'\nimport { getStreamUrl } from '../lib/lookMovie'\n\nexport function MovieView(props) {\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [season, setSeason] = React.useState(\"1\");\n    const [seasonList, setSeasonList] = React.useState([]);\n    const [episodeLists, setEpisodeList] = React.useState([]);\n    const [episode, setEpisode] = React.useState({ episode: null, season: null });\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        setEpisodeList(streamData.episodes[season]);\n    }, [season, streamData.episodes])\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            setSeason(streamData.seasons[0])\n            // TODO load from localstorage last watched\n            setEpisode({ episode: streamData.episodes[streamData.seasons[0]][0], season: streamData.seasons[0] })\n            setEpisodeList(streamData.episodes[streamData.seasons[0]]);\n        }\n    }, [streamData])\n\n    React.useEffect(() => {\n        let cancel = false;\n        // ignore if not a show\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n        if (!episode.episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n        setLoading(true);\n\n        getStreamUrl(streamData.slug, streamData.type, episode.season, episode.episode)\n            .then(({url}) => {\n                if (cancel) return;\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch(e => {\n                if (cancel) return;\n                console.error(e)\n            })\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl])\n\n    const setProgress = (evt) => {\n        let ls = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n\n        // We're just checking lookmovie for now since there is only one scraper\n        if(!ls.lookmovie) ls.lookmovie = {}\n        if(!ls.lookmovie[streamData.type]) ls.lookmovie[streamData.type] = {}\n        if(!ls.lookmovie[streamData.type][streamData.slug]) {\n            ls.lookmovie[streamData.type][streamData.slug] = {}\n        }\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode.episode}` : \"full\"\n        ls.lookmovie[streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now()\n        }\n\n        if(streamData.type === \"show\") {\n            ls.lookmovie[streamData.type][streamData.slug][key].show = {\n                season,\n                episode: episode.episode\n            }\n        }\n\n        localStorage.setItem(\"video-progress\", JSON.stringify(ls))\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {episode.season}: Episode {episode.episode}\n                </Title> : undefined}\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} />\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSeason={setSeason}\n                        setEpisode={setEpisode}\n                        season={season}\n                        seasons={seasonList}\n                        episodes={episodeLists}\n                        slug={streamData.slug}\n                        currentSeason={season}\n                        currentEpisode={episode}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import './index.css';\nimport { SearchView } from './views/Search';\nimport { NotFound } from './views/NotFound';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider} from './hooks/useMovie';\n\nfunction Router() {\n  const { page } = useMovie();\n\n  if (page === \"search\") {\n    return <SearchView/>\n  }\n\n  if (page === \"movie\") {\n    return <MovieView/>\n  }\n\n  return (\n    <NotFound/>\n  )\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router/>\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}