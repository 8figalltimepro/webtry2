{"version":3,"sources":["components/Arrow.js","components/InputBox.js","hooks/useMovie.js","components/Title.js","components/Card.js","components/ErrorBanner.js","components/PercentageOverlay.js","components/MovieRow.js","components/Progress.js","lib/scraper/lookmovie.js","lib/util/unpacker.js","lib/scraper/gomostream.js","lib/index.js","components/TypeSelector.js","components/DiscordBanner.js","views/Search.js","views/NotFound.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/EpisodeSelector.js","views/Movie.js","App.js","index.js"],"names":["Arrow","props","className","dangerouslySetInnerHTML","__html","left","InputBox","onSubmit","placeholder","React","useState","searchTerm","setSearchTerm","e","preventDefault","type","id","value","onChange","target","required","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","title","slug","episodes","seasons","streamData","setStreamData","Provider","navigate","str","setStreamUrl","streamUrl","d","p","children","useMovie","useContext","Title","size","accentLink","accent","length","onClick","Card","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","style","doTransition","ref","ErrorBanner","class","PercentageOverlay","percentage","Math","max","width","Fragment","MovieRow","progress","progressData","JSON","parse","localStorage","getItem","source","movie","full","floor","currentlyAt","totalDuration","year","Progress","failed","text","steps","toFixed","BASE_URL","a","searchUrl","encodeURIComponent","fetch","then","searchRes","parser","DOMParser","doc","parseFromString","nodes","Array","from","querySelectorAll","results","map","node","querySelector","innerText","trim","href","split","pop","fuse","Fuse","threshold","distance","keys","matchedResults","search","toString","result","item","options","res","forEach","r","push","getVideoUrl","config","getAccessToken","accessToken","now","Date","url","json","videoOpts","videoUrl","includes","startsWith","data","token","pageReq","JSON5","slice","indexOf","season","episode","id_movie","episodeObj","find","v","id_episode","lookMovie","findContent","getStreamUrl","getEpisodes","alphabet","unpack","params","juicers","c","m","exec","parseInt","Error","_filterargs","payload","symtab","radix","count","unbase","base","dictionary","alpha","reverse","reduce","cipher","ind","pow","_unbaser","replace","word","CORS_URL","MOVIE_URL","DECODING_URL","term","toLowerCase","imdbRes","q","l","y","console","error","site1","tc","match","_token","fd","FormData","append","method","body","headers","join","src","embedUrl","site2","site2Dom","script","innerHTML","unpacked","splice","index","findIndex","gomostream","Promise","all","o","i","TypeSelector","setType","choices","selected","noWrap","selectedIndex","transformStyles","opacity","transform","label","DiscordBanner","SearchView","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","offlineStatus","setOfflineStatus","fail","getStream","realUrl","query","contentType","catch","fetchHealth","searchMovie","Object","entries","rel","NotFound","VideoPlaceholder","VideoElement","loading","videoRef","setError","endsWith","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","controls","autoPlay","onProgress","NumberSelector","EpisodeSelector","setSeason","setEpisode","currentSeason","currentEpisode","round","MovieView","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","cancel","undefined","evt","ls","key","currentTarget","currentTime","duration","updatedAt","setItem","stringify","Router","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ihBAIO,SAASA,EAAMC,GAClB,OACI,sBAAMC,UAAU,QAAQC,wBAAyB,CAAEC,OAAO,uNAAD,OACmJH,EAAMI,KAAK,OAAO,GADrK,uK,MCD1D,SAASC,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACjC,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACI,uBAAMV,UAAU,WAAWK,SAAU,SAACM,GAGlC,OAFAA,EAAEC,iBACFP,EAASI,IACF,GAHX,UAKI,uBACII,KAAK,OACLb,UAAU,eACVc,GAAG,eACHR,YAAaA,EACbS,MAAON,EACPO,SAAU,SAACL,GAAD,OAAOD,EAAcC,EAAEM,OAAOF,QACxCG,UAAQ,IAEZ,wBAAQlB,UAAU,oBAAlB,SACI,uBAAMA,UAAU,OAAhB,mBAA6B,sBAAMA,UAAU,QAAhB,SAAwB,cAAC,EAAD,c,WCvB/DmB,EAAeZ,IAAMa,cAAc,MAElC,SAASC,EAActB,GAC1B,MAAwBQ,IAAMC,SAAS,UAAvC,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAA4BhB,IAAMC,SAAS,IAA3C,mBAAOgB,EAAP,KAAeC,EAAf,KACA,EAAoClB,IAAMC,SAAS,CAAEkB,MAAO,GAAIC,KAAM,GAAId,KAAM,GAAIe,SAAU,GAAIC,QAAS,KAA3G,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACI,cAACZ,EAAaa,SAAd,CAAuBjB,MAAO,CAC1BkB,SAD0B,SACjBC,GACLX,EAAQW,IAEZZ,OACAa,aAAcV,EACdW,UAAWZ,EACXM,aACAC,cAR0B,SAQZM,GACVN,GAAc,SAAAO,GAAC,kCAASA,GAAKD,QATrC,SAYKtC,EAAMwC,WAKZ,SAASC,EAASzC,GACrB,OAAOQ,IAAMkC,WAAWtB,G,MCnBrB,SAASuB,EAAM3C,GAClB,IAAQkC,EAAaO,IAAbP,SACFU,EAAO5C,EAAM4C,MAAQ,MAErBC,EAAa7C,EAAM6C,YAAc,GACjCC,EAAS9C,EAAM8C,QAAU,GAC/B,OACI,gCACKA,EAAOC,OAAS,EACb,oBAAGC,QAAU,kBAAMH,EAAWE,OAAS,GAAKb,EAASW,IAAa5C,UAAS,uBAAkB4C,EAAWE,OAAS,EAAI,oBAAsB,IAA3I,UACKF,EAAWE,OAAS,EAAK,cAAC,EAAD,CAAO3C,MAAI,IAAM,KAAM0C,KAErD,KACJ,oBAAI7C,UAAW,UAAa2C,EAAO,cAAgBA,EAAO,IAA1D,SAAiE5C,EAAMwC,c,MCf5E,SAASS,EAAKjD,GAEjB,MAA8BQ,IAAMC,UAAS,GAA7C,mBAAOyC,EAAP,KAAgBC,EAAhB,KACMC,EAAa5C,IAAM6C,OAAO,MAChC,EAA4B7C,IAAMC,SAAS,GAA3C,mBAAO6C,EAAP,KAAeC,EAAf,KAQA,OANA/C,IAAMgD,WAAU,YACR,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAYK,WACjBN,EAAWnD,EAAM0D,MACjBH,EAAUH,EAAWK,QAAQE,iBAC9B,CAAC3D,EAAM0D,KAAMN,IAGZ,qBAAKnD,UAAS,uBAAmBD,EAAM4D,UAAY,OAAS,IAAOC,MAAO,CACtEP,OAAQtD,EAAM8D,aAAgBZ,EAAUI,EAAS,EAAK,WAD1D,SAGI,qBAAKrD,UAAS,eAAWiD,EAAU,OAAS,GAA9B,YAAsClD,EAAM8D,aAAe,eAAiB,IAAOC,IAAKX,EAAtG,SACKpD,EAAMwC,a,MCpBhB,SAASwB,EAAT,GAAkC,IAAZxB,EAAW,EAAXA,SAC5B,OACC,qBAAKyB,MAAM,cAAX,SACEzB,I,YCHG,SAAS0B,EAAT,GAA4C,IAAfC,EAAc,EAAdA,WAInC,OAFGA,GAAcA,EAAa,IAAGA,EAAaC,KAAKC,IAAI,GAAIF,EAAa,GAAKA,EAAa,MAEnFA,EAAa,EACnB,qBAAKF,MAAM,cAAX,SACU,qBAAKA,MAAM,mBAAmBJ,MAAO,CAACS,MAAM,GAAD,OAAKH,EAAL,UAElD,cAAC,IAAMI,SAAP,ICJE,SAASC,EAASxE,GAErB,IACIyE,EAEuB,MAHrBC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,MAEtEX,EAAa,KACC,UAAfnE,EAAMc,QACL2D,EAAQ,OAAGC,QAAH,IAAGA,GAAH,UAAGA,EAAe1E,EAAM+E,eAAxB,iBAAG,EAA8BC,aAAjC,iBAAG,EAAsChF,EAAM4B,aAA/C,aAAG,EAAmDqD,QAE1Dd,EAAaC,KAAKc,MAAOT,EAASU,YAAcV,EAASW,cAAiB,OAIlF,OACI,sBAAKnF,UAAU,WAAW+C,QAAS,kBAAMhD,EAAMgD,SAAWhD,EAAMgD,WAAhE,UACI,sBAAK/C,UAAU,OAAf,UACKD,EAAM2B,MADX,OAEI,uBAAM1B,UAAU,OAAhB,cAAyBD,EAAMqF,KAA/B,UAEJ,sBAAKpF,UAAU,QAAf,UACI,uCAAUD,EAAMc,QAChB,cAAC,EAAD,OAEJ,cAAC,EAAD,CAAmBqD,WAAYA,O,MCrBpC,SAASmB,EAAStF,GACrB,OACI,sBAAKC,UAAS,mBAAcD,EAAM0D,KAAK,GAAG,OAA5B,YAAsC1D,EAAMuF,OAAO,SAAS,IAA1E,UACMvF,EAAMwF,MAAQxF,EAAMwF,KAAKzC,OAAS,EAChC,4BAAI/C,EAAMwF,OAAa,KAC3B,qBAAKvF,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAY4D,MAAO,CAC9BS,OAAQtE,EAAMyE,SAAWzE,EAAMyF,MAAQ,KAAKC,QAAQ,GAAK,Y,6BCXvEC,EAAQ,UADA,wCACA,yB,4CAEd,WAA2BjF,EAAYI,GAAvC,yCAAA8E,EAAA,6DACUC,EADV,UACyBF,EADzB,YACqC7E,EADrC,uBACwDgF,mBAAmBpF,IAD3E,SAE4BqF,MAAMF,GAAWG,MAAK,SAAC1D,GAAD,OAAOA,EAAEkD,UAF3D,UAEUS,EAFV,OAKUC,EAAS,IAAIC,UACbC,EAAMF,EAAOG,gBAAgBJ,EAAW,aACxCK,EAAQC,MAAMC,KAAKJ,EAAIK,iBAAiB,wBACxCC,EAAUJ,EAAMK,KAAI,SAAAC,GACtB,MAAO,CACH9F,OACAa,MAAOiF,EAAKC,cAAc,QAAQC,UAAUC,OAC5C1B,KAAMuB,EAAKC,cAAc,SAASC,UAAUC,OAC5CnF,KAAMgF,EAAKC,cAAc,KAAKG,KAAKC,MAAM,KAAKC,UAIhDC,EAAO,IAAIC,IAAKV,EAAS,CAAEW,UAAW,GAAKC,SAAU,IAAKC,KAAM,CAAC,WAKzC,KAJxBC,EAAiBL,EAClBM,OAAO/G,EAAWgH,YAClBf,KAAI,SAACgB,GAAD,OAAYA,EAAOC,SAET7E,OAtBvB,0CAuBe,CAAE8E,QAAS,KAvB1B,aA0BQL,EAAezE,OAAS,GA1BhC,wBA2Bc+E,EAAM,CAAED,QAAS,IAEvBL,EAAeO,SAAQ,SAACC,GAAD,OAAOF,EAAID,QAAQI,KAAK,CAC3CtG,MAAOqG,EAAErG,MACTC,KAAMoG,EAAEpG,KACRd,KAAMkH,EAAElH,KACRuE,KAAM2C,EAAE3C,KACRN,OAAQ,iBAlCpB,kBAqCe+C,GArCf,iBAuC4CN,EAAe,GAA3C7F,EAvChB,EAuCgBA,MAAOC,EAvCvB,EAuCuBA,KAAMd,EAvC7B,EAuC6BA,KAAMuE,EAvCnC,EAuCmCA,KAvCnC,kBAyCe,CACHwC,QAAS,CAAC,CAAElG,QAAOC,OAAMd,OAAMuE,OAAMN,OAAQ,gBA1CzD,6C,+BA8CemD,E,8EAAf,WAA2BC,GAA3B,6BAAAvC,EAAA,sEAC8BwC,EAAeD,GAD7C,cACUE,EADV,OAEUC,EAAMlE,KAAKc,MAAMqD,KAAKD,MAAQ,KAEhCE,EAAM,GAEU,UAAhBL,EAAOrH,KACP0H,EAAG,UAAM7C,EAAN,kCAAwCwC,EAAOpH,GAA/C,YAAqDuH,EAArD,YAA4DD,EAA5D,gBACoB,SAAhBF,EAAOrH,OACd0H,EAAG,UAAM7C,EAAN,iCAAuC0C,EAAvC,YAAsDC,EAAtD,YAA6DH,EAAOpH,GAApE,iBATX,SAY4BgF,MAAMyC,GAAKxC,MAAK,SAAC1D,GAAD,OAAOA,EAAEmG,UAZrD,OAkBI,IANMC,EAZV,OAiBQC,EAAW,GACf,MAHa,CAAC,QAAS,OAAQ,OAAQ,MAAO,OAAQ,MAAO,QAG7D,gBACQD,EADCZ,EAAa,OACKY,EAAUZ,GAAKc,SAAS,UAAaF,EAAUZ,GAAKc,SAAS,eAAkBD,IAClGA,EAAWD,EAAUZ,IApBjC,yBAwBWa,EAASE,WAAW,KAApB,UAA8BlD,GAA9B,OAAyCgD,GAAaA,GAxBjE,6C,+BA2BeP,E,8EAAf,WAA8BD,GAA9B,qBAAAvC,EAAA,6DACQ4C,EAAM,GAEU,UAAhBL,EAAOrH,KACP0H,EAAG,UAAM7C,EAAN,kDAAwDwC,EAAOpH,GAA/D,uBACoB,SAAhBoH,EAAOrH,OACd0H,EAAG,UAAM7C,EAAN,6CAAmDwC,EAAOvG,KAA1D,mBANX,SASuBmE,MAAMyC,GAAKxC,MAAK,SAAC1D,GAAD,OAAOA,EAAEmG,UAThD,UASUK,EATV,SAWUC,EAXV,OAWkBD,QAXlB,IAWkBA,GAXlB,UAWkBA,EAAMA,YAXxB,aAWkB,EAAYT,aAX9B,yCAYsBU,GAZtB,gCAcW,mCAdX,4C,kEAiBA,WAA2BnH,GAA3B,uBAAAgE,EAAA,6DACU4C,EADV,UACmB7C,EADnB,uBAC0C/D,GAD1C,SAE0BmE,MAAMyC,GAAKxC,MAAK,SAAC1D,GAAD,OAAOA,EAAEkD,UAFnD,cAEUwD,EAFV,OAIUF,EAAOG,IAAMrE,MAAM,IACrBoE,EACKE,MAAMF,EAAQG,QAAR,iBACNlC,MAAM,MAAM,GACZA,MAAM,OAAO,GACbF,OACL,KAGAjF,EAAU,GACVD,EAAW,GACfiH,EAAKhH,QAAQiG,SAAQ,SAACnH,GACbkB,EAAQ8G,SAAShI,EAAEwI,SACpBtH,EAAQmG,KAAKrH,EAAEwI,QAEdvH,EAASjB,EAAEwI,UACZvH,EAASjB,EAAEwI,QAAU,IACzBvH,EAASjB,EAAEwI,QAAQnB,KAAKrH,EAAEyI,YArBlC,kBAwBW,CAAEvH,UAASD,aAxBtB,4C,kEA2BA,WAA4BD,EAAMd,EAAMsI,EAAQC,GAAhD,yBAAAzD,EAAA,6DACU4C,EADV,UACmB7C,EADnB,YAC+B7E,EAD/B,kBAC6Cc,GAD7C,SAE0BmE,MAAMyC,GAAKxC,MAAK,SAAC1D,GAAD,OAAOA,EAAEkD,UAFnD,UAEUwD,EAFV,OAIUF,EAAOG,IAAMrE,MAAM,IACrBoE,EACKE,MAAMF,EAAQG,QAAR,UAAmBrI,EAAnB,cACNmG,MAAM,MAAM,GACZA,MAAM,OAAO,GACbF,OACL,KAGAhG,EAAK,GAEI,UAATD,EACAC,EAAK+H,EAAKQ,SACM,SAATxI,IACDyI,EAAaT,EAAKhH,QAAQ0H,MAAK,SAACC,GAAQ,OAAOA,EAAEL,SAAWA,GAAUK,EAAEJ,UAAYA,QAGtFtI,EAAKwI,EAAWG,YAIb,KAAP3I,EAzBR,yCA0Be,CAAEyH,IAAK,KA1BtB,wBA6B2BN,EAAY,CAC/BtG,KAAMA,EACNb,GAAIA,EACJD,KAAMA,IAhCd,eA6BU6H,EA7BV,yBAmCW,CAAEH,IAAKG,IAnClB,6C,sBAuCA,IACegB,EADG,CAAEC,Y,8CAAaC,a,kDAAcC,Y,6CClKzCC,EAAW,CACb,GAAI,iEACJ,GAAI,oGAmCR,SAASC,EAAO7H,GACZ,IAAI8H,EAjCR,SAAqB9H,GAMjB,IALA,IAAI+H,EAAU,CACV,sFACA,+DAGKC,EAAI,EAAGA,EAAID,EAAQnH,SAAUoH,EAAG,CACrC,IAAIC,EAGJ,GAAIA,EAHYF,EAAQC,GAGTE,KAAKlI,GAChB,MAAO,CAACiI,EAAE,GAAIA,EAAE,GAAGnD,MAAM,KAAMqD,SAASF,EAAE,IAAKE,SAASF,EAAE,KAIlE,MAAM,IAAIG,MAAM,wEAkBHC,CAAYrI,GACrBsI,EAAUR,EAAO,GAAIS,EAAST,EAAO,GAAIU,EAAQV,EAAO,GAAIW,EAAQX,EAAO,GAE/E,GAAIW,IAAUF,EAAO3H,OACjB,MAAM,IAAIwH,MAAM,mCAAqCK,EAAQ,OAASF,EAAO3H,OAAS,KAG1F,IAAI8H,EAtBR,SAAkBC,GACd,GAAI,GAAKA,GAAQ,GAAI,OAAO,SAAC3I,GAAD,OAASmI,SAASnI,EAAK2I,IAEnD,IAAMC,EAAa,GACfC,EAAQjB,EAASe,GACrB,IAAKE,EAAO,MAAM,IAAIT,MAAM,wBAE5B,KAAa,EAAOS,EAAMjI,SAAUiI,EAChCD,EAAWC,EADF,MAIb,OAAO,SAAC7I,GAAD,OAASA,EAAI8E,MAAM,IAAIgE,UAAUC,QAAO,SAACC,EAAQC,GAAT,OAAiBhH,KAAKiH,IAAIP,EAAMM,GAAOL,EAAWI,OAWpFG,CAASX,GAItB,OAFaF,EAAQc,QAAQ,YADhB,SAACC,GAAD,OAAUd,EAAOG,EAAOW,KAAUA,KC5CnD,IAAMC,EAAW,yCACX9F,EAAQ,UAAM8F,EAAN,mBACRC,EAAS,UAAM/F,EAAN,UACTgG,EAAY,UAAMhG,EAAN,oB,4CAElB,WAA2BjF,EAAYI,GAAvC,mBAAA8E,EAAA,kEAEqB,UAAT9E,EAFZ,wDAIc8K,EAAOlL,EAAWmL,cAJhC,SAK8B9F,MAAM,GAAD,OAAI0F,EAAJ,mDAAuDG,EAAK1C,MAAM,EAAG,GAArE,YAA2E0C,EAA3E,UAAwF5F,MAAK,SAAA1D,GAAC,OAAIA,EAAEmG,UALvI,UAKcqD,EALd,OAOcpF,EAAU,GAChBoF,EAAQxJ,EAAEyF,SAAQ,SAACnH,GACVA,EAAEG,GAAG8H,WAAW,OAGT,cAARjI,EAAEmL,GACM,mBAARnL,EAAEmL,GACM,eAARnL,EAAEmL,GACM,aAARnL,EAAEmL,GACM,eAARnL,EAAEmL,GAENrF,EAAQuB,KAAK,CACTtG,MAAOf,EAAEoL,EACTpK,KAAMhB,EAAEG,GACRD,KAAM,QACNuE,KAAMzE,EAAEqL,EACRlH,OAAQ,oBAIZ2B,EAAQ3D,OAAS,GA3B7B,0CA4BmB,CAAE8E,QAASnB,IA5B9B,iCA8BmB,CAAEmB,QAAS,CAAEnB,EAAQ,MA9BxC,gEAiCQwF,QAAQC,MAAR,MACM,IAAI5B,MAAJ,MAlCd,2D,kEAsCA,WAA4B3I,EAAMd,EAAMsI,EAAQC,GAAhD,2CAAAzD,EAAA,yDACiB,UAAT9E,EADR,iEAIwBiF,MAAM,GAAD,OAAI2F,EAAJ,YAAiB9J,IAAQoE,MAAK,SAAC1D,GAAD,OAAOA,EAAEkD,UAJpE,UAMkB,0BAFR4G,EAJV,iDAOe,CAAE5D,IAAK,KAPtB,cASU6D,EATV,UASeD,EAAME,MAAM,2BAT3B,aASe,EAAkC,GACvCC,EAVV,UAUmBH,EAAME,MAAM,4BAV/B,aAUmB,EAAmC,IAE5CE,EAAK,IAAIC,UACZC,OAAO,YAAaL,GACvBG,EAAGE,OAAO,SAAUH,GAdxB,UAgBsBxG,MAAM4F,EAAc,CAClCgB,OAAQ,OACRC,KAAMJ,EACNK,QAAS,CACL,UAAWR,EAAGnD,MAAM,EAAG,IAAIjC,MAAM,IAAIgE,UAAU6B,KAAK,IAAM,cAE/D9G,MAAK,SAAC1D,GAAD,OAAOA,EAAEmG,UAtBrB,eAgBUsE,EAhBV,OAwBUC,EAAWD,EAAIvD,MAAK,SAAAhB,GAAG,OAAIA,EAAII,SAAS,cAxBlD,UAyBwB7C,MAAM,GAAD,OAAI0F,GAAJ,OAAeuB,IAAYhH,MAAK,SAAC1D,GAAD,OAAOA,EAAEkD,UAzBtE,WAyBUyH,EAzBV,OA2BU/G,EAAS,IAAIC,UAGa,sBAF1B+G,EAAWhH,EAAOG,gBAAgB4G,EAAO,cAElCL,KAAK9F,UA9BtB,0CA+Be,CAAE0B,IAAK,KA/BtB,eAiCU2E,EAASD,EAASzG,iBAAiB,UAAU,GAAG2G,WAElDC,EAAWrD,EAAOmD,GAAQlG,MAAM,KAC3BqG,OAAO,EAAG,IACfC,EAAQF,EAASG,WAAU,SAAC5M,GAAD,MAAa,MAANA,KAChC4H,EAAM6E,EAASnE,MAAM,EAAGqE,GAAOT,KAAK,IAtC9C,kBAwCW,CAAEtE,QAxCb,6C,sBA2CA,IACeiF,EADI,CAAE7D,Y,8CAAaC,a,4DCrFnBD,E,gFAAf,WAA2BlJ,EAAYI,GAAvC,eAAA8E,EAAA,6DACUc,EAAU,CAAEmB,QAAS,IAD/B,SAE0B6F,QAAQC,IAAI,CAC9BhE,EAAUC,YAAYlJ,EAAYI,GAClC2M,EAAW7D,YAAYlJ,EAAYI,KAJ3C,qBAOYiH,SAAQ,SAAC6F,GACRA,GAAMA,EAAE/F,SAEb+F,EAAE/F,QAAQE,SAAQ,SAAC8F,GACVA,GACLnH,EAAQmB,QAAQI,KAAK4F,SAZjC,kBAgBWnH,GAhBX,4C,+BAmBemD,E,sFAAf,WAA4BjI,EAAMd,EAAMiE,EAAQqE,EAAQC,GAAxD,SAAAzD,EAAA,2DACYb,EADZ,OAEa,cAFb,OAIa,eAJb,sCAGyB4E,EAAUE,aAAajI,EAAMd,EAAMsI,EAAQC,GAHpE,+DAKyBoE,EAAW5D,aAAajI,EAAMd,EAAMsI,EAAQC,GALrE,sH,+BAWeS,E,gFAAf,WAA2BlI,EAAMmD,GAAjC,SAAAa,EAAA,2DACYb,EADZ,OAEa,cAFb,6CAGyB4E,EAAUG,YAAYlI,GAH/C,qH,4BC3BO,SAASkM,EAAT,GAAuE,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,SAA4B,IAAlBC,cAAkB,SACnEC,EAAgBH,EAAQR,WAAU,SAAA/D,GAAC,OAAEA,EAAEzI,QAAQiN,KAC/CG,EAAkB,CACpBC,SAA0B,IAAjBF,EAAmB,EAAE,EAC9BG,UAAU,cAAD,QAAiC,IAAjBH,EAAiC,EAAdA,EAAgB,EAAnD,SAEb,OACI,sBAAKlO,UAAS,uBAAkBiO,EAAS,SAAW,IAApD,UACKF,EAAQrH,KAAI,SAAA8C,GAAC,OACV,qBAAmBxJ,UAAS,iBAAYgO,IAAWxE,EAAEzI,MAAM,WAAW,IAAMgC,QAAS,kBAAM+K,EAAQtE,EAAEzI,QAArG,SACKyI,EAAE8E,OADG9E,EAAEzI,UAIhB,qBAAKf,UAAU,cAAc4D,MAAOuK,O,YChBzC,SAASI,IACf,OACC,qBAAKvO,UAAU,gBAAf,SACC,mBAAG+G,KAAK,gCAAR,uCCSI,SAASyH,IACZ,MAAkDhM,IAA1CP,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,aAAcJ,EAAhC,EAAgCA,cAGhC,EAA8BxB,IAAMC,SAAS,IAA7C,mBAAOoH,EAAP,KAAgB6G,EAAhB,KACA,EAAgClO,IAAMC,SAAS,GAA/C,mBAAOgE,EAAP,KAAiBkK,EAAjB,KACA,EAAwBnO,IAAMC,SAAS,IAAvC,mBAAO+E,EAAP,KAAaoJ,EAAb,KACA,EAA4BpO,IAAMC,UAAS,GAA3C,mBAAO8E,EAAP,KAAesJ,EAAf,KACA,EAA4CrO,IAAMC,UAAS,GAA3D,mBAAOqO,EAAP,KAAuBC,EAAvB,KACA,EAA0CvO,IAAMC,UAAS,GAAzD,mBAAOuO,EAAP,KAAsBC,EAAtB,KACA,EAAwBzO,IAAMC,SAAS,SAAvC,mBAAOK,EAAP,KAAaiN,EAAb,KAEMmB,EAAO,SAAC/M,GACVwM,EAVa,GAWbC,EAAQzM,GACR0M,GAAU,IAfW,SAkBVM,EAlBU,oFAkBzB,WAAyBxN,EAAOC,EAAMd,EAAMiE,GAA5C,yBAAAa,EAAA,yDACIxD,EAAa,IADjB,SAIQuM,EAAY,GACZC,EAAQ,uBAAD,OAAwBjN,EAAxB,MAEHG,EAAU,GACVD,EAAW,GACF,SAATf,EATZ,iCAU+BgJ,EAAYlI,EAAMmD,GAVjD,OAUkB+D,EAVlB,OAWYhH,EAAUgH,EAAKhH,QACfD,EAAWiH,EAAKjH,SAZ5B,WAeYuN,EAAU,GACD,UAATtO,EAhBZ,kCAkBkC+I,EAAajI,EAAMd,EAAMiE,GAlB3D,oBAoBwB,MAFJyD,EAlBpB,EAkBoBA,KAlBpB,0CAqBuB0G,EAAK,cAAD,OAAevN,KArB1C,QAuBYyN,EAAU5G,EAvBtB,QA0BQmG,EAzCS,GA0CTvM,EAAagN,GACbpN,EAAc,CACVL,QACAb,OACAgB,UACAD,WACAD,OACAmD,WAEJ6J,EAAQ,gBACR1M,EAAS,SArCjB,kDAuCQgK,QAAQC,MAAR,MACA+C,EAAK,wBAxCb,2DAlByB,kEA8DzB,WAA2BG,EAAOC,GAAlC,2BAAA1J,EAAA,6DACIiJ,GAAU,GACVD,EAAQ,iBAAD,OAAkBU,EAAlB,aAAkCD,EAAlC,MACPV,EAAY,GACZI,GAAkB,GAJtB,kBAOkCnF,EAAYyF,EAAOC,GAPrD,mBAS+B,KAFfzH,EAPhB,EAOgBA,SAEI9E,OATpB,0CAUmBmM,EAAK,uBAAD,OAAwBI,KAV/C,aAWmBzH,EAAQ9E,OAAS,GAXpC,wBAYY4L,EAAY,GACZC,EAAQ,eAAD,OAAgBU,IACvBZ,EAAW7G,GACXkH,GAAkB,GAf9B,6BAmB8ClH,EAAQ,GAAtClG,EAnBhB,EAmBgBA,MAAOC,EAnBvB,EAmBuBA,KAAMd,EAnB7B,EAmB6BA,KAAMiE,EAnBnC,EAmBmCA,OAC3BoK,EAAUxN,EAAOC,EAAMd,EAAMiE,GApBrC,kDAsBQmH,QAAQC,MAAR,MACA+C,EAAK,mBAAD,OAAoBI,IAvBhC,2DA9DyB,sBAoGzB,OAXA9O,IAAMgD,WAAU,WAAM,4CAClB,sBAAAoC,EAAA,4DACqB,wCADrB,SAEUG,MADW,yCACKwJ,OAAM,WAExBN,EAAiB,4DAJzB,4CADkB,uBAAC,WAAD,wBAQlBO,KACD,IAGC,sBAAKvP,UAAU,WAAf,UACI,eAAC,EAAD,WACI,cAAC,EAAD,IACC+O,EAAgB,cAAC,EAAD,UAAcA,IAA+B,GAC9D,cAAC,EAAD,CAAOlM,OAAO,6CAAd,sCAGA,cAAC,EAAD,CACIiL,QAAS,SAACjN,GAAD,OAAUiN,EAAQjN,IAC3BkN,QAAS,CACL,CAAEO,MAAO,QAASvN,MAAO,SACzB,CAAEuN,MAAO,UAAWvN,MAAO,SAE/BkN,QAAQ,EACRD,SAAUnN,IAEd,cAAC,EAAD,CAAUP,YAAsB,UAATO,EAAmB,WAAa,WAAYR,SAAU,SAAC6B,GAAD,OArHhE,6CAqHyEsN,CAAYtN,EAAKrB,MACvG,cAAC,EAAD,CAAU4C,KAAMe,EAAW,EAAGc,OAAQA,EAAQd,SAAUA,EAAUgB,MAnH7D,EAmH8ED,KAAMA,OAG7F,eAAC,EAAD,CAAM9B,KAAMoL,EAAgBhL,cAAY,EAAxC,UACI,eAAC,EAAD,CAAOlB,KAAK,SAAZ,qCAC6B9B,EAD7B,iBAGE4O,OAAOC,QAAQ9H,EAAQqD,QAAO,SAACtF,EAAG6D,GAG5B,OAFK7D,EAAE6D,EAAE1E,UAASa,EAAE6D,EAAE1E,QAAU,IAChCa,EAAE6D,EAAE1E,QAAQkD,KAAKwB,GACV7D,IACR,KAAKe,KAAI,SAAA8C,GAAC,OACT,gCACI,mBAAGxJ,UAAU,SAAb,SAAuBwJ,EAAE,KACxBA,EAAE,GAAG9C,KAAI,SAAC8C,EAAGoE,GAAJ,OACN,cAAC,EAAD,CAAkBlM,MAAO8H,EAAE9H,MAAOC,KAAM6H,EAAE7H,KAAMd,KAAM2I,EAAE3I,KAAMuE,KAAMoE,EAAEpE,KAAMN,OAAQ0E,EAAE1E,OAAQ/B,QAAS,WACnG+L,GAAkB,GAClBI,EAAU1F,EAAE9H,MAAO8H,EAAE7H,KAAM6H,EAAE3I,KAAM2I,EAAE1E,UAF1B8I,QAHbpE,EAAE,UAYxB,sBAAKxJ,UAAU,kBAAf,UACI,oBAAG+G,KAAK,6CAA6C9F,OAAO,SAAS0O,IAAI,aAAzE,oCAA6G,cAAC,EAAD,OAC7G,uBACA,oBAAG5I,KAAK,gCAAgC9F,OAAO,SAAS0O,IAAI,aAA5D,8BAA0F,cAAC,EAAD,aC5JnG,SAASC,GAAS7P,GACrB,OACI,qBAAKC,UAAU,WAAf,SACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAO6C,OAAO,2BAAd,gC,6BCLT,SAASgN,GAAiB9P,GAChC,OACC,qBAAKC,UAAU,mBAAf,SACC,qBAAKA,UAAU,sBAAf,SACC,4BAAID,EAAMwC,e,MCCP,SAASuN,GAAT,GAA4D,IAApC1N,EAAmC,EAAnCA,UAAW2N,EAAwB,EAAxBA,QAASrB,EAAe,EAAfA,YACzCsB,EAAWzP,IAAM6C,OAAO,MAC9B,EAA0B7C,IAAMC,UAAS,GAAzC,mBAAO0L,EAAP,KAAc+D,EAAd,KAsBA,OApBA1P,IAAMgD,WAAU,WACZ,IAAKnB,EAAU8N,SAAS,QAAS,CAE7B,GADAD,GAAS,IACJD,IAAaA,EAASxM,UAAYpB,GAAkC,IAArBA,EAAUU,QAAgBiN,EAAS,OAEvF,IAAMI,EAAM,IAAIC,KAEhB,IAAKA,KAAIC,eAAiBL,EAASxM,QAAQ8M,YAAY,iCAEnD,YADAN,EAASxM,QAAQsJ,IAAM1K,GAEpB,IAAKgO,KAAIC,cAEZ,YADAJ,GAAS,GAIbE,EAAII,YAAYP,EAASxM,SACzB2M,EAAIK,WAAWpO,MAEpB,CAAC4N,EAAU5N,EAAW2N,IAErB7D,EACQ,cAAC,GAAD,4CAER6D,EACO,cAAC,GAAD,iCAEN3N,GAAkC,IAArBA,EAAUU,OAGvBV,EAAU8N,SAAS,QAMhB,uBAAOlQ,UAAU,eAAe8D,IAAKkM,EAAUS,UAAQ,EAACC,UAAQ,EAACC,WAAYjC,EAA7E,SACI,wBAAQ5B,IAAK1K,EAAWvB,KAAK,gBALjC,uBAAOb,UAAU,eAAe8D,IAAKkM,EAAUS,UAAQ,EAACC,UAAQ,EAACC,WAAYjC,IAJ1E,cAAC,GAAD,gC,MC/BR,SAASkC,GAAT,GAAyD,IAA/B9C,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC/C,OACI,qBAAKhO,UAAU,iBAAf,SACK+N,EAAQrH,KAAI,SAAA8C,GAAC,OACV,qBAAmBxJ,UAAU,gBAA7B,SACI,sBAAKA,UAAS,iBAAYgO,GAAUA,IAAWxE,EAAEzI,MAAM,WAAW,IAAMgC,QAAS,kBAAM+K,EAAQtE,EAAEzI,QAAjG,UACKyI,EAAE8E,MACH,cAAC,EAAD,CAAmBpK,WAAYsF,EAAEtF,iBAH/BsF,EAAEzI,Y,MCPrB,SAAS8P,GAAT,GAA6H,IAAlGC,EAAiG,EAAjGA,UAAWC,EAAsF,EAAtFA,WAAYlP,EAA0E,EAA1EA,QAASsH,EAAiE,EAAjEA,OAAQvH,EAAyD,EAAzDA,SAAUoP,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,eAAsBnM,GAAU,EAAhBnD,KAAgB,EAAVmD,QAE/GiJ,EAAUnM,EAAS8E,KAAI,SAAA8C,GAAM,IAAD,MAE1B/E,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,MAEpEK,EAAc,EACdC,EAAgB,EAEdX,EAAQ,OAAGC,QAAH,IAAGA,GAAH,UAAGA,EAAeK,UAAlB,iBAAG,EAAwBrB,YAA3B,iBAAG,EAA8B9B,YAAjC,aAAG,YAAwCwH,EAAxC,YAAkDK,IAChEhF,IACCU,EAAcV,EAASU,YACvBC,EAAgBX,EAASW,eAG7B,IAAMjB,EAAaC,KAAK+M,MAAOhM,EAAcC,EAAiB,KAE9D,MAAO,CACHpE,MAAOyI,EAAE/B,WACT6G,MAAO9E,EACPtF,iBAIR,OACI,sBAAKlE,UAAU,kBAAf,UACI,cAAC,EAAD,CAAc8N,QAASgD,EAAW/C,QAASlM,EAAQ6E,KAAI,SAAA8C,GAAC,MAAG,CAAEzI,MAAOyI,EAAE/B,WAAY6G,MAAM,UAAD,OAAY9E,OAAQwE,SAAUgD,IAAgB,uBACrI,cAAC,GAAD,CAAgBlD,QAAS,SAACnN,GAAD,OAAOoQ,EAAW,CAAC3H,QAASzI,EAAGwI,OAAQ6H,KAAiBjD,QAASA,EAASC,SAAUiD,EAAe9H,SAAW6H,EAAcC,EAAe7H,QAAQ,U,MCtBjL,SAAS+H,GAAUpR,GACtB,MAAgDyC,IAAxCJ,EAAR,EAAQA,UAAWN,EAAnB,EAAmBA,WAAYK,EAA/B,EAA+BA,aAC/B,EAA4B5B,IAAMC,SAAS,KAA3C,mBAAO2I,EAAP,KAAe2H,EAAf,KACA,EAAoCvQ,IAAMC,SAAS,IAAnD,mBAAO4Q,EAAP,KAAmBC,EAAnB,KACA,EAAuC9Q,IAAMC,SAAS,IAAtD,mBAAO8Q,EAAP,KAAqBC,EAArB,KACA,EAA8BhR,IAAMC,SAAS,CAAE4I,QAAS,KAAMD,OAAQ,OAAtE,mBAAOC,EAAP,KAAgB2H,EAAhB,KACA,EAA8BxQ,IAAMC,UAAS,GAA7C,mBAAOuP,EAAP,KAAgByB,EAAhB,KAEAjR,IAAMgD,WAAU,WACZgO,EAAezP,EAAWF,SAASuH,MACpC,CAACA,EAAQrH,EAAWF,WAEvBrB,IAAMgD,WAAU,WACY,SAApBzB,EAAWjB,OACXwQ,EAAcvP,EAAWD,SACzBiP,EAAUhP,EAAWD,QAAQ,IAE7BkP,EAAW,CAAE3H,QAAStH,EAAWF,SAASE,EAAWD,QAAQ,IAAI,GAAIsH,OAAQrH,EAAWD,QAAQ,KAChG0P,EAAezP,EAAWF,SAASE,EAAWD,QAAQ,QAE3D,CAACC,IAEJvB,IAAMgD,WAAU,WACZ,IAAIkO,GAAS,EAEb,MAAwB,SAApB3P,EAAWjB,KAAwB,WACnC4Q,GAAS,GAERrI,EAAQA,SAKboI,GAAW,GAEX5H,EAAa9H,EAAWH,KAAMG,EAAWjB,KAAMiB,EAAWgD,OAAQsE,EAAQD,OAAQC,EAAQA,SACrFrD,MAAK,YAAY,IAAVwC,EAAS,EAATA,IACAkJ,IACJtP,EAAaoG,GACbiJ,GAAW,OAEdlC,OAAM,SAAA3O,GACC8Q,GACJxF,QAAQC,MAAMvL,MAEf,WACH8Q,GAAS,KAjBTD,GAAW,QACXrP,EAAa,OAkBlB,CAACiH,EAAStH,EAAYK,IA8BzB,OACI,qBAAKnC,UAAS,4BAAuB8B,EAAWjB,MAAhD,SACI,eAAC,EAAD,CAAM8C,WAAS,EAAf,UACI,cAAC,EAAD,CAAOd,OAAO,iBAAiBD,WAAW,SAA1C,SACKd,EAAWJ,QAEK,SAApBI,EAAWjB,KAAkB,eAAC,EAAD,CAAO8B,KAAK,QAAZ,oBAClByG,EAAQD,OADU,aACQC,EAAQA,gBACnCsI,EACX,cAAC,GAAD,CAActP,UAAWA,EAAW2N,QAASA,EAASrB,YArC9C,SAACiD,GACjB,IAAIC,EAAKlN,KAAKC,MAAMC,aAAaC,QAAQ,mBAAqB,MAG1D+M,EAAG9P,EAAWgD,UAAS8M,EAAG9P,EAAWgD,QAAU,IAC/C8M,EAAG9P,EAAWgD,QAAQhD,EAAWjB,QAAO+Q,EAAG9P,EAAWgD,QAAQhD,EAAWjB,MAAQ,IACjF+Q,EAAG9P,EAAWgD,QAAQhD,EAAWjB,MAAMiB,EAAWH,QAClDiQ,EAAG9P,EAAWgD,QAAQhD,EAAWjB,MAAMiB,EAAWH,MAAQ,IAI9D,IAAIkQ,EAA0B,SAApB/P,EAAWjB,KAAX,UAAgCsI,EAAhC,YAA0CC,EAAQA,SAAY,OACxEwI,EAAG9P,EAAWgD,QAAQhD,EAAWjB,MAAMiB,EAAWH,MAAMkQ,GAAO,CAC3D3M,YAAaf,KAAKc,MAAM0M,EAAIG,cAAcC,aAC1C5M,cAAehB,KAAKc,MAAM0M,EAAIG,cAAcE,UAC5CC,UAAW3J,KAAKD,OAGG,SAApBvG,EAAWjB,OACV+Q,EAAG9P,EAAWgD,QAAQhD,EAAWjB,MAAMiB,EAAWH,MAAMkQ,GAAKpO,KAAO,CAChE0F,SACAC,QAASA,EAAQA,UAIzBxE,aAAasN,QAAQ,iBAAkBxN,KAAKyN,UAAUP,OAazB,SAApB9P,EAAWjB,KACR,cAAC,GAAD,CACIiQ,UAAWA,EACXC,WAAYA,EACZ5H,OAAQA,EACRtH,QAASuP,EACTxP,SAAU0P,EACV3P,KAAMG,EAAWH,KACjBqP,cAAe7H,EACf8H,eAAgB7H,EAChBtE,OAAQhD,EAAWgD,SAEzB,QCxGlB,SAASsN,KACP,IAAQ9Q,EAASkB,IAATlB,KAER,MAAa,WAATA,EACK,cAACkN,EAAD,IAGI,UAATlN,EACK,cAAC6P,GAAD,IAIP,cAACvB,GAAD,IAYWyC,OARf,WACE,OACE,cAAChR,EAAD,UACE,cAAC+Q,GAAD,OCpBNE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4a4900c5.chunk.js","sourcesContent":["import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState({ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] })\n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { navigate } = useMovie();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={ () => accentLink.length > 0 && navigate(accentLink)} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? 'title-size-' + size : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Card.css'\n\n// fullWidth: boolean\n// show: boolean\n// doTransition: boolean\nexport function Card(props) {\n\n    const [showing, setShowing] = React.useState(false);\n    const measureRef = React.useRef(null)\n    const [height, setHeight] = React.useState(0);\n\n    React.useEffect(() => {\n        if (!measureRef?.current) return;\n        setShowing(props.show);\n        setHeight(measureRef.current.clientHeight)\n    }, [props.show, measureRef])\n\n    return (\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' }`} style={{\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\n        }}>\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './ErrorBanner.css';\n\nexport function ErrorBanner({children}) {\n\treturn (\n\t\t<div class=\"errorBanner\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div class=\"progressBar\">\n            <div class=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import React from 'react'\nimport { Arrow } from './Arrow'\nimport './MovieRow.css'\nimport { PercentageOverlay } from './PercentageOverlay'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n\n    const progressData = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n    let progress;\n    let percentage = null;\n    if(props.type === \"movie\") {\n        progress = progressData?.[props.source]?.movie?.[props.slug]?.full\n        if(progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" onClick={() => props.onClick && props.onClick()}>\n            <div className=\"left\">\n                {props.title}&nbsp;\n                <span className=\"year\">({props.year})</span>\n            </div>\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            <PercentageOverlay percentage={percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show?'':'hide'} ${props.failed?'failed':''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import Fuse from 'fuse.js'\nimport JSON5 from 'json5'\n\nconst CORS_URL = `https://movie-web-proxy.herokuapp.com`;\nconst BASE_URL = `${CORS_URL}/https://lookmovie.io`;\n\nasync function findContent(searchTerm, type) {\n    const searchUrl = `${BASE_URL}/${type}s/search/?q=${encodeURIComponent(searchTerm)}`;\n    const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n    // Parse DOM to find search results on full search page\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(searchRes, \"text/html\");\n    const nodes = Array.from(doc.querySelectorAll('.movie-item-style-1'));\n    const results = nodes.map(node => {\n        return {\n            type,\n            title: node.querySelector('h6 a').innerText.trim(),\n            year: node.querySelector('.year').innerText.trim(),\n            slug: node.querySelector('a').href.split('/').pop(),\n        }\n    });\n\n    const fuse = new Fuse(results, { threshold: 0.3, distance: 200, keys: [\"title\"] });\n    const matchedResults = fuse\n        .search(searchTerm.toString())\n        .map((result) => result.item);\n\n    if (matchedResults.length === 0) {\n        return { options: [] }\n    }\n\n    if (matchedResults.length > 1) {\n        const res = { options: [] };\n\n        matchedResults.forEach((r) => res.options.push({\n            title: r.title,\n            slug: r.slug,\n            type: r.type,\n            year: r.year,\n            source: 'lookmovie'\n        }));\n\n        return res;\n    } else {\n        const { title, slug, type, year } = matchedResults[0];\n\n        return {\n            options: [{ title, slug, type, year, source: 'lookmovie' }]\n        }\n    }\n}\nasync function getVideoUrl(config) {\n    const accessToken = await getAccessToken(config);\n    const now = Math.floor(Date.now() / 1e3);\n\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${BASE_URL}/manifests/movies/json/${config.id}/${now}/${accessToken}/master.m3u8`;\n    } else if (config.type === 'show') {\n        url = `${BASE_URL}/manifests/shows/json/${accessToken}/${now}/${config.id}/master.m3u8`;\n    }\n\n    const videoOpts = await fetch(url).then((d) => d.json());\n\n    // Find video URL and return it (with a check for a full url if needed)\n    const opts = [\"1080p\", \"1080\", \"720p\", \"720\", \"480p\", \"480\", \"auto\"]\n\n    let videoUrl = \"\";\n    for (let res of opts) {\n        if (videoOpts[res] && !videoOpts[res].includes('dummy') && !videoOpts[res].includes('earth-1984') && !videoUrl) {\n            videoUrl = videoOpts[res]\n        }\n    }\n\n    return videoUrl.startsWith(\"/\") ? `${BASE_URL}${videoUrl}` : videoUrl;\n}\n\nasync function getAccessToken(config) {\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${BASE_URL}/api/v1/security/movie-access?id_movie=${config.id}&token=1&sk=&step=1`;\n    } else if (config.type === 'show') {\n        url = `${BASE_URL}/api/v1/security/show-access?slug=${config.slug}&token=&step=2`;\n    }\n\n    const data = await fetch(url).then((d) => d.json());\n\n    const token = data?.data?.accessToken;\n    if (token) return token;\n\n    return \"Invalid type provided in config\";\n}\n\nasync function getEpisodes(slug) {\n    const url = `${BASE_URL}/shows/view/${slug}`;\n    const pageReq = await fetch(url).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`show_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let seasons = [];\n    let episodes = [];\n    data.seasons.forEach((e) => {\n        if (!seasons.includes(e.season))\n            seasons.push(e.season);\n\n        if (!episodes[e.season])\n            episodes[e.season] = []\n        episodes[e.season].push(e.episode)\n    })\n\n    return { seasons, episodes }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    const url = `${BASE_URL}/${type}s/view/${slug}`;\n    const pageReq = await fetch(url).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`${type}_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let id = '';\n\n    if (type === \"movie\") {\n        id = data.id_movie;\n    } else if (type === \"show\") {\n        const episodeObj = data.seasons.find((v) => { return v.season === season && v.episode === episode; });\n\n        if (episodeObj) {\n            id = episodeObj.id_episode;\n        }\n    }\n\n    if (id === '') {\n        return { url: '' }\n    }\n\n    const videoUrl = await getVideoUrl({\n        slug: slug,\n        id: id,\n        type: type,\n    });\n\n    return { url: videoUrl }\n}\n\n\nconst lookMovie = { findContent, getStreamUrl, getEpisodes };\nexport default lookMovie;","const alphabet = {\n    62: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    95: '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'\n};\n\nfunction _filterargs(str) {\n    var juicers = [\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\), *(\\d+), *([\\s\\S]*)\\)\\)/,\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\)/\n    ];\n\n    for (var c = 0; c < juicers.length; ++c) {\n        var m, juicer = juicers[c];\n\n        // eslint-disable-next-line no-cond-assign\n        if (m = juicer.exec(str)) {\n            return [m[1], m[4].split('|'), parseInt(m[2]), parseInt(m[3])];\n        }\n    }\n\n    throw new Error(\"Could not make sense of p.a.c.k.e.r data (unexpected code structure)\");\n}\n\nfunction _unbaser(base) {\n    if (2 <= base <= 36) return (str) => parseInt(str, base);\n\n    const dictionary = {};\n    var alpha = alphabet[base];\n    if (!alpha) throw new Error(\"Unsupported encoding\");\n\n    for (let c = 0; c < alpha.length; ++alpha) {\n        dictionary[alpha[c]] = c;\n    }\n\n    return (str) => str.split(\"\").reverse().reduce((cipher, ind) => Math.pow(base, ind) * dictionary[cipher]);\n}\n\nfunction unpack(str) {\n    var params = _filterargs(str);\n    var payload = params[0], symtab = params[1], radix = params[2], count = params[3];\n\n    if (count !== symtab.length) {\n        throw new Error(\"Malformed p.a.c.k.e.r. symtab. (\" + count + \" != \" + symtab.length + \")\");\n    }\n\n    var unbase = _unbaser(radix);\n    var lookup = (word) => symtab[unbase(word)] || word;\n    var source = payload.replace(/\\b\\w+\\b/g, lookup);\n\n    return source;\n}\n\nexport { unpack };","import { unpack } from '../util/unpacker';\n\nconst CORS_URL = 'https://movie-web-proxy.herokuapp.com/';\nconst BASE_URL = `${CORS_URL}https://gomo.to`;\nconst MOVIE_URL = `${BASE_URL}/movie`\nconst DECODING_URL = `${BASE_URL}/decoding_v3.php`\n\nasync function findContent(searchTerm, type) {\n    try {\n        if (type !== 'movie') return;\n\n        const term = searchTerm.toLowerCase()\n        const imdbRes = await fetch(`${CORS_URL}https://v2.sg.media-imdb.com/suggestion/${term.slice(0, 1)}/${term}.json`).then(d => d.json())\n        \n        const results = [];\n        imdbRes.d.forEach((e) => {\n            if (!e.id.startsWith('tt')) return;\n\n            // Block tv shows\n            if (e.q === \"TV series\") return;\n            if (e.q === \"TV mini-series\") return;\n            if (e.q === \"video game\") return;\n            if (e.q === \"TV movie\") return;\n            if (e.q === \"TV special\") return;\n\n            results.push({\n                title: e.l,\n                slug: e.id,\n                type: 'movie',\n                year: e.y,\n                source: 'gomostream'\n            })\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    if (type !== 'movie') return;\n\n    // Get stream to go with IMDB ID\n    const site1 = await fetch(`${MOVIE_URL}/${slug}`).then((d) => d.text());\n\n    if (site1 === \"Movie not available.\")\n        return { url: '' };\n\n    const tc = site1.match(/var tc = '(.+)';/)?.[1]\n    const _token = site1.match(/\"_token\": \"(.+)\",/)?.[1]\n\n    const fd = new FormData()\n    fd.append('tokenCode', tc)\n    fd.append('_token', _token)\n\n    const src = await fetch(DECODING_URL, {\n        method: \"POST\",\n        body: fd,\n        headers: { \n            'x-token': tc.slice(5, 13).split(\"\").reverse().join(\"\") + \"13574199\" \n        }\n    }).then((d) => d.json());\n\n    const embedUrl = src.find(url => url.includes('gomo.to'));\n    const site2 = await fetch(`${CORS_URL}${embedUrl}`).then((d) => d.text());\n\n    const parser = new DOMParser();\n    const site2Dom = parser.parseFromString(site2, \"text/html\");\n\n    if (site2Dom.body.innerText === \"File was deleted\")\n        return { url: '' }\n\n    const script = site2Dom.querySelectorAll(\"script\")[8].innerHTML;\n    \n    let unpacked = unpack(script).split('');\n    unpacked.splice(0, 43);\n    let index = unpacked.findIndex((e) => e === '\"');\n    const url = unpacked.slice(0, index).join('');\n\n    return { url }\n}\n\nconst gomostream = { findContent, getStreamUrl }\nexport default gomostream;","import lookMovie from './scraper/lookmovie';\nimport gomostream from './scraper/gomostream';\n\nasync function findContent(searchTerm, type) {\n    const results = { options: []};\n    const content = await Promise.all([\n        lookMovie.findContent(searchTerm, type),\n        gomostream.findContent(searchTerm, type)\n    ]);\n\n    content.forEach((o) => {\n        if (!o || !o.options) return;\n\n        o.options.forEach((i) => {\n            if (!i) return;\n            results.options.push(i)\n        })\n    });\n\n    return results;\n}\n\nasync function getStreamUrl(slug, type, source, season, episode) {\n    switch (source) {\n        case 'lookmovie':\n            return await lookMovie.getStreamUrl(slug, type, season, episode);\n        case 'gomostream':\n            return await gomostream.getStreamUrl(slug, type, season, episode);\n        default:\n            return;\n    }\n}\n\nasync function getEpisodes(slug, source) {\n    switch (source) {\n        case 'lookmovie':\n            return await lookMovie.getEpisodes(slug);\n        case 'gomostream':\n        default:\n            return;\n    }\n}\n\nexport { findContent, getStreamUrl, getEpisodes }","import React from 'react';\nimport './TypeSelector.css'\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n    const selectedIndex = choices.findIndex(v=>v.value===selected);\n    const transformStyles = {\n        opacity: selectedIndex!==-1?1:0,\n        transform: `translateX(${selectedIndex!==-1?selectedIndex*7:0}rem)`\n    }\n    return (\n        <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n            {choices.map(v=>(\n                <div key={v.value} className={`choice ${selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                    {v.label}\n                </div>\n            ))}\n            <div className=\"selectedBar\" style={transformStyles}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport './DiscordBanner.css';\n\nexport function DiscordBanner() {\n\treturn (\n\t\t<div className=\"discordBanner\">\n\t\t\t<a href=\"https://discord.gg/vXsRvye8BS\">\n                Join our Discord server\n            </a>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { InputBox } from '../components/InputBox';\nimport { Title } from '../components/Title';\nimport { Card } from '../components/Card';\nimport { ErrorBanner } from '../components/ErrorBanner';\nimport { MovieRow } from '../components/MovieRow';\nimport { Arrow } from '../components/Arrow';\nimport { Progress } from '../components/Progress';\nimport { findContent, getStreamUrl, getEpisodes } from '../lib/index';\nimport { useMovie } from '../hooks/useMovie';\nimport { TypeSelector } from '../components/TypeSelector';\n\nimport './Search.css';\nimport { DiscordBanner } from '../components/DiscordBanner';\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [offlineStatus, setOfflineStatus] = React.useState(false);\n    const [type, setType] = React.useState(\"movie\");\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type, source) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`)\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const data = await getEpisodes(slug, source);\n                seasons = data.seasons;\n                episodes = data.episodes;\n            }\n\n            let realUrl = '';\n            if (type === \"movie\") {\n                // getStreamUrl(slug, type, source, season, episode)\n                const { url } = await getStreamUrl(slug, type, source);\n\n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n                realUrl = url;\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug,\n                source\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            console.error(err);\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType);\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type, source } = options[0];\n            getStream(title, slug, type, source);\n        } catch (err) {\n            console.error(err);\n            fail(`Failed to watch ${contentType}`)\n        }\n    }\n\n    React.useEffect(() => {\n        async function fetchHealth() {\n            const HOME_URL = \"https://movie-web-proxy.herokuapp.com\"\n            await fetch(HOME_URL).catch(() => {\n                // Request failed; source likely offline\n                setOfflineStatus(`Our content provider is currently offline, apologies.`)\n            })\n        }\n        fetchHealth()\n    }, [])\n\n    return (\n        <div className=\"cardView\">\n            <Card>\n                <DiscordBanner />\n                {offlineStatus ? <ErrorBanner>{offlineStatus}</ErrorBanner> : ''}\n                <Title accent=\"Because watching content legally is boring\">\n                    What do you wanna watch?\n                </Title>\n                <TypeSelector\n                    setType={(type) => setType(type)}\n                    choices={[\n                        { label: \"Movie\", value: \"movie\" },\n                        { label: \"TV Show\", value: \"show\" }\n                    ]}\n                    noWrap={true}\n                    selected={type}\n                />\n                <InputBox placeholder={type === \"movie\" ? \"Hamilton\" : \"Atypical\"} onSubmit={(str) => searchMovie(str, type)} />\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n            </Card>\n\n            <Card show={showingOptions} doTransition>\n                <Title size=\"medium\">\n                    Whoops, there are a few {type}s like that\n                </Title>\n                { Object.entries(options.reduce((a, v) => {\n                        if (!a[v.source]) a[v.source] = []\n                        a[v.source].push(v)\n                        return a;\n                    }, {})).map(v => (\n                        <div key={v[0]}>\n                            <p className=\"source\">{v[0]}</p>\n                            {v[1].map((v, i) => (\n                                <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} source={v.source} onClick={() => {\n                                    setShowingOptions(false)\n                                    getStream(v.title, v.slug, v.type, v.source)\n                                }} />\n                            ))}\n                        </div>\n                    ))\n                }\n            </Card>\n            <div className=\"topRightCredits\">\n                <a href=\"https://github.com/JamesHawkinss/movie-web\" target=\"_blank\" rel=\"noreferrer\">Check it out on GitHub <Arrow /></a>\n                <br />\n                <a href=\"https://discord.gg/vXsRvye8BS\" target=\"_blank\" rel=\"noreferrer\">Join the Discord <Arrow /></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\n\nexport function NotFound(props) {\n    return (\n        <div className=\"cardView\">\n            <Card>\n                <Title accent=\"How did you end up here?\">\n                    Oopsie doopsie\n                </Title>\n            </Card>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\nimport './VideoElement.css'\n\n// streamUrl: string\n// loading: boolean\nexport function VideoElement({ streamUrl, loading, setProgress }) {\n    const videoRef = React.useRef(null);\n    const [error, setError] = React.useState(false);\n\n    React.useEffect(() => {\n        if (!streamUrl.endsWith('.mp4')) {\n            setError(false)\n            if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n            \n            const hls = new Hls();\n            \n            if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                videoRef.current.src = streamUrl;\n                return;\n            } else if (!Hls.isSupported()) {\n                setError(true)\n                return;\n            }\n            \n            hls.attachMedia(videoRef.current);\n            hls.loadSource(streamUrl);\n        }\n    }, [videoRef, streamUrl, loading])\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    if (!streamUrl.endsWith('.mp4')) {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} />\n        )\n    } else {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress}>\n                <source src={streamUrl} type=\"video/mp4\" />\n            </video>\n        )\n    }\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\">\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport './EpisodeSelector.css'\n\nexport function EpisodeSelector({ setSeason, setEpisode, seasons, season, episodes, currentSeason, currentEpisode, slug, source }) {\n\n    const choices = episodes.map(v => {\n\n        let progressData = JSON.parse(localStorage.getItem('video-progress') || \"{}\")\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.[source]?.show?.slug?.[`${season}-${v}`]\n        if(progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    })\n\n    return (\n        <div className=\"episodeSelector\">\n            <TypeSelector setType={setSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} selected={currentSeason}/><br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: currentSeason})} choices={choices} selected={currentEpisode.season === currentSeason?currentEpisode.episode:null}/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport { getStreamUrl } from '../lib/index'\n\nimport './Movie.css'\n\nexport function MovieView(props) {\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [season, setSeason] = React.useState(\"1\");\n    const [seasonList, setSeasonList] = React.useState([]);\n    const [episodeLists, setEpisodeList] = React.useState([]);\n    const [episode, setEpisode] = React.useState({ episode: null, season: null });\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        setEpisodeList(streamData.episodes[season]);\n    }, [season, streamData.episodes])\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            setSeason(streamData.seasons[0])\n            // TODO load from localstorage last watched\n            setEpisode({ episode: streamData.episodes[streamData.seasons[0]][0], season: streamData.seasons[0] })\n            setEpisodeList(streamData.episodes[streamData.seasons[0]]);\n        }\n    }, [streamData])\n\n    React.useEffect(() => {\n        let cancel = false;\n        // ignore if not a show\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n        if (!episode.episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n        setLoading(true);\n\n        getStreamUrl(streamData.slug, streamData.type, streamData.source, episode.season, episode.episode)\n            .then(({url}) => {\n                if (cancel) return;\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch(e => {\n                if (cancel) return;\n                console.error(e)\n            })\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl])\n\n    const setProgress = (evt) => {\n        let ls = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n\n        // We're just checking lookmovie for now since there is only one scraper\n        if(!ls[streamData.source]) ls[streamData.source] = {}\n        if(!ls[streamData.source][streamData.type]) ls[streamData.source][streamData.type] = {}\n        if(!ls[streamData.source][streamData.type][streamData.slug]) {\n            ls[streamData.source][streamData.type][streamData.slug] = {}\n        }\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode.episode}` : \"full\"\n        ls[streamData.source][streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now()\n        }\n\n        if(streamData.type === \"show\") {\n            ls[streamData.source][streamData.type][streamData.slug][key].show = {\n                season,\n                episode: episode.episode\n            }\n        }\n\n        localStorage.setItem(\"video-progress\", JSON.stringify(ls))\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {episode.season}: Episode {episode.episode}\n                </Title> : undefined}\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} />\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSeason={setSeason}\n                        setEpisode={setEpisode}\n                        season={season}\n                        seasons={seasonList}\n                        episodes={episodeLists}\n                        slug={streamData.slug}\n                        currentSeason={season}\n                        currentEpisode={episode}\n                        source={streamData.source}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import './index.css';\nimport { SearchView } from './views/Search';\nimport { NotFound } from './views/NotFound';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider} from './hooks/useMovie';\n\nfunction Router() {\n  const { page } = useMovie();\n\n  if (page === \"search\") {\n    return <SearchView/>\n  }\n\n  if (page === \"movie\") {\n    return <MovieView/>\n  }\n\n  return (\n    <NotFound/>\n  )\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router/>\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}