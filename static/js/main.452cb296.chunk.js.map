{"version":3,"sources":["components/Arrow.js","components/Card.js","components/ErrorBanner.js","components/InputBox.js","components/PercentageOverlay.js","components/MovieRow.js","components/Progress.js","hooks/useMovie.js","components/Title.js","components/TypeSelector.js","lib/scraper/lookmovie.js","lib/util/unpacker.js","lib/scraper/gomostream.js","lib/index.js","views/Search.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/EpisodeSelector.js","views/Movie.js","App.js","index.js"],"names":["Arrow","props","className","dangerouslySetInnerHTML","__html","left","Card","React","useState","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","style","doTransition","ref","children","ErrorBanner","InputBox","onSubmit","placeholder","searchTerm","setSearchTerm","e","preventDefault","type","id","value","onChange","target","required","PercentageOverlay","percentage","Math","max","width","Fragment","MovieRow","progress","progressData","JSON","parse","localStorage","getItem","source","movie","slug","full","floor","currentlyAt","totalDuration","onClick","viewBox","fill","xmlns","d","title","year","place","season","episode","Progress","failed","text","length","steps","toFixed","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","streamData","setStreamData","Provider","navigate","str","setStreamUrl","streamUrl","p","resetStreamData","useMovie","useContext","Title","history","useHistory","size","accentLink","accent","push","TypeSelector","setType","choices","selected","noWrap","selectedIndex","findIndex","v","transformStyles","opacity","transform","map","label","phpsessid","BASE_URL","process","a","searchUrl","encodeURIComponent","fetch","then","searchRes","parser","DOMParser","doc","parseFromString","nodes","Array","from","querySelectorAll","results","node","querySelector","innerText","trim","href","split","pop","fuse","Fuse","threshold","distance","keys","matchedResults","search","toString","result","item","options","res","forEach","r","getVideoUrl","config","getAccessInfo","subtitles","accessToken","token","now","Date","getEpisodeSubs","subs","url","json","videoOpts","videoUrl","includes","startsWith","headers","data","pageReq","JSON5","slice","indexOf","seasons","episodes","pageRes","get","pageResText","id_movie","episodeObj","find","id_episode","lookMovie","findContent","getStreamUrl","getEpisodes","alphabet","unpack","params","juicers","c","m","exec","parseInt","Error","_filterargs","payload","symtab","radix","count","unbase","base","dictionary","alpha","reverse","reduce","cipher","ind","pow","_unbaser","replace","word","MOVIE_URL","DECODING_URL","term","toLowerCase","imdbRes","q","l","y","console","error","site1","tc","match","_token","fd","FormData","append","method","body","join","src","embedUrl","site2","site2Dom","script","innerHTML","unpacked","splice","index","gomostream","Promise","all","o","i","SearchView","routeMatch","useRouteMatch","streamRouteMatch","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","errorStatus","setErrorStatus","continueWatching","setContinueWatching","fail","getStream","realUrl","query","contentType","catch","fetchHealth","newContinueWatching","Object","entries","values","subselection","entry","percentageDone","meta","newShow","sort","b","updatedAt","to","Helmet","searchMovie","deletable","rel","VideoPlaceholder","VideoElement","loading","videoRef","startTime","setError","onLoad","currentTime","endsWith","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","crossorigin","controls","autoPlay","onProgress","onLoadedData","sub","kind","language","file","NumberSelector","EpisodeSelector","setSelectedSeason","selectedSeason","setEpisode","currentSeason","currentEpisode","round","MovieView","baseRouteMatch","showRouteMatch","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","setStartTime","isVideoTimeSet","cancel","ls","key","time","undefined","evt","currentTarget","duration","setItem","stringify","Router","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.452cb296.chunk.js","sourcesContent":["import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react'\nimport './Card.css'\n\n// fullWidth: boolean\n// show: boolean\n// doTransition: boolean\nexport function Card(props) {\n\n    const [showing, setShowing] = React.useState(false);\n    const measureRef = React.useRef(null)\n    const [height, setHeight] = React.useState(0);\n\n    React.useEffect(() => {\n        if (!measureRef?.current) return;\n        setShowing(props.show);\n        setHeight(measureRef.current.clientHeight)\n    }, [props.show, measureRef])\n\n    return (\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' }`} style={{\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\n        }}>\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './ErrorBanner.css';\n\nexport function ErrorBanner({children}) {\n\treturn (\n\t\t<div className=\"errorBanner\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div className=\"progressBar\">\n            <div className=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import React from 'react'\nimport { Arrow } from './Arrow'\n// import { Cross } from './Crosss'\nimport { PercentageOverlay } from './PercentageOverlay'\nimport './MovieRow.css'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n    const progressData = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n    let progress;\n    let percentage = null;\n    \n    if (props.type === \"movie\") {\n        progress = progressData?.[props.source]?.movie?.[props.slug]?.full\n        \n        if (progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" onClick={() => props.onClick && props.onClick()}>\n        \n            { props.source === \"lookmovie\" && (\n                <div className=\"subtitleIcon\">\n                    <svg id=\"subtitleIcon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M20 4H4C2.897 4 2 4.897 2 6V18C2 19.103 2.897 20 4 20H20C21.103 20 22 19.103 22 18V6C22 4.897 21.103 4 20 4ZM11 10H8V14H11V16H8C6.897 16 6 15.103 6 14V10C6 8.897 6.897 8 8 8H11V10ZM18 10H15V14H18V16H15C13.897 16 13 15.103 13 14V10C13 8.897 13.897 8 15 8H18V10Z\" fill=\"#EEEEEE\"/>\n                    </svg>\n                </div>\n            ) }\n        \n            <div className=\"left\">\n                {/* <Cross /> */}\n                <div className=\"titleWrapper\">\n                    <div className=\"titleText\">\n                        {props.title}\n                        &nbsp;\n                        <span className=\"year\">({props.year})</span>\n                        <span className=\"seasonEpisodeSubtitle\">{props.place ? ` - S${props.place.season}:E${props.place.episode}` : ''}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            \n            <PercentageOverlay percentage={props.percentage || percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show ? '' : 'hide'} ${props.failed ? 'failed' : ''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState(null); //{ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] }) \n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n            resetStreamData() { setStreamData(null) }\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { streamData, resetStreamData } = useMovie();\n    const history = useHistory();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n    \n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={() => {\n                    if (accentLink.length > 0) {\n                        history.push(`/${streamData.type}`);\n                        resetStreamData();\n                    }\n                }} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? `title-size-${size}` : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport './TypeSelector.css'\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n    const selectedIndex = choices.findIndex(v=>v.value===selected);\n    const transformStyles = {\n        opacity: selectedIndex!==-1?1:0,\n        transform: `translateX(${selectedIndex!==-1?selectedIndex*7:0}rem)`\n    }\n    return (\n        <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n            {choices.map(v=>(\n                <div key={v.value} className={`choice ${selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                    {v.label}\n                </div>\n            ))}\n            <div className=\"selectedBar\" style={transformStyles}/>\n        </div>\n    )\n}\n","import Fuse from 'fuse.js'\nimport JSON5 from 'json5'\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie.io`;\nlet phpsessid;\n\nasync function findContent(searchTerm, type) {\n    try {\n        const searchUrl = `${BASE_URL}/${type}s/search/?q=${encodeURIComponent(searchTerm)}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n    \n        // Parse DOM to find search results on full search page\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        const nodes = Array.from(doc.querySelectorAll('.movie-item-style-1'));\n        const results = nodes.map(node => {\n            return {\n                type,\n                title: node.querySelector('h6 a').innerText.trim(),\n                year: node.querySelector('.year').innerText.trim(),\n                slug: node.querySelector('a').href.split('/').pop(),\n            }\n        });\n    \n        const fuse = new Fuse(results, { threshold: 0.3, distance: 200, keys: [\"title\"] });\n        const matchedResults = fuse\n            .search(searchTerm.toString())\n            .map((result) => result.item);\n    \n        if (matchedResults.length === 0) {\n            return { options: [] }\n        }\n    \n        if (matchedResults.length > 1) {\n            const res = { options: [] };\n    \n            matchedResults.forEach((r) => res.options.push({\n                title: r.title,\n                slug: r.slug,\n                type: r.type,\n                year: r.year,\n                source: 'lookmovie'\n            }));\n    \n            return res;\n        } else {\n            const { title, slug, type, year } = matchedResults[0];\n    \n            return {\n                options: [{ title, slug, type, year, source: 'lookmovie' }]\n            }\n        }\n    } catch (e) {\n        return { options: [] }\n    }\n}\nasync function getVideoUrl(config) {\n    const { subtitles, token: accessToken } = await getAccessInfo(config);\n    const now = Math.floor(Date.now() / 1e3);\n\n    let subs;\n\n    if (config.type === \"show\") {\n        subs = await getEpisodeSubs(config);\n    } else if (config.type === \"movie\") {\n        subs = subtitles;\n    }\n\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${BASE_URL}/manifests/movies/json/${config.id}/${now}/${accessToken}/master.m3u8`;\n    } else if (config.type === 'show') {\n        url = `${BASE_URL}/manifests/shows/json/${accessToken}/${now}/${config.id}/master.m3u8`;\n    }\n\n    const videoOpts = await fetch(url).then((d) => d.json());\n\n    // Find video URL and return it (with a check for a full url if needed)\n    const opts = [\"1080p\", \"1080\", \"720p\", \"720\", \"480p\", \"480\", \"auto\"]\n\n    let videoUrl = \"\";\n    for (let res of opts) {\n        if (videoOpts[res] && !videoOpts[res].includes('dummy') && !videoOpts[res].includes('earth-1984') && !videoUrl) {\n            videoUrl = videoOpts[res]\n        }\n    }\n\n    return {\n        videoUrl: videoUrl.startsWith(\"/\") ? `${BASE_URL}${videoUrl}` : videoUrl, \n        subs, \n    };\n}\n\nasync function getEpisodeSubs (config) {\n    return await fetch(`${BASE_URL}/api/v1/shows/episode-subtitles/?id_episode=${config.id}`, {\n        headers: { phpsessid },\n    }).then(res => res.json());\n}\n\nasync function getAccessInfo(config) {\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${BASE_URL}/api/v1/security/movie-access?id_movie=${config.id}&token=1&sk=&step=1`;\n    } else if (config.type === 'show') {\n        url = `${BASE_URL}/api/v1/security/show-access?slug=${config.slug}&token=&step=2`;\n    }\n\n    const data = await fetch(url, {\n        headers: { phpsessid },\n    }).then((d) => d.json());\n\n    const token = data?.data?.accessToken;\n    const subtitles = data?.data?.subtitles;\n\n    if (token) return { token, subtitles };\n\n    return \"Invalid type provided in config\";\n}\n\nasync function getEpisodes(slug) {\n    const url = `${BASE_URL}/shows/view/${slug}`;\n    const pageReq = await fetch(url, {\n        headers: { phpsessid },\n    }).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`show_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let seasons = [];\n    let episodes = [];\n    data.seasons.forEach((e) => {\n        if (!seasons.includes(e.season))\n            seasons.push(e.season);\n\n        if (!episodes[e.season])\n            episodes[e.season] = []\n        episodes[e.season].push(e.episode)\n    })\n\n    return { seasons, episodes }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    const url = `${BASE_URL}/${type}s/view/${slug}`;\n    const pageRes = await fetch(url);\n    if (pageRes.headers.get('phpsessid')) phpsessid = pageRes.headers.get('phpsessid');\n    const pageResText = await pageRes.text();\n\n    const data = JSON5.parse(\"{\" +\n        pageResText\n            .slice(pageResText.indexOf(`${type}_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let id = '';\n\n    if (type === \"movie\") {\n        id = data.id_movie;\n    } else if (type === \"show\") {\n        const episodeObj = data.seasons.find((v) => { return v.season === season && v.episode === episode; });\n\n        if (episodeObj) {\n            id = episodeObj.id_episode;\n        }\n    }\n\n    if (id === '') {\n        return { url: '' }\n    }\n\n    const videoUrl = await getVideoUrl({\n        slug: slug,\n        id: id,\n        type: type,\n    }); \n\n    return { url: videoUrl.videoUrl, subtitles: videoUrl.subs };\n}\n\n\nconst lookMovie = { findContent, getStreamUrl, getEpisodes };\nexport default lookMovie;\n","const alphabet = {\n    62: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    95: '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'\n};\n\nfunction _filterargs(str) {\n    var juicers = [\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\), *(\\d+), *([\\s\\S]*)\\)\\)/,\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\)/\n    ];\n\n    for (var c = 0; c < juicers.length; ++c) {\n        var m, juicer = juicers[c];\n\n        // eslint-disable-next-line no-cond-assign\n        if (m = juicer.exec(str)) {\n            return [m[1], m[4].split('|'), parseInt(m[2]), parseInt(m[3])];\n        }\n    }\n\n    throw new Error(\"Could not make sense of p.a.c.k.e.r data (unexpected code structure)\");\n}\n\nfunction _unbaser(base) {\n    if (2 <= base <= 36) return (str) => parseInt(str, base);\n\n    const dictionary = {};\n    var alpha = alphabet[base];\n    if (!alpha) throw new Error(\"Unsupported encoding\");\n\n    for (let c = 0; c < alpha.length; ++alpha) {\n        dictionary[alpha[c]] = c;\n    }\n\n    return (str) => str.split(\"\").reverse().reduce((cipher, ind) => Math.pow(base, ind) * dictionary[cipher]);\n}\n\nfunction unpack(str) {\n    var params = _filterargs(str);\n    var payload = params[0], symtab = params[1], radix = params[2], count = params[3];\n\n    if (count !== symtab.length) {\n        throw new Error(\"Malformed p.a.c.k.e.r. symtab. (\" + count + \" != \" + symtab.length + \")\");\n    }\n\n    var unbase = _unbaser(radix);\n    var lookup = (word) => symtab[unbase(word)] || word;\n    var source = payload.replace(/\\b\\w+\\b/g, lookup);\n\n    return source;\n}\n\nexport { unpack };","import { unpack } from '../util/unpacker';\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://gomo.to`;\nconst MOVIE_URL = `${BASE_URL}/movie`\nconst DECODING_URL = `${BASE_URL}/decoding_v3.php`\n\nasync function findContent(searchTerm, type) {\n    try {\n        if (type !== 'movie') return;\n\n        const term = searchTerm.toLowerCase()\n        const imdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://v2.sg.media-imdb.com/suggestion/${term.slice(0, 1)}/${term}.json`).then(d => d.json())\n        \n        const results = [];\n        imdbRes.d.forEach((e) => {\n            if (!e.id.startsWith('tt')) return;\n\n            // Block tv shows\n            if (e.q === \"TV series\") return;\n            if (e.q === \"TV mini-series\") return;\n            if (e.q === \"video game\") return;\n            if (e.q === \"TV movie\") return;\n            if (e.q === \"TV special\") return;\n\n            results.push({\n                title: e.l,\n                slug: e.id,\n                type: 'movie',\n                year: e.y,\n                source: 'gomostream'\n            })\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    if (type !== 'movie') return;\n\n    // Get stream to go with IMDB ID\n    const site1 = await fetch(`${MOVIE_URL}/${slug}`).then((d) => d.text());\n\n    if (site1 === \"Movie not available.\")\n        return { url: '' };\n\n    const tc = site1.match(/var tc = '(.+)';/)?.[1]\n    const _token = site1.match(/\"_token\": \"(.+)\",/)?.[1]\n\n    const fd = new FormData()\n    fd.append('tokenCode', tc)\n    fd.append('_token', _token)\n\n    const src = await fetch(DECODING_URL, {\n        method: \"POST\",\n        body: fd,\n        headers: { \n            'x-token': tc.slice(5, 13).split(\"\").reverse().join(\"\") + \"13574199\" \n        }\n    }).then((d) => d.json());\n\n    const embedUrl = src.find(url => url.includes('gomo.to'));\n    const site2 = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}${embedUrl}`).then((d) => d.text());\n\n    const parser = new DOMParser();\n    const site2Dom = parser.parseFromString(site2, \"text/html\");\n\n    if (site2Dom.body.innerText === \"File was deleted\")\n        return { url: '' }\n\n    const script = site2Dom.querySelectorAll(\"script\")[8].innerHTML;\n    \n    let unpacked = unpack(script).split('');\n    unpacked.splice(0, 43);\n    let index = unpacked.findIndex((e) => e === '\"');\n    const url = unpacked.slice(0, index).join('');\n\n    return { url }\n}\n\nconst gomostream = { findContent, getStreamUrl }\nexport default gomostream;","import lookMovie from './scraper/lookmovie';\nimport gomostream from './scraper/gomostream';\n\nasync function findContent(searchTerm, type) {\n    const results = { options: []};\n    const content = await Promise.all([\n        lookMovie.findContent(searchTerm, type),\n        gomostream.findContent(searchTerm, type)\n    ]);\n\n    content.forEach((o) => {\n        if (!o || !o.options) return;\n\n        o.options.forEach((i) => {\n            if (!i) return;\n            results.options.push(i)\n        })\n    });\n\n    return results;\n}\n\nasync function getStreamUrl(slug, type, source, season, episode) {\n    switch (source) {\n        case 'lookmovie':\n            return await lookMovie.getStreamUrl(slug, type, season, episode);\n        case 'gomostream':\n            return await gomostream.getStreamUrl(slug, type, season, episode);\n        default:\n            return;\n    }\n}\n\nasync function getEpisodes(slug, source) {\n    switch (source) {\n        case 'lookmovie':\n            return await lookMovie.getEpisodes(slug);\n        case 'gomostream':\n        default:\n            return;\n    }\n}\n\nexport { findContent, getStreamUrl, getEpisodes }","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Redirect, useHistory, useRouteMatch } from 'react-router-dom';\nimport { Arrow } from '../components/Arrow';\nimport { Card } from '../components/Card';\nimport { ErrorBanner } from '../components/ErrorBanner';\nimport { InputBox } from '../components/InputBox';\nimport { MovieRow } from '../components/MovieRow';\nimport { Progress } from '../components/Progress';\nimport { Title } from '../components/Title';\nimport { TypeSelector } from '../components/TypeSelector';\nimport { useMovie } from '../hooks/useMovie';\nimport { findContent, getEpisodes, getStreamUrl } from '../lib/index';\n\nimport './Search.css';\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const history = useHistory();\n    const routeMatch = useRouteMatch('/:type');\n    const type = routeMatch?.params?.type;\n    const streamRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [errorStatus, setErrorStatus] = React.useState(false);\n    const [page, setPage] = React.useState('search');\n    const [continueWatching, setContinueWatching] = React.useState([])\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type, source, year) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`);\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const data = await getEpisodes(slug, source);\n                seasons = data.seasons;\n                episodes = data.episodes;\n            }\n\n            let realUrl = '';\n            let subtitles = []\n\n            if (type === \"movie\") {\n                const { url, subtitles: subs } = await getStreamUrl(slug, type, source);\n\n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n\n                realUrl = url;\n                subtitles = subs\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug,\n                source,\n                year,\n                subtitles\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            console.error(err);\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType);\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type, source, year } = options[0];\n            history.push(`${routeMatch.url}/${source}/${title}/${slug}`);\n            getStream(title, slug, type, source, year);\n        } catch (err) {\n            console.error(err);\n            fail(`Failed to watch ${contentType}`)\n        }\n    }\n\n    React.useEffect(() => {\n        async function fetchHealth() {\n            await fetch(process.env.REACT_APP_CORS_PROXY_URL).catch(() => {\n                // Request failed; source likely offline\n                setErrorStatus(`Our content provider is currently offline, apologies.`)\n            })\n        }\n        fetchHealth()\n    }, []);\n\n    React.useEffect(() => {\n        if (streamRouteMatch) {\n            if (streamRouteMatch?.params.type === 'movie' || streamRouteMatch.params.type === 'show') getStream(streamRouteMatch.params.title, streamRouteMatch.params.slug, streamRouteMatch.params.type, streamRouteMatch.params.source);\n            else return setErrorStatus(\"Failed to find movie. Please try searching below.\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const progressData = JSON.parse(localStorage.getItem('video-progress') || \"{}\")\n        let newContinueWatching = []\n\n        Object.keys(progressData).forEach((source) => {\n            const all = [\n                ...Object.entries(progressData[source]?.show ?? {}),\n                ...Object.entries(progressData[source]?.movie ?? {})\n            ];\n\n            for (const [slug, data] of all) {\n                for (let subselection of Object.values(data)) {\n                    let entry = {\n                        slug,\n                        data: subselection,\n                        type: subselection.show ? 'show' : 'movie',\n                        percentageDone: Math.floor((subselection.currentlyAt / subselection.totalDuration) * 100),\n                        source\n                    }\n\n                    // due to a constraint with incompatible localStorage data,\n                    // we must quit here if episode and season data is not included\n                    // in the show's data. watching the show will resolve.\n                    if (!subselection.meta) continue;\n\n                    if (entry.percentageDone < 90) {\n                        newContinueWatching.push(entry)\n                        // begin next episode logic\n                    } else {\n                        // we can't do next episode for movies!\n                        if (!subselection.show) continue;\n\n                        let newShow = {};\n\n                        // if the current season has a next episode, load it\n                        if (subselection.meta.episodes[subselection.show.season].includes(`${parseInt(subselection.show.episode) + 1}`)) {\n                            newShow.season = subselection.show.season;\n                            newShow.episode = `${parseInt(subselection.show.episode) + 1}`;\n                            entry.percentageDone = 0;\n                            // if the current season does not have a next epsiode, and the next season has a first episode, load that\n                        } else if (subselection.meta.episodes?.[`${parseInt(subselection.show.season) + 1}`]?.[0]) {\n                            newShow.season = `${parseInt(subselection.show.season) + 1}`;\n                            newShow.episode = subselection.meta.episodes[`${parseInt(subselection.show.season) + 1}`][0];\n                            entry.percentageDone = 0;\n                            // the next episode does not exist\n                        } else {\n                            continue;\n                        }\n\n                        // assign the new episode and season data\n                        entry.data.show = { ...newShow };\n\n                        // if the next episode exists, continue. we don't want to end up with duplicate data.\n                        let nextEpisode = progressData?.[source]?.show?.[slug]?.[`${entry.data.show.season}-${entry.data.show.episode}`];\n                        if (nextEpisode) continue;\n\n                        newContinueWatching.push(entry);\n                    }\n                }\n            }\n\n            newContinueWatching = newContinueWatching.sort((a, b) => {\n                return b.data.updatedAt - a.data.updatedAt\n            });\n\n            setContinueWatching(newContinueWatching)\n        })\n    }, []);\n\n    if (!type || (type !== 'movie' && type !== 'show')) {\n        return <Redirect to=\"/movie\" />\n    }\n\n    return (\n        <div className=\"cardView\">\n            <Helmet>\n                <title>{type === 'movie' ? 'movies' : 'shows'} | movie-web</title>\n            </Helmet>\n\n            {/* Nav */}\n            <nav>\n                <a className={page === 'search' ? 'selected-link' : ''} onClick={() => setPage('search')} href>Search</a>\n                {continueWatching.length > 0 ?\n                    <a className={page === 'watching' ? 'selected-link' : ''} onClick={() => setPage('watching')} href>Continue watching</a>\n                    : ''}\n            </nav>\n\n            {/* Search */}\n            {page === 'search' ?\n                <React.Fragment>\n                    <Card>\n                        {errorStatus ? <ErrorBanner>{errorStatus}</ErrorBanner> : ''}\n                        <Title accent=\"Because watching content legally is boring\">\n                            What do you wanna watch?\n                        </Title>\n                        <TypeSelector\n                            setType={(type) => history.push(`/${type}`)}\n                            choices={[\n                                { label: \"Movie\", value: \"movie\" },\n                                { label: \"TV Show\", value: \"show\" }\n                            ]}\n                            noWrap={true}\n                            selected={type}\n                        />\n                        <InputBox placeholder={type === \"movie\" ? \"Hamilton\" : \"Atypical\"} onSubmit={(str) => searchMovie(str, type)} />\n                        <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                    </Card>\n\n                    <Card show={showingOptions} doTransition>\n                        <Title size=\"medium\">\n                            Whoops, there are a few {type}s like that\n                        </Title>\n                        {Object.entries(options.reduce((a, v) => {\n                            if (!a[v.source]) a[v.source] = []\n                            a[v.source].push(v)\n                            return a;\n                        }, {})).map(v => (\n                            <div key={v[0]}>\n                                <p className=\"source\">{v[0]}</p>\n                                {v[1].map((v, i) => (\n                                    <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} source={v.source} onClick={() => {\n                                        history.push(`${routeMatch.url}/${v.source}/${v.title}/${v.slug}`);\n                                        setShowingOptions(false)\n                                        getStream(v.title, v.slug, v.type, v.source, v.year)\n                                    }} />\n                                ))}\n                            </div>\n                        ))}\n                    </Card>\n                </React.Fragment> : <React.Fragment />}\n\n            {/* Continue watching */}\n            {continueWatching.length > 0 && page === 'watching' ? <Card>\n                <Title>Continue watching</Title>\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                {continueWatching?.map((v, i) => (\n                    <MovieRow key={i} title={v.data.meta.title} slug={v.data.meta.slug} type={v.type} year={v.data.meta.year} source={v.source} place={v.data.show} percentage={v.percentageDone} deletable onClick={() => {\n                        if (v.type === 'show') {\n                            history.push(`/show/${v.source}/${v.data.meta.title}/${v.slug}/season/${v.data.show.season}/episode/${v.data.show.episode}`)\n                        } else {\n                            history.push(`/movie/${v.source}/${v.data.meta.title}/${v.slug}`)\n                        }\n\n                        setShowingOptions(false)\n                        getStream(v.data.meta.title, v.data.meta.slug, v.type, v.source, v.data.meta.year)\n                    }} />\n                ))}\n            </Card> : <React.Fragment></React.Fragment>}\n\n            <div className=\"topRightCredits\">\n                <a href=\"https://github.com/JamesHawkinss/movie-web\" target=\"_blank\" rel=\"noreferrer\">Check it out on GitHub <Arrow /></a>\n                <br />\n                <a href=\"https://discord.gg/vXsRvye8BS\" target=\"_blank\" rel=\"noreferrer\">Join the Discord <Arrow /></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\nimport './VideoElement.css'\n\n// streamUrl: string\n// loading: boolean\n// setProgress: (event: NativeEvent) => void\n// videoRef: useRef\n// startTime: number\nexport function VideoElement({ streamUrl, loading, setProgress, videoRef, startTime, streamData }) {\n    const [error, setError] = React.useState(false);\n\n    function onLoad() {\n        if (startTime)\n            videoRef.current.currentTime = startTime;\n    }\n\n    React.useEffect(() => {\n        if (!streamUrl.endsWith('.mp4')) {\n            setError(false)\n            if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n            \n            const hls = new Hls();\n            \n            if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                videoRef.current.src = streamUrl;\n                return;\n            } else if (!Hls.isSupported()) {\n                setError(true)\n                return;\n            }\n            \n            hls.attachMedia(videoRef.current);\n            hls.loadSource(streamUrl);\n        }\n    }, [videoRef, streamUrl, loading]);\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    if (!streamUrl.endsWith('.mp4')) {\n        return (\n            <video crossorigin=\"anonymous\" className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={`${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie.io${sub.file}` } />) }\n            </video>\n        )\n    } else {\n        return (\n            <video crossorigin=\"anonymous\" className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={`${process.env.REACT_APP_CORS_PROXY_URL}https://lookmovie.io${sub.file}` } />) }\n                <source src={streamUrl} type=\"video/mp4\" />\n            </video>\n        )\n    }\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\">\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport './EpisodeSelector.css'\n\nexport function EpisodeSelector({ setSelectedSeason, selectedSeason, setEpisode, seasons, episodes, currentSeason, currentEpisode, streamData }) {\n    const choices = episodes ? episodes.map(v => {\n        let progressData = JSON.parse(localStorage.getItem('video-progress') || \"{}\")\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[`${selectedSeason}-${v}`]\n\n        if (progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    }) : [];\n\n    return (\n        <div className=\"episodeSelector\">\n            <TypeSelector setType={setSelectedSeason} selected={selectedSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} /><br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: selectedSeason})} choices={choices} selected={(selectedSeason.toString() === currentSeason) ? currentEpisode : null} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport { getStreamUrl } from '../lib/index'\n\nimport './Movie.css'\n\nexport function MovieView(props) {\n    const baseRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n    const showRouteMatch = useRouteMatch('/:type/:source/:title/:slug/season/:season/episode/:episode');\n    const history = useHistory();\n\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [ seasonList, setSeasonList ] = React.useState([]);\n    const [ episodeLists, setEpisodeList ] = React.useState([]);\n    const [ loading, setLoading ] = React.useState(false);\n    const [ selectedSeason, setSelectedSeason ] = React.useState(\"1\");\n    const [ startTime, setStartTime ] = React.useState(0);\n    const videoRef = React.useRef(null);\n    let isVideoTimeSet = React.useRef(false);\n\n    const season = showRouteMatch?.params.season || \"1\";\n    const episode = showRouteMatch?.params.episode || \"1\";\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function setEpisode({ season, episode }) {\n        history.push(`${baseRouteMatch.url}/season/${season}/episode/${episode}`);\n        isVideoTimeSet.current = false;\n    }\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && !showRouteMatch) history.replace(`${baseRouteMatch.url}/season/1/episode/1`);\n    }, [streamData.type, showRouteMatch, history, baseRouteMatch.url]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && showRouteMatch) setSelectedSeason(showRouteMatch.params.season.toString());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        let cancel = false;\n\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n\n        if (!episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n\n        setLoading(true);\n        getStreamUrl(streamData.slug, streamData.type, streamData.source, season, episode)\n        .then(({ url }) => {\n                if (cancel) return;\n                streamData.subtitles = [];\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch((e) => {\n                if (cancel) return;\n                console.error(e)\n            })\n\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl, season]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            setEpisodeList(streamData.episodes[selectedSeason]);\n        }\n    }, [streamData.seasons, streamData.episodes, streamData.type, selectedSeason])\n\n    React.useEffect(() => {\n        let ls = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        let time = ls?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[key]?.currentlyAt;\n        setStartTime(time);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [baseRouteMatch, showRouteMatch]);\n\n    const setProgress = (evt) => {\n        let ls = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n\n        if (!ls[streamData.source])\n            ls[streamData.source] = {}\n        if (!ls[streamData.source][streamData.type])\n            ls[streamData.source][streamData.type] = {}\n        if (!ls[streamData.source][streamData.type][streamData.slug])\n            ls[streamData.source][streamData.type][streamData.slug] = {}\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        ls[streamData.source][streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now(),\n            meta: streamData\n        }\n\n        if(streamData.type === \"show\") {\n            ls[streamData.source][streamData.type][streamData.slug][key].show = {\n                season,\n                episode\n            }\n        }\n\n        localStorage.setItem(\"video-progress\", JSON.stringify(ls))\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Helmet>\n                <title>{streamData.title}{streamData.type === 'show' ? ` | S${season}E${episode}` : ''} | movie-web</title>\n            </Helmet>\n\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {season}: Episode {episode}\n                </Title> : undefined}\n\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} videoRef={videoRef} startTime={startTime} streamData={streamData} />\n\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSelectedSeason={setSelectedSeason}\n                        selectedSeason={selectedSeason}\n\n                        setEpisode={setEpisode}\n\n                        seasons={seasonList}\n                        episodes={episodeLists}\n\n                        currentSeason={season}\n                        currentEpisode={episode}\n\n                        streamData={streamData}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import { SearchView } from './views/Search';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider } from './hooks/useMovie';\nimport './index.css';\n\nfunction Router() {\n  const { streamData } = useMovie();\n  if (streamData) return <MovieView />;\n  else return <SearchView />;\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router/>\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}