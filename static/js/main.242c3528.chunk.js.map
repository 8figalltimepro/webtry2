{"version":3,"sources":["components/Arrow.js","components/InputBox.js","hooks/useMovie.js","components/Title.js","components/Card.js","components/ErrorBanner.js","components/PercentageOverlay.js","components/MovieRow.js","components/Progress.js","lib/scraper/lookmovie.js","lib/util/unpacker.js","lib/scraper/gomostream.js","lib/index.js","components/TypeSelector.js","components/DiscordBanner.js","views/Search.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/EpisodeSelector.js","views/Movie.js","App.js","index.js"],"names":["Arrow","props","className","dangerouslySetInnerHTML","__html","left","InputBox","onSubmit","placeholder","React","useState","searchTerm","setSearchTerm","e","preventDefault","type","id","value","onChange","target","required","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","streamData","setStreamData","Provider","navigate","str","setStreamUrl","streamUrl","d","p","resetStreamData","children","useMovie","useContext","Title","history","useHistory","size","accentLink","accent","length","onClick","push","Card","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","style","doTransition","ref","ErrorBanner","class","PercentageOverlay","percentage","Math","max","width","Fragment","MovieRow","progress","progressData","JSON","parse","localStorage","getItem","source","movie","slug","full","floor","currentlyAt","totalDuration","title","year","Progress","failed","text","steps","toFixed","BASE_URL","a","searchUrl","encodeURIComponent","fetch","then","searchRes","parser","DOMParser","doc","parseFromString","nodes","Array","from","querySelectorAll","results","map","node","querySelector","innerText","trim","href","split","pop","fuse","Fuse","threshold","distance","keys","matchedResults","search","toString","result","item","options","res","forEach","r","getVideoUrl","config","getAccessToken","accessToken","now","Date","url","json","videoOpts","videoUrl","includes","startsWith","data","token","pageReq","JSON5","slice","indexOf","seasons","episodes","season","episode","id_movie","episodeObj","find","v","id_episode","lookMovie","findContent","getStreamUrl","getEpisodes","alphabet","unpack","params","juicers","c","m","exec","parseInt","Error","_filterargs","payload","symtab","radix","count","unbase","base","dictionary","alpha","reverse","reduce","cipher","ind","pow","_unbaser","replace","word","CORS_URL","MOVIE_URL","DECODING_URL","term","toLowerCase","imdbRes","q","l","y","console","error","site1","tc","match","_token","fd","FormData","append","method","body","headers","join","src","embedUrl","site2","site2Dom","script","innerHTML","unpacked","splice","index","findIndex","gomostream","Promise","all","o","i","TypeSelector","setType","choices","selected","noWrap","selectedIndex","transformStyles","opacity","transform","label","DiscordBanner","SearchView","routeMatch","useRouteMatch","streamRouteMatch","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","errorStatus","setErrorStatus","fail","getStream","realUrl","query","contentType","to","Helmet","searchMovie","Object","entries","rel","VideoPlaceholder","VideoElement","loading","videoRef","setError","endsWith","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","controls","autoPlay","onProgress","NumberSelector","EpisodeSelector","setSelectedSeason","setEpisode","selectedSeason","currentSeason","currentEpisode","round","MovieView","baseRouteMatch","showRouteMatch","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","cancel","catch","undefined","evt","ls","key","currentTarget","currentTime","duration","updatedAt","setItem","stringify","Router","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.242c3528.chunk.js","sourcesContent":["import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState(null); //{ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] }) \n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n            resetStreamData() { setStreamData(null) }\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { streamData, resetStreamData } = useMovie();\n    const history = useHistory();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={() => {\n                    if (accentLink.length > 0) {\n                        history.push(`/${streamData.type}`);\n                        resetStreamData();\n                    }\n                }} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? 'title-size-' + size : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Card.css'\n\n// fullWidth: boolean\n// show: boolean\n// doTransition: boolean\nexport function Card(props) {\n\n    const [showing, setShowing] = React.useState(false);\n    const measureRef = React.useRef(null)\n    const [height, setHeight] = React.useState(0);\n\n    React.useEffect(() => {\n        if (!measureRef?.current) return;\n        setShowing(props.show);\n        setHeight(measureRef.current.clientHeight)\n    }, [props.show, measureRef])\n\n    return (\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' }`} style={{\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\n        }}>\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './ErrorBanner.css';\n\nexport function ErrorBanner({children}) {\n\treturn (\n\t\t<div class=\"errorBanner\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div class=\"progressBar\">\n            <div class=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import React from 'react'\nimport { Arrow } from './Arrow'\nimport './MovieRow.css'\nimport { PercentageOverlay } from './PercentageOverlay'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n\n    const progressData = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n    let progress;\n    let percentage = null;\n    if(props.type === \"movie\") {\n        progress = progressData?.[props.source]?.movie?.[props.slug]?.full\n        if(progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" onClick={() => props.onClick && props.onClick()}>\n            <div className=\"left\">\n                {props.title}&nbsp;\n                <span className=\"year\">({props.year})</span>\n            </div>\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            <PercentageOverlay percentage={percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show?'':'hide'} ${props.failed?'failed':''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import Fuse from 'fuse.js'\nimport JSON5 from 'json5'\n\nconst CORS_URL = `https://proxy-01.movie-web.workers.dev/?`;\nconst BASE_URL = `${CORS_URL}https://lookmovie.io`;\n\nasync function findContent(searchTerm, type) {\n    const searchUrl = `${BASE_URL}/${type}s/search/?q=${encodeURIComponent(searchTerm)}`;\n    const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n    // Parse DOM to find search results on full search page\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(searchRes, \"text/html\");\n    const nodes = Array.from(doc.querySelectorAll('.movie-item-style-1'));\n    const results = nodes.map(node => {\n        return {\n            type,\n            title: node.querySelector('h6 a').innerText.trim(),\n            year: node.querySelector('.year').innerText.trim(),\n            slug: node.querySelector('a').href.split('/').pop(),\n        }\n    });\n\n    const fuse = new Fuse(results, { threshold: 0.3, distance: 200, keys: [\"title\"] });\n    const matchedResults = fuse\n        .search(searchTerm.toString())\n        .map((result) => result.item);\n\n    if (matchedResults.length === 0) {\n        return { options: [] }\n    }\n\n    if (matchedResults.length > 1) {\n        const res = { options: [] };\n\n        matchedResults.forEach((r) => res.options.push({\n            title: r.title,\n            slug: r.slug,\n            type: r.type,\n            year: r.year,\n            source: 'lookmovie'\n        }));\n\n        return res;\n    } else {\n        const { title, slug, type, year } = matchedResults[0];\n\n        return {\n            options: [{ title, slug, type, year, source: 'lookmovie' }]\n        }\n    }\n}\nasync function getVideoUrl(config) {\n    const accessToken = await getAccessToken(config);\n    const now = Math.floor(Date.now() / 1e3);\n\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${BASE_URL}/manifests/movies/json/${config.id}/${now}/${accessToken}/master.m3u8`;\n    } else if (config.type === 'show') {\n        url = `${BASE_URL}/manifests/shows/json/${accessToken}/${now}/${config.id}/master.m3u8`;\n    }\n\n    const videoOpts = await fetch(url).then((d) => d.json());\n\n    // Find video URL and return it (with a check for a full url if needed)\n    const opts = [\"1080p\", \"1080\", \"720p\", \"720\", \"480p\", \"480\", \"auto\"]\n\n    let videoUrl = \"\";\n    for (let res of opts) {\n        if (videoOpts[res] && !videoOpts[res].includes('dummy') && !videoOpts[res].includes('earth-1984') && !videoUrl) {\n            videoUrl = videoOpts[res]\n        }\n    }\n\n    return videoUrl.startsWith(\"/\") ? `${BASE_URL}${videoUrl}` : videoUrl;\n}\n\nasync function getAccessToken(config) {\n    let url = '';\n\n    if (config.type === 'movie') {\n        url = `${BASE_URL}/api/v1/security/movie-access?id_movie=${config.id}&token=1&sk=&step=1`;\n    } else if (config.type === 'show') {\n        url = `${BASE_URL}/api/v1/security/show-access?slug=${config.slug}&token=&step=2`;\n    }\n\n    const data = await fetch(url).then((d) => d.json());\n\n    const token = data?.data?.accessToken;\n    if (token) return token;\n\n    return \"Invalid type provided in config\";\n}\n\nasync function getEpisodes(slug) {\n    const url = `${BASE_URL}/shows/view/${slug}`;\n    const pageReq = await fetch(url).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`show_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let seasons = [];\n    let episodes = [];\n    data.seasons.forEach((e) => {\n        if (!seasons.includes(e.season))\n            seasons.push(e.season);\n\n        if (!episodes[e.season])\n            episodes[e.season] = []\n        episodes[e.season].push(e.episode)\n    })\n\n    return { seasons, episodes }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    const url = `${BASE_URL}/${type}s/view/${slug}`;\n    const pageReq = await fetch(url).then((d) => d.text());\n\n    const data = JSON5.parse(\"{\" +\n        pageReq\n            .slice(pageReq.indexOf(`${type}_storage`))\n            .split(\"};\")[0]\n            .split(\"= {\")[1]\n            .trim() +\n        \"}\"\n    );\n\n    let id = '';\n\n    if (type === \"movie\") {\n        id = data.id_movie;\n    } else if (type === \"show\") {\n        const episodeObj = data.seasons.find((v) => { return v.season === season && v.episode === episode; });\n\n        if (episodeObj) {\n            id = episodeObj.id_episode;\n        }\n    }\n\n    if (id === '') {\n        return { url: '' }\n    }\n\n    const videoUrl = await getVideoUrl({\n        slug: slug,\n        id: id,\n        type: type,\n    });\n\n    return { url: videoUrl }\n}\n\n\nconst lookMovie = { findContent, getStreamUrl, getEpisodes };\nexport default lookMovie;","const alphabet = {\n    62: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    95: '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'\n};\n\nfunction _filterargs(str) {\n    var juicers = [\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\), *(\\d+), *([\\s\\S]*)\\)\\)/,\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\)/\n    ];\n\n    for (var c = 0; c < juicers.length; ++c) {\n        var m, juicer = juicers[c];\n\n        // eslint-disable-next-line no-cond-assign\n        if (m = juicer.exec(str)) {\n            return [m[1], m[4].split('|'), parseInt(m[2]), parseInt(m[3])];\n        }\n    }\n\n    throw new Error(\"Could not make sense of p.a.c.k.e.r data (unexpected code structure)\");\n}\n\nfunction _unbaser(base) {\n    if (2 <= base <= 36) return (str) => parseInt(str, base);\n\n    const dictionary = {};\n    var alpha = alphabet[base];\n    if (!alpha) throw new Error(\"Unsupported encoding\");\n\n    for (let c = 0; c < alpha.length; ++alpha) {\n        dictionary[alpha[c]] = c;\n    }\n\n    return (str) => str.split(\"\").reverse().reduce((cipher, ind) => Math.pow(base, ind) * dictionary[cipher]);\n}\n\nfunction unpack(str) {\n    var params = _filterargs(str);\n    var payload = params[0], symtab = params[1], radix = params[2], count = params[3];\n\n    if (count !== symtab.length) {\n        throw new Error(\"Malformed p.a.c.k.e.r. symtab. (\" + count + \" != \" + symtab.length + \")\");\n    }\n\n    var unbase = _unbaser(radix);\n    var lookup = (word) => symtab[unbase(word)] || word;\n    var source = payload.replace(/\\b\\w+\\b/g, lookup);\n\n    return source;\n}\n\nexport { unpack };","import { unpack } from '../util/unpacker';\n\nconst CORS_URL = 'https://proxy-01.movie-web.workers.dev/?';\nconst BASE_URL = `${CORS_URL}https://gomo.to`;\nconst MOVIE_URL = `${BASE_URL}/movie`\nconst DECODING_URL = `${BASE_URL}/decoding_v3.php`\n\nasync function findContent(searchTerm, type) {\n    try {\n        if (type !== 'movie') return;\n\n        const term = searchTerm.toLowerCase()\n        const imdbRes = await fetch(`${CORS_URL}https://v2.sg.media-imdb.com/suggestion/${term.slice(0, 1)}/${term}.json`).then(d => d.json())\n        \n        const results = [];\n        imdbRes.d.forEach((e) => {\n            if (!e.id.startsWith('tt')) return;\n\n            // Block tv shows\n            if (e.q === \"TV series\") return;\n            if (e.q === \"TV mini-series\") return;\n            if (e.q === \"video game\") return;\n            if (e.q === \"TV movie\") return;\n            if (e.q === \"TV special\") return;\n\n            results.push({\n                title: e.l,\n                slug: e.id,\n                type: 'movie',\n                year: e.y,\n                source: 'gomostream'\n            })\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    if (type !== 'movie') return;\n\n    // Get stream to go with IMDB ID\n    const site1 = await fetch(`${MOVIE_URL}/${slug}`).then((d) => d.text());\n\n    if (site1 === \"Movie not available.\")\n        return { url: '' };\n\n    const tc = site1.match(/var tc = '(.+)';/)?.[1]\n    const _token = site1.match(/\"_token\": \"(.+)\",/)?.[1]\n\n    const fd = new FormData()\n    fd.append('tokenCode', tc)\n    fd.append('_token', _token)\n\n    const src = await fetch(DECODING_URL, {\n        method: \"POST\",\n        body: fd,\n        headers: { \n            'x-token': tc.slice(5, 13).split(\"\").reverse().join(\"\") + \"13574199\" \n        }\n    }).then((d) => d.json());\n\n    const embedUrl = src.find(url => url.includes('gomo.to'));\n    const site2 = await fetch(`${CORS_URL}${embedUrl}`).then((d) => d.text());\n\n    const parser = new DOMParser();\n    const site2Dom = parser.parseFromString(site2, \"text/html\");\n\n    if (site2Dom.body.innerText === \"File was deleted\")\n        return { url: '' }\n\n    const script = site2Dom.querySelectorAll(\"script\")[8].innerHTML;\n    \n    let unpacked = unpack(script).split('');\n    unpacked.splice(0, 43);\n    let index = unpacked.findIndex((e) => e === '\"');\n    const url = unpacked.slice(0, index).join('');\n\n    return { url }\n}\n\nconst gomostream = { findContent, getStreamUrl }\nexport default gomostream;","import lookMovie from './scraper/lookmovie';\nimport gomostream from './scraper/gomostream';\n\nasync function findContent(searchTerm, type) {\n    const results = { options: []};\n    const content = await Promise.all([\n        lookMovie.findContent(searchTerm, type),\n        gomostream.findContent(searchTerm, type)\n    ]);\n\n    content.forEach((o) => {\n        if (!o || !o.options) return;\n\n        o.options.forEach((i) => {\n            if (!i) return;\n            results.options.push(i)\n        })\n    });\n\n    return results;\n}\n\nasync function getStreamUrl(slug, type, source, season, episode) {\n    switch (source) {\n        case 'lookmovie':\n            return await lookMovie.getStreamUrl(slug, type, season, episode);\n        case 'gomostream':\n            return await gomostream.getStreamUrl(slug, type, season, episode);\n        default:\n            return;\n    }\n}\n\nasync function getEpisodes(slug, source) {\n    switch (source) {\n        case 'lookmovie':\n            return await lookMovie.getEpisodes(slug);\n        case 'gomostream':\n        default:\n            return;\n    }\n}\n\nexport { findContent, getStreamUrl, getEpisodes }","import React from 'react';\nimport './TypeSelector.css'\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n    const selectedIndex = choices.findIndex(v=>v.value===selected);\n    const transformStyles = {\n        opacity: selectedIndex!==-1?1:0,\n        transform: `translateX(${selectedIndex!==-1?selectedIndex*7:0}rem)`\n    }\n    return (\n        <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n            {choices.map(v=>(\n                <div key={v.value} className={`choice ${selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                    {v.label}\n                </div>\n            ))}\n            <div className=\"selectedBar\" style={transformStyles}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport './DiscordBanner.css';\n\nexport function DiscordBanner() {\n\treturn (\n\t\t<div className=\"discordBanner\">\n\t\t\t<a href=\"https://discord.gg/vXsRvye8BS\">\n                Join our Discord server\n            </a>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { Redirect, useRouteMatch, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { InputBox } from '../components/InputBox';\nimport { Title } from '../components/Title';\nimport { Card } from '../components/Card';\nimport { ErrorBanner } from '../components/ErrorBanner';\nimport { MovieRow } from '../components/MovieRow';\nimport { Arrow } from '../components/Arrow';\nimport { Progress } from '../components/Progress';\nimport { findContent, getStreamUrl, getEpisodes } from '../lib/index';\nimport { useMovie } from '../hooks/useMovie';\nimport { TypeSelector } from '../components/TypeSelector';\n\nimport './Search.css';\nimport { DiscordBanner } from '../components/DiscordBanner';\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const history = useHistory();\n    const routeMatch = useRouteMatch('/:type');\n    const type = routeMatch?.params?.type;\n    const streamRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [errorStatus, setErrorStatus] = React.useState(false);\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type, source) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`);\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const data = await getEpisodes(slug, source);\n                seasons = data.seasons;\n                episodes = data.episodes;\n            }\n\n            let realUrl = '';\n            if (type === \"movie\") {\n                // getStreamUrl(slug, type, source, season, episode)\n                const { url } = await getStreamUrl(slug, type, source);\n\n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n                realUrl = url;\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug,\n                source\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            console.error(err);\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType);\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type, source } = options[0];\n            history.push(`${routeMatch.url}/${source}/${title}/${slug}`);\n            getStream(title, slug, type, source);\n        } catch (err) {\n            console.error(err);\n            fail(`Failed to watch ${contentType}`)\n        }\n    }\n\n    // React.useEffect(() => {\n    //     async function fetchHealth() {\n    //         const HOME_URL = \"https://proxy-01.movie-web.workers.dev/?\"\n    //         await fetch(HOME_URL).catch(() => {\n    //             // Request failed; source likely offline\n    //             setErrorStatus(`Our content provider is currently offline, apologies.`)\n    //         })\n    //     }\n    //     fetchHealth()\n    // }, []);\n\n    React.useEffect(() => {\n        if (streamRouteMatch) {\n            if (streamRouteMatch?.params.type === 'movie' || streamRouteMatch.params.type === 'show') getStream(streamRouteMatch.params.title, streamRouteMatch.params.slug, streamRouteMatch.params.type, streamRouteMatch.params.source);\n            else return setErrorStatus(\"Failed to find movie. Please try searching below.\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!type || (type !== 'movie' && type !== 'show')) return <Redirect to=\"/movie\" />\n\n    return (\n        <div className=\"cardView\">\n            <Helmet>\n                <title>{type === 'movie' ? 'Movies' : 'TV Shows'} | movie-web</title>\n            </Helmet>\n\n            <Card>\n                <DiscordBanner />\n                {errorStatus ? <ErrorBanner>{errorStatus}</ErrorBanner> : ''}\n                <Title accent=\"Because watching content legally is boring\">\n                    What do you wanna watch?\n                </Title>\n                <TypeSelector\n                    setType={(type) => history.push(`/${type}`)}\n                    choices={[\n                        { label: \"Movie\", value: \"movie\" },\n                        { label: \"TV Show\", value: \"show\" }\n                    ]}\n                    noWrap={true}\n                    selected={type}\n                />\n                <InputBox placeholder={type === \"movie\" ? \"Hamilton\" : \"Atypical\"} onSubmit={(str) => searchMovie(str, type)} />\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n            </Card>\n\n            <Card show={showingOptions} doTransition>\n                <Title size=\"medium\">\n                    Whoops, there are a few {type}s like that\n                </Title>\n                { Object.entries(options.reduce((a, v) => {\n                        if (!a[v.source]) a[v.source] = []\n                        a[v.source].push(v)\n                        return a;\n                    }, {})).map(v => (\n                        <div key={v[0]}>\n                            <p className=\"source\">{v[0]}</p>\n                            {v[1].map((v, i) => (\n                                <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} source={v.source} onClick={() => {\n                                    history.push(`${routeMatch.url}/${v.source}/${v.title}/${v.slug}`);\n                                    setShowingOptions(false)\n                                    getStream(v.title, v.slug, v.type, v.source)\n                                }} />\n                            ))}\n                        </div>\n                    ))\n                }\n            </Card>\n            <div className=\"topRightCredits\">\n                <a href=\"https://github.com/JamesHawkinss/movie-web\" target=\"_blank\" rel=\"noreferrer\">Check it out on GitHub <Arrow /></a>\n                <br />\n                <a href=\"https://discord.gg/vXsRvye8BS\" target=\"_blank\" rel=\"noreferrer\">Join the Discord <Arrow /></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\nimport './VideoElement.css'\n\n// streamUrl: string\n// loading: boolean\nexport function VideoElement({ streamUrl, loading, setProgress }) {\n    const videoRef = React.useRef(null);\n    const [error, setError] = React.useState(false);\n\n    React.useEffect(() => {\n        if (!streamUrl.endsWith('.mp4')) {\n            setError(false)\n            if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n            \n            const hls = new Hls();\n            \n            if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                videoRef.current.src = streamUrl;\n                return;\n            } else if (!Hls.isSupported()) {\n                setError(true)\n                return;\n            }\n            \n            hls.attachMedia(videoRef.current);\n            hls.loadSource(streamUrl);\n        }\n    }, [videoRef, streamUrl, loading])\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    if (!streamUrl.endsWith('.mp4')) {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} />\n        )\n    } else {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress}>\n                <source src={streamUrl} type=\"video/mp4\" />\n            </video>\n        )\n    }\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\">\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport './EpisodeSelector.css'\n\nexport function EpisodeSelector({ setSelectedSeason, setEpisode, seasons, selectedSeason, season, episodes, currentSeason, currentEpisode, source }) {\n    const choices = episodes ? episodes.map(v => {\n        let progressData = JSON.parse(localStorage.getItem('video-progress') || \"{}\")\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.[source]?.show?.slug?.[`${season}-${v}`]\n        if(progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    }) : [];\n\n    return (\n        <div className=\"episodeSelector\">\n            <TypeSelector setType={setSelectedSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} selected={selectedSeason}/><br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: selectedSeason})} choices={choices} selected={(selectedSeason.toString() === currentSeason) ? currentEpisode : null} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport { getStreamUrl } from '../lib/index'\n\nimport './Movie.css'\n\nexport function MovieView(props) {\n    const baseRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n    const showRouteMatch = useRouteMatch('/:type/:source/:title/:slug/season/:season/episode/:episode');\n    const history = useHistory();\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [seasonList, setSeasonList] = React.useState([]);\n    const [episodeLists, setEpisodeList] = React.useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [ selectedSeason, setSelectedSeason ] = React.useState(\"1\");\n\n    const season = showRouteMatch?.params.season || \"1\";\n    const episode = showRouteMatch?.params.episode || \"1\";\n\n    React.useEffect(() => {\n        setEpisodeList(streamData.episodes[selectedSeason]);\n    }, [selectedSeason, streamData.episodes])\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            // TODO load from localstorage last watched\n            setEpisodeList(streamData.episodes[streamData.seasons[0]]);\n        }\n    }, [streamData])\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && !showRouteMatch) history.replace(`${baseRouteMatch.url}/season/1/episode/1`);\n    }, [streamData, showRouteMatch, history, baseRouteMatch.url]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && !showRouteMatch) history.replace(`${baseRouteMatch.url}/season/1/episode/1`);\n    }, [streamData, showRouteMatch, history, baseRouteMatch.url]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && showRouteMatch) setSelectedSeason(showRouteMatch.params.season.toString());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        let cancel = false;\n        // ignore if not a show\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n        if (!episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n        setLoading(true);\n\n        getStreamUrl(streamData.slug, streamData.type, streamData.source, season, episode)\n            .then(({url}) => {\n                if (cancel) return;\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch(e => {\n                if (cancel) return;\n                console.error(e)\n            })\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl, season]);\n\n    function setEpisode({ season, episode }) {\n        history.push(`${baseRouteMatch.url}/season/${season}/episode/${episode}`);\n    }\n\n    const setProgress = (evt) => {\n        let ls = JSON.parse(localStorage.getItem(\"video-progress\") || \"{}\")\n\n        // We're just checking lookmovie for now since there is only one scraper\n        if(!ls[streamData.source]) ls[streamData.source] = {}\n        if(!ls[streamData.source][streamData.type]) ls[streamData.source][streamData.type] = {}\n        if(!ls[streamData.source][streamData.type][streamData.slug]) {\n            ls[streamData.source][streamData.type][streamData.slug] = {}\n        }\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        ls[streamData.source][streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now()\n        }\n\n        if(streamData.type === \"show\") {\n            ls[streamData.source][streamData.type][streamData.slug][key].show = {\n                season,\n                episode: episode\n            }\n        }\n\n        localStorage.setItem(\"video-progress\", JSON.stringify(ls))\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Helmet>\n                <title>{streamData.title}{streamData.type === 'show' ? ` | S${season}E${episode}` : ''} | movie-web</title>\n            </Helmet>\n\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {season}: Episode {episode}\n                </Title> : undefined}\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} />\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSelectedSeason={setSelectedSeason}\n                        selectedSeason={selectedSeason}\n\n                        setEpisode={setEpisode}\n\n                        seasons={seasonList}\n                        episodes={episodeLists}\n\n                        currentSeason={season}\n                        currentEpisode={episode}\n\n                        source={streamData.source}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import './index.css';\nimport { SearchView } from './views/Search';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider} from './hooks/useMovie';\n\nfunction Router() {\n  const { streamData } = useMovie();\n  if (streamData) return <MovieView />;\n  else return <SearchView />;\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router/>\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}