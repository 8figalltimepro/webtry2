{"version":3,"sources":["components/Arrow.js","components/Card.js","components/ErrorBanner.js","components/InputBox.js","components/PercentageOverlay.js","lib/storage/VideoProgress.js","lib/storage/base.js","components/MovieRow.js","components/Progress.js","hooks/useMovie.js","components/Title.js","components/TypeSelector.js","lib/scraper/theflix.js","lib/scraper/vidzstore.js","lib/util/unpacker.js","lib/scraper/gomostream.js","lib/index.js","views/Search.js","components/VideoPlaceholder.js","components/VideoElement.js","components/NumberSelector.js","components/SelectBox.js","components/EpisodeSelector.js","hooks/useWindowSize.js","views/Movie.js","App.js","index.js","lib/scraper/xemovie.js","lib/scraper/gdriveplayer.js"],"names":["Arrow","props","className","dangerouslySetInnerHTML","__html","left","Card","React","useState","showing","setShowing","measureRef","useRef","height","setHeight","useEffect","current","show","clientHeight","fullWidth","doTransition","style","ref","children","ErrorBanner","InputBox","onSubmit","placeholder","searchTerm","setSearchTerm","e","preventDefault","type","id","value","onChange","target","required","PercentageOverlay","percentage","Math","max","width","Fragment","VideoProgressStore","_data","versionList","maxVersion","versions","storageString","instanceHelpers","staticHelpers","setKey","str","this","addVersion","version","migrate","create","Error","push","toString","update","data","init","registerHelper","name","helper","constructor","String","Function","includes","build","versionListSorted","sort","a","b","forEach","v","i","arr","d","currentVersion","get","store","localStorage","getItem","JSON","parse","console","error","Object","_","save","setItem","stringify","entries","undefined","bind","obj","Number","buildStoreObject","MovieRow","progress","progressData","source","movie","slug","full","floor","currentlyAt","totalDuration","tabIndex","onKeyPress","event","code","onClick","viewBox","fill","xmlns","title","year","place","season","episode","Progress","failed","text","length","steps","toFixed","MovieContext","createContext","MovieProvider","page","setPage","stream","setStream","streamData","setStreamData","Provider","navigate","setStreamUrl","streamUrl","p","resetStreamData","useMovie","useContext","Title","history","useHistory","size","accentLink","accent","handleAccentClick","TypeSelector","setType","choices","selected","noWrap","selectedIndex","findIndex","transformStyles","opacity","transform","map","choice","label","BASE_URL","process","term","toLowerCase","fetch","then","tmdbRes","doc","DOMParser","parseFromString","nodes","Array","from","querySelectorAll","results","slice","node","querySelector","getAttribute","textContent","trim","split","replace","options","sNodes","seasons","episodes","s","epRes","url","res","scripts","prop","find","pageProps","videoUrl","theflix","findContent","getStreamUrl","getEpisodes","searchUrl","searchRes","parser","titleArray","splice","join","innerText","pop","shift","encodeURIComponent","href","fuse","Fuse","threshold","keys","matchedResults","search","result","item","r","decodeURIComponent","DOM","src","vidzstore","alphabet","unpack","params","juicers","c","m","exec","parseInt","_filterargs","payload","symtab","radix","count","unbase","base","dictionary","alpha","reverse","reduce","cipher","ind","pow","_unbaser","word","MOVIE_URL","DECODING_URL","json","imdbRes","startsWith","q","l","y","site1","tc","match","_token","fd","FormData","append","method","body","headers","embedUrl","site2","site2Dom","script","innerHTML","unpacked","index","gomostream","Promise","all","gdriveplayer","xemovie","o","SearchView","routeMatch","useRouteMatch","streamRouteMatch","setOptions","setProgress","setText","setFailed","showingOptions","setShowingOptions","errorStatus","setErrorStatus","continueWatching","setContinueWatching","fail","getStream","realUrl","subtitles","subs","query","contentType","catch","fetchHealth","newContinueWatching","values","subselection","entry","percentageDone","meta","newShow","updatedAt","to","handleKeyPress","Helmet","searchMovie","deletable","rel","VideoPlaceholder","VideoElement","loading","videoRef","startTime","setError","onLoad","currentTime","log","hls","Hls","isSupported","canPlayType","attachMedia","loadSource","controls","autoPlay","onProgress","onLoadedData","sub","kind","language","file","NumberSelector","Option","option","htmlFor","SelectBox","selectedItem","setSelectedItem","isArray","active","setActive","containerRef","handleClick","contains","closeDropdown","document","addEventListener","removeEventListener","onOptionClick","stopPropagation","handleOptionKeyPress","opt","EpisodeSelector","setSelectedSeason","selectedSeason","setEpisode","currentSeason","currentEpisode","round","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","useWindowSize","MovieView","baseRouteMatch","showRouteMatch","seasonList","setSeasonList","episodeLists","setEpisodeList","setLoading","setStartTime","isVideoTimeSet","cancel","key","time","evt","progressSave","currentTarget","duration","Date","now","Router","App","ReactDOM","render","StrictMode","getElementById","movieContainer","movieNodes","filter","link","parentElement","Set","mediaUrl","eval","playlist","tracks","subtitleTrack","URL","blob","subtitleBlob","createObjectURL","API_URL","format","ct","ciphertext","CryptoJS","enc","Base64","iv","salt","jsonStr","Hex","lib","CipherParams","imdb","decryptedData","AES","decrypt","Utf8","sources","unmappedSubtitles"],"mappings":"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","file":"static/js/main.76319723.chunk.js","sourcesContent":["import React from 'react'\nimport './Arrow.css'\n\n// left?: boolean\nexport function Arrow(props) {\n    return (\n        <span className=\"arrow\" dangerouslySetInnerHTML={{ __html: `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather ${props.left?'left':''}\"}>\n                <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                <polyline points=\"12 5 19 12 12 19\"></polyline>\n            </svg>\n        `}}>\n        </span>\n    )\n}\n","import React from 'react'\r\nimport './Card.css'\r\n\r\n// fullWidth: boolean\r\n// show: boolean\r\n// doTransition: boolean\r\nexport function Card(props) {\r\n\r\n    const [showing, setShowing] = React.useState(false);\r\n    const measureRef = React.useRef(null)\r\n    const [height, setHeight] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        if (!measureRef?.current) return;\r\n        setShowing(props.show);\r\n        setHeight(measureRef.current.clientHeight)\r\n    }, [props.show, measureRef])\r\n\r\n    return (\r\n        <div className={`card-wrapper ${ props.fullWidth ? 'full' : '' } ${ props.doTransition ? 'overflow-hidden' : '' }`} style={{\r\n            height: props.doTransition ? (showing ? height : 0) : \"initial\",\r\n        }}>\r\n            <div className={`card ${ showing ? 'show' : '' } ${ props.doTransition ? 'doTransition' : '' }`} ref={measureRef}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './ErrorBanner.css';\n\nexport function ErrorBanner({children}) {\n\treturn (\n\t\t<div className=\"errorBanner\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { Arrow } from './Arrow';\nimport './InputBox.css'\n\n// props = { onSubmit: (str) => {}, placeholder: string}\nexport function InputBox({ onSubmit, placeholder }) {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    return (\n        <form className=\"inputBar\" onSubmit={(e) => {\n            e.preventDefault();\n            onSubmit(searchTerm)\n            return false;\n        }}>\n            <input\n                type='text'\n                className=\"inputTextBox\"\n                id=\"inputTextBox\"\n                placeholder={placeholder}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                required\n            />\n            <button className=\"inputSearchButton\">\n                <span className=\"text\">Search<span className=\"arrow\"><Arrow /></span></span>\n            </button>\n        </form>\n    )\n}\n","import React from 'react'\nimport './PercentageOverlay.css'\n\nexport function PercentageOverlay({ percentage }) {\n\n\tif(percentage && percentage > 3) percentage = Math.max(20, percentage < 90 ? percentage : 100)\n\n\treturn percentage > 0 ? (\n\t\t<div className=\"progressBar\">\n            <div className=\"progressBarInner\" style={{width: `${percentage}%`}}></div>\n        </div>\n\t) : <React.Fragment></React.Fragment>\n}","import { versionedStoreBuilder } from './base.js';\r\n\r\n/*\r\nversion 0\r\n{\r\n    [{scraperid}]: {\r\n        movie: {\r\n            [{movie-id}]: {\r\n                full: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        },\r\n        show: {\r\n            [{show-id}]: {\r\n                [{season}-{episode}]: {\r\n                    currentlyAt: number,\r\n                    totalDuration: number,\r\n                    updatedAt: number, // unix timestamp in ms\r\n                    show: {\r\n                        episode: string,\r\n                        season: string,\r\n                    },\r\n                    meta: FullMetaObject, // no idea whats in here\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\nexport const VideoProgressStore = versionedStoreBuilder()\r\n    .setKey('video-progress')\r\n    .addVersion({\r\n        version: 0,\r\n        create() {\r\n            return {}\r\n        }\r\n    })\r\n    .build()\r\n","function buildStoreObject(d) {\r\n    const data = {\r\n        versions: d.versions,\r\n        currentVersion: d.maxVersion,\r\n        id: d.storageString,\r\n    }\r\n\r\n    function update(obj) {\r\n        if (!obj)\r\n            throw new Error(\"object to update is not an object\");\r\n\r\n        // repeat until object fully updated\r\n        if (obj[\"--version\"] === undefined)\r\n            obj[\"--version\"] = 0;\r\n        while (obj[\"--version\"] !== this.currentVersion) {\r\n            // get version\r\n            let version = obj[\"--version\"] || 0;\r\n            if (version.constructor !== Number || version < 0)\r\n                version = -42; // invalid on purpose so it will reset\r\n            else {\r\n                version = (version+1).toString()\r\n            }\r\n            \r\n            // check if version exists\r\n            if (!this.versions[version]) {\r\n                console.error(`Version not found for storage item in store ${this.id}, resetting`);\r\n                obj = null;\r\n                break;\r\n            }\r\n\r\n            // update object\r\n            obj = this.versions[version].update(obj);\r\n        }\r\n\r\n        // if resulting obj is null, use latest version as init object\r\n        if (obj === null) {\r\n            console.error(`Storage item for store ${this.id} has been reset due to faulty updates`);\r\n            return this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // updates succesful, return\r\n        return obj;\r\n    }\r\n\r\n    function get() {\r\n        // get from storage api\r\n        const store = this;\r\n        let data = localStorage.getItem(this.id);\r\n\r\n        // parse json if item exists\r\n        if (data) {\r\n            try {\r\n                data = JSON.parse(data);\r\n                if (!data.constructor) {\r\n                    console.error(`Storage item for store ${this.id} has not constructor`)\r\n                    throw new Error(\"storage item has no constructor\")\r\n                }\r\n                if (data.constructor !== Object) {\r\n                    console.error(`Storage item for store ${this.id} is not an object`)\r\n                    throw new Error(\"storage item is not an object\")\r\n                }\r\n            } catch (_) {\r\n                // if errored, set to null so it generates new one, see below\r\n                console.error(`Failed to parse storage item for store ${this.id}`)\r\n                data = null;\r\n            }\r\n        }\r\n\r\n        // if item doesnt exist, generate from version init\r\n        if (!data) {\r\n            data = this.versions[this.currentVersion.toString()].init();\r\n        }\r\n\r\n        // update the data if needed\r\n        data = this.update(data);\r\n\r\n        // add a save object to return value\r\n        data.save = function save() {\r\n            localStorage.setItem(store.id, JSON.stringify(data));\r\n        }\r\n        \r\n        // add instance helpers\r\n        Object.entries(d.instanceHelpers).forEach(([name, helper]) => {\r\n            if (data[name] !== undefined)\r\n                throw new Error(`helper name: ${name} on instance of store ${this.id} is reserved`)\r\n            data[name] = helper.bind(data);\r\n        })\r\n\r\n        // return data\r\n        return data;\r\n    }\r\n\r\n    // add functions to store\r\n    data.get = get.bind(data);\r\n    data.update = update.bind(data);\r\n\r\n    // add static helpers\r\n    Object.entries(d.staticHelpers).forEach(([name, helper]) => {\r\n        if (data[name] !== undefined)\r\n            throw new Error(`helper name: ${name} on store ${data.id} is reserved`)\r\n        data[name] = helper.bind({});\r\n    })\r\n\r\n    return data;\r\n}\r\n\r\n/*\r\n * Builds a versioned store\r\n *\r\n * manages versioning of localstorage items\r\n*/\r\nexport function versionedStoreBuilder() {\r\n    return {\r\n        _data: {\r\n            versionList: [],\r\n            maxVersion: 0,\r\n            versions: {},\r\n            storageString: null,\r\n            instanceHelpers: {},\r\n            staticHelpers: {},\r\n        },\r\n\r\n        /*\r\n         * set key of localstorage item, must be unique\r\n        */\r\n        setKey(str) {\r\n            this._data.storageString = str;\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * add a version to the store\r\n         *\r\n         * version: version number\r\n         * migrate: function to update from previous version to this version\r\n         * create: function to return an empty storage item from this version (in correct syntax)\r\n        */\r\n        addVersion({ version, migrate, create }) {\r\n            // input checking\r\n            if (version < 0)\r\n                throw new Error(\"Cannot add version below 0 in store\");\r\n            if (version > 0 && !migrate)\r\n                throw new Error(`Missing migration on version ${version} (needed for any version above 0)`);\r\n\r\n            // update max version list\r\n            if (version > this._data.maxVersion)\r\n                this._data.maxVersion = version;\r\n            // add to version list\r\n            this._data.versionList.push(version);\r\n\r\n\r\n            // register version\r\n            this._data.versions[version.toString()] = {\r\n                version: version, // version number\r\n                update: migrate ? (data) => { // update function, and increment version\r\n                    migrate(data);\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null,\r\n                init: create ? () => { // return an initial object\r\n                    const data = create();\r\n                    data[\"--version\"] = version;\r\n                    return data;\r\n                } : null\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * register a instance or static helper to the store \r\n         *\r\n         * name: name of the helper function\r\n         * helper: function to execute, the 'this' context is the current storage item (type is instance)\r\n         * type: \"instance\" or \"static\". instance is put on the storage item when you store.get() it, static is on the store\r\n        */\r\n        registerHelper({ name, helper, type }) {\r\n            // type\r\n            if (!type)\r\n                type = \"instance\"\r\n\r\n            // input checking\r\n            if (!name || name.constructor !== String) {\r\n                throw new Error(\"helper name is not a string\")\r\n            }\r\n            if (!helper || helper.constructor !== Function) {\r\n                throw new Error(\"helper function is not a function\")\r\n            }\r\n            if (![\"instance\", \"static\"].includes(type)) {\r\n                throw new Error(\"helper type must be either 'instance' or 'static'\")\r\n            }\r\n\r\n            // register helper\r\n            if (type === \"instance\")\r\n                this._data.instanceHelpers[name] = helper\r\n            else if (type === \"static\")\r\n                this._data.staticHelpers[name] = helper\r\n\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         * returns function store based on what has been set\r\n        */\r\n        build() {\r\n            // check if version list doesnt skip versions\r\n            const versionListSorted = this._data.versionList.sort((a,b)=>a-b);\r\n            versionListSorted.forEach((v, i, arr) => {\r\n                if (i === 0)\r\n                    return;\r\n                if (v !== arr[i-1]+1)\r\n                    throw new Error(\"Version list of store is not incremental\");\r\n            })\r\n\r\n            // version zero must exist\r\n            if (versionListSorted[0] !== 0)\r\n                throw new Error(\"Version 0 doesn't exist in version list of store\");\r\n\r\n            // max version must have init function\r\n            if (!this._data.versions[this._data.maxVersion.toString()].init)\r\n                throw new Error(`Missing create function on version ${this._data.maxVersion} (needed for latest version of store)`);\r\n\r\n            // check storage string\r\n            if (!this._data.storageString)\r\n                throw new Error(\"storage key not set in store\");\r\n\r\n            // build versioned store\r\n            return buildStoreObject(this._data);\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\nimport { Arrow } from './Arrow'\nimport { PercentageOverlay } from './PercentageOverlay'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport './MovieRow.css'\n\n// title: string\n// onClick: () => void\nexport function MovieRow(props) {\n    const progressData = VideoProgressStore.get();\n    let progress;\n    let percentage = null;\n    \n    if (props.type === \"movie\") {\n        progress = progressData?.[props.source]?.movie?.[props.slug]?.full\n        \n        if (progress) {\n            percentage = Math.floor((progress.currentlyAt / progress.totalDuration) * 100)\n        }\n    }\n\n    function handleKeyPress(event){\n        if ((event.code === 'Enter' || event.code === 'Space') && props.onClick){\n            props.onClick();\n        }\n    }\n\n    return (\n        <div className=\"movieRow\" tabIndex={0} onKeyPress={handleKeyPress} onClick={() => props.onClick && props.onClick()}>\n        \n            { (props.source === \"lookmovie\" || props.source === \"xemovie\") && (\n                <div className=\"subtitleIcon\">\n                    <svg id=\"subtitleIcon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M20 4H4C2.897 4 2 4.897 2 6V18C2 19.103 2.897 20 4 20H20C21.103 20 22 19.103 22 18V6C22 4.897 21.103 4 20 4ZM11 10H8V14H11V16H8C6.897 16 6 15.103 6 14V10C6 8.897 6.897 8 8 8H11V10ZM18 10H15V14H18V16H15C13.897 16 13 15.103 13 14V10C13 8.897 13.897 8 15 8H18V10Z\" fill=\"#EEEEEE\"/>\n                    </svg>\n                </div>\n            ) }\n        \n            <div className=\"left\">\n                {/* <Cross /> */}\n                <div className=\"titleWrapper\">\n                    <div className=\"titleText\">\n                        {props.title}\n                        &nbsp;\n                        <span className=\"year\">({props.year})</span>\n                        <span className=\"seasonEpisodeSubtitle\">{props.place ? ` - S${props.place.season}:E${props.place.episode}` : ''}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"watch\">\n                <p>Watch {props.type}</p>\n                <Arrow/>\n            </div>\n            \n            <PercentageOverlay percentage={props.percentage || percentage} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Progress.css'\n\n// show: boolean\n// progress: number\n// steps: number\n// text: string\n// failed: boolean\nexport function Progress(props) {\n    return (\n        <div className={`progress ${props.show ? '' : 'hide'} ${props.failed ? 'failed' : ''}`}>\n            { props.text && props.text.length > 0 ? (\n                <p>{props.text}</p>) : null}\n            <div className=\"bar\">\n                <div className=\"bar-inner\" style={{\n                    width: (props.progress / props.steps * 100).toFixed(0) + \"%\"\n                }}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nconst MovieContext = React.createContext(null)\n\nexport function MovieProvider(props) {\n    const [page, setPage] = React.useState(\"search\");\n    const [stream, setStream] = React.useState(\"\");\n    const [streamData, setStreamData] = React.useState(null); //{ title: \"\", slug: \"\", type: \"\", episodes: [], seasons: [] }) \n\n    return (\n        <MovieContext.Provider value={{\n            navigate(str) {\n                setPage(str)\n            },\n            page,\n            setStreamUrl: setStream,\n            streamUrl: stream,\n            streamData,\n            setStreamData(d) {\n                setStreamData(p => ({...p,...d}))\n            },\n            resetStreamData() { setStreamData(null) }\n        }}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n}\n\nexport function useMovie(props) {\n    return React.useContext(MovieContext);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMovie } from '../hooks/useMovie'\nimport { Arrow } from '../components/Arrow'\nimport './Title.css'\n\n// size: \"big\" | \"medium\" | \"small\" | null\n// accent: string | null\n// accentLink: string | null\nexport function Title(props) {\n    const { streamData, resetStreamData } = useMovie();\n    const history = useHistory();\n    const size = props.size || \"big\";\n\n    const accentLink = props.accentLink || \"\";\n    const accent = props.accent || \"\";\n\n    function handleAccentClick(){\n        if (accentLink.length > 0) {\n            history.push(`/${streamData.type}`);\n            resetStreamData();\n        }\n    }\n\n    function handleKeyPress(event){\n        if (event.code === 'Enter' || event.code === 'Space'){\n            handleAccentClick();\n        }\n    }\n    \n    return (\n        <div>\n            {accent.length > 0 ? (\n                <p onClick={handleAccentClick} className={`title-accent ${accentLink.length > 0 ? 'title-accent-link' : ''}`} tabIndex={accentLink.length > 0 ? 0 : undefined} onKeyPress={handleKeyPress}>\n                    {accentLink.length > 0 ? (<Arrow left/>) : null}{accent}\n                </p>\n            ) : null}\n            <h1 className={\"title \" + ( size ? `title-size-${size}` : '' )}>{props.children}</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport './TypeSelector.css';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function TypeSelector({ setType, choices, selected, noWrap = false }) {\n  const selectedIndex = choices.findIndex(v => v.value === selected);\n  const transformStyles = {\n    opacity: selectedIndex !== -1 ? 1 : 0,\n    transform: `translateX(${selectedIndex !== -1 ? selectedIndex * 7 : 0}rem)`,\n  };\n\n  const handleKeyPress = choice => event => {\n    if (event.code === 'Enter' || event.code === 'Space') {\n      setType(choice);\n    }\n  };\n\n  return (\n    <div className={`typeSelector ${noWrap ? 'nowrap' : ''}`}>\n      {choices.map(v => (\n        <div\n          key={v.value}\n          className={`choice ${selected === v.value ? 'selected' : ''}`}\n          onClick={() => setType(v.value)}\n          onKeyPress={handleKeyPress(v.value)}\n          tabIndex={0}\n        >\n          {v.label}\n        </div>\n      ))}\n      <div className=\"selectedBar\" style={transformStyles} />\n    </div>\n  );\n}\n","const BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://theflix.to`;\n\nasync function findContent(searchTerm, type) {\n    try {\n        const term = searchTerm.toLowerCase()\n        const tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/search/${type === 'show' ? 'tv' : type}?query=${term}`).then(d => d.text());\n\n        const doc = new DOMParser().parseFromString(tmdbRes, 'text/html');\n        const nodes = Array.from(doc.querySelectorAll('div.results > div > div.wrapper'));\n        const results = nodes.slice(0, 10).map((node) => {\n            let type = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('data-media-type');\n            type = type === 'tv' ? 'show' : type;\n\n            let title;\n            let year;\n            let slug;\n\n            if (type === 'movie') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            } else if (type === 'show') {\n                try {\n                    title = node.querySelector('div.details > div.wrapper > div.title > div > a > h2').textContent;\n                    year = node.querySelector('div.details > div.wrapper > div.title > span').textContent.trim().split(' ')[2];\n                    slug = node.querySelector('div.details > div.wrapper > div.title > div > a').getAttribute('href').split('/')[2];\n                } catch (e) {\n                    // eslint-disable-next-line array-callback-return\n                    return;\n                }\n            }\n\n            return {\n                type: type,\n                title: title,\n                year: year,\n                slug: slug + '-' + title.replace(/[^a-z0-9]+|\\s+/gmi, \" \").replace(/\\s+/g, '-').toLowerCase(),\n                source: 'theflix'\n            }\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getEpisodes(slug) {\n    let tmdbRes;\n    \n    try {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/seasons`).then(d => d.text());\n    } catch (err) {\n        tmdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug.split('-')[0]}/seasons`).then(d => d.text());\n\n        if (tmdbRes)\n            slug = slug.split('-')[0];\n    }\n\n    const sNodes = Array.from(new DOMParser().parseFromString(tmdbRes, 'text/html').querySelectorAll('div.column_wrapper > div.flex > div'));\n\n    let seasons = [];\n    let episodes = [];\n\n    for (let s of sNodes) {\n        const text = s.querySelector('div > section > div > div > div > h2 > a').textContent;\n        if (!text.includes('Season')) continue;\n\n        const season = text.split(' ')[1];\n\n        if (!seasons.includes(season)) {\n            seasons.push(season);\n        }\n\n        if (!episodes[season]) {\n            episodes[season] = [];\n        }\n        \n        const epRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://www.themoviedb.org/tv/${slug}/season/${season}`).then(d => d.text());\n        const epNodes = Array.from(new DOMParser().parseFromString(epRes, 'text/html').querySelectorAll('div.episode_list > div.card'));\n        epNodes.forEach((e, i) => episodes[season].push(++i));\n    }\n    \n    return { seasons, episodes };\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    let url;\n\n    if (type === 'show') {\n        url = `${BASE_URL}/tv-show/${slug}/season-${season}/episode-${episode}`;\n    } else {\n        url = `${BASE_URL}/movie/${slug}?movieInfo=${slug}`;\n    }\n\n    const res = await fetch(url).then(d => d.text());\n\n    const scripts = Array.from(new DOMParser().parseFromString(res, \"text/html\").querySelectorAll('script'));\n    const prop = scripts.find((e) => e.textContent.includes(\"theflixvd.b-cdn\"));\n\n    if (prop) {\n        const data = JSON.parse(prop.textContent);\n        return { url: data.props.pageProps.videoUrl };\n    }\n\n    return { url: '' }\n}\n\nconst theflix = { findContent, getStreamUrl, getEpisodes }\nexport default theflix;\n","import Fuse from 'fuse.js'\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://stream.vidzstore.com`;\n\nasync function findContent(searchTerm, type) {\n    if (type === 'show') return { options: [] };\n    try {\n        const searchUrl = `${BASE_URL}/search.php?sd=${searchTerm.replace(/ /g, \"_\")}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        const nodes = [...doc.querySelectorAll(\".post\")];\n        const results = nodes.map(node => {\n            const title = node.querySelector(\"a\").title.replace(/-/g, \" \").trim();\n            const titleArray = title.split(\" \");\n            titleArray.splice(-2);\n            return {\n                type,\n                title: titleArray.join(\" \"),\n                year: node.querySelector(\".post-meta\").innerText.split(\" \").pop().split(\"-\").shift(),\n                slug: encodeURIComponent(node.querySelector(\"a\").href.split('/').pop()),\n                source: \"vidzstore\",\n            }\n        });\n        \n        const fuse = new Fuse(results, { threshold: 0.3, keys: [\"title\"] });\n        const matchedResults = fuse\n            .search(searchTerm)\n            .map(result => result.item);\n\n        if (matchedResults.length === 0) {\n            return { options: [] };\n        }\n\n        if (matchedResults.length > 1) {\n            const res = { options: [] };\n    \n            matchedResults.forEach((r) => res.options.push({\n                title: r.title,\n                slug: r.slug,\n                type: r.type,\n                year: r.year,\n                source: 'vidzstore'\n            }));\n    \n            return res;\n        } else {\n            const { title, slug, type, year } = matchedResults[0];\n    \n            return {\n                options: [{ title, slug, type, year, source: 'vidzstore' }]\n            }\n        }\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug) {\n    const url = `${BASE_URL}/${decodeURIComponent(slug)}`;\n\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n\n    return { url: DOM.querySelector(\"source\").src };\n}\n\nconst vidzstore = { findContent, getStreamUrl }\nexport default vidzstore;","const alphabet = {\n    62: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    95: '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'\n};\n\nfunction _filterargs(str) {\n    var juicers = [\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\), *(\\d+), *([\\s\\S]*)\\)\\)/,\n        /}\\('([\\s\\S]*)', *(\\d+), *(\\d+), *'([\\s\\S]*)'\\.split\\('\\|'\\)/\n    ];\n\n    for (var c = 0; c < juicers.length; ++c) {\n        var m, juicer = juicers[c];\n\n        // eslint-disable-next-line no-cond-assign\n        if (m = juicer.exec(str)) {\n            return [m[1], m[4].split('|'), parseInt(m[2]), parseInt(m[3])];\n        }\n    }\n\n    throw new Error(\"Could not make sense of p.a.c.k.e.r data (unexpected code structure)\");\n}\n\nfunction _unbaser(base) {\n    if (2 <= base <= 36) return (str) => parseInt(str, base);\n\n    const dictionary = {};\n    var alpha = alphabet[base];\n    if (!alpha) throw new Error(\"Unsupported encoding\");\n\n    for (let c = 0; c < alpha.length; ++alpha) {\n        dictionary[alpha[c]] = c;\n    }\n\n    return (str) => str.split(\"\").reverse().reduce((cipher, ind) => Math.pow(base, ind) * dictionary[cipher]);\n}\n\nfunction unpack(str) {\n    var params = _filterargs(str);\n    var payload = params[0], symtab = params[1], radix = params[2], count = params[3];\n\n    if (count !== symtab.length) {\n        throw new Error(\"Malformed p.a.c.k.e.r. symtab. (\" + count + \" != \" + symtab.length + \")\");\n    }\n\n    var unbase = _unbaser(radix);\n    var lookup = (word) => symtab[unbase(word)] || word;\n    var source = payload.replace(/\\b\\w+\\b/g, lookup);\n\n    return source;\n}\n\nexport { unpack };","// THIS SCRAPER DOES NOT CURRENTLY WORK AND IS NOT IN USE\n\nimport { unpack } from '../util/unpacker';\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://gomo.to`;\nconst MOVIE_URL = `${BASE_URL}/movie`\nconst DECODING_URL = `${BASE_URL}/decoding_v3.php`\n\nasync function findContent(searchTerm, type) {\n    try {\n        if (type !== 'movie') return;\n\n        const term = searchTerm.toLowerCase()\n        const imdbRes = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}https://v2.sg.media-imdb.com/suggestion/${term.slice(0, 1)}/${term}.json`).then(d => d.json())\n        \n        const results = [];\n        imdbRes.d.forEach((e) => {\n            if (!e.id.startsWith('tt')) return;\n\n            // Block tv shows\n            if (e.q === \"TV series\") return;\n            if (e.q === \"TV mini-series\") return;\n            if (e.q === \"video game\") return;\n            if (e.q === \"TV movie\") return;\n            if (e.q === \"TV special\") return;\n\n            results.push({\n                title: e.l,\n                slug: e.id,\n                type: 'movie',\n                year: e.y,\n                source: 'gomostream'\n            })\n        });\n\n        if (results.length > 1) {\n            return { options: results };\n        } else {\n            return { options: [ results[0] ] }\n        }\n    } catch (err) {\n        console.error(err);\n        throw new Error(err)\n    }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    if (type !== 'movie') return;\n\n    // Get stream to go with IMDB ID\n    const site1 = await fetch(`${MOVIE_URL}/${slug}`).then((d) => d.text());\n\n    if (site1 === \"Movie not available.\")\n        return { url: '' };\n\n    const tc = site1.match(/var tc = '(.+)';/)?.[1]\n    const _token = site1.match(/\"_token\": \"(.+)\",/)?.[1]\n\n    const fd = new FormData()\n    fd.append('tokenCode', tc)\n    fd.append('_token', _token)\n\n    const src = await fetch(DECODING_URL, {\n        method: \"POST\",\n        body: fd,\n        headers: { \n            'x-token': tc.slice(5, 13).split(\"\").reverse().join(\"\") + \"13574199\" \n        }\n    }).then((d) => d.json());\n\n    const embedUrl = src.find(url => url.includes('gomo.to'));\n    const site2 = await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}${embedUrl}`).then((d) => d.text());\n\n    const parser = new DOMParser();\n    const site2Dom = parser.parseFromString(site2, \"text/html\");\n\n    if (site2Dom.body.innerText === \"File was deleted\")\n        return { url: '' }\n\n    const script = site2Dom.querySelectorAll(\"script\")[8].innerHTML;\n    \n    let unpacked = unpack(script).split('');\n    unpacked.splice(0, 43);\n    let index = unpacked.findIndex((e) => e === '\"');\n    const url = unpacked.slice(0, index).join('');\n\n    return { url }\n}\n\nconst gomostream = { findContent, getStreamUrl }\nexport default gomostream;","import xemovie from './scraper/xemovie';\r\nimport theflix from './scraper/theflix';\r\nimport vidzstore from './scraper/vidzstore';\r\nimport gdriveplayer from './scraper/gdriveplayer';\r\nimport gomostream from './scraper/gomostream';\r\n\r\nasync function findContent(searchTerm, type) {\r\n    const results = { options: []};\r\n    const content = await Promise.all([\r\n        theflix.findContent(searchTerm, type),\r\n        gomostream.findContent(searchTerm, type),\r\n        gdriveplayer.findContent(searchTerm, type),\r\n        xemovie.findContent(searchTerm, type),\r\n        // vidzstore.findContent(searchTerm, type),\r\n    ]);\r\n\r\n    content.forEach((o) => {\r\n        if (!o || !o.options) return;\r\n\r\n        o.options.forEach((i) => {\r\n            if (!i) return;\r\n            results.options.push(i)\r\n        })\r\n    });\r\n\r\n    return results;\r\n}\r\n\r\nasync function getStreamUrl(slug, type, source, season, episode) {\r\n    switch (source) {\r\n        case 'theflix':\r\n            return await theflix.getStreamUrl(slug, type, season, episode);\r\n        case 'vidzstore':\r\n            return await vidzstore.getStreamUrl(slug);\r\n        case 'xemovie':\r\n            return await xemovie.getStreamUrl(slug, type, season, episode);\r\n        case 'gdriveplayer':\r\n            return await gdriveplayer.getStreamUrl(slug, type, season, episode);\r\n        case 'gomostream':\r\n            return await gomostream.getStreamUrl(slug, type, season, episode);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nasync function getEpisodes(slug, source) {\r\n    switch (source) {\r\n        case 'theflix':\r\n            return await theflix.getEpisodes(slug);\r\n        case 'xemovie':\r\n            return await xemovie.getEpisodes(slug);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nexport { findContent, getStreamUrl, getEpisodes }\r\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Redirect, useHistory, useRouteMatch } from 'react-router-dom';\nimport { Arrow } from '../components/Arrow';\nimport { Card } from '../components/Card';\nimport { ErrorBanner } from '../components/ErrorBanner';\nimport { InputBox } from '../components/InputBox';\nimport { MovieRow } from '../components/MovieRow';\nimport { Progress } from '../components/Progress';\nimport { Title } from '../components/Title';\nimport { TypeSelector } from '../components/TypeSelector';\nimport { useMovie } from '../hooks/useMovie';\nimport { findContent, getEpisodes, getStreamUrl } from '../lib/index';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Search.css';\n\nexport function SearchView() {\n    const { navigate, setStreamUrl, setStreamData } = useMovie();\n\n    const history = useHistory();\n    const routeMatch = useRouteMatch('/:type');\n    const type = routeMatch?.params?.type;\n    const streamRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n\n    const maxSteps = 4;\n    const [options, setOptions] = React.useState([]);\n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState(\"\");\n    const [failed, setFailed] = React.useState(false);\n    const [showingOptions, setShowingOptions] = React.useState(false);\n    const [errorStatus, setErrorStatus] = React.useState(false);\n    const [page, setPage] = React.useState('search');\n    const [continueWatching, setContinueWatching] = React.useState([])\n\n    const fail = (str) => {\n        setProgress(maxSteps);\n        setText(str)\n        setFailed(true)\n    }\n\n    async function getStream(title, slug, type, source, year) {\n        setStreamUrl(\"\");\n\n        try {\n            setProgress(2);\n            setText(`Getting stream for \"${title}\"`);\n\n            let seasons = [];\n            let episodes = [];\n            if (type === \"show\") {\n                const data = await getEpisodes(slug, source);\n                seasons = data.seasons;\n                episodes = data.episodes;\n            }\n\n            let realUrl = '';\n            let subtitles = []\n\n            if (type === \"movie\") {\n                const { url, subtitles: subs } = await getStreamUrl(slug, type, source);\n\n                if (url === '') {\n                    return fail(`Not found: ${title}`)\n                }\n\n                realUrl = url;\n                subtitles = subs\n            }\n\n            setProgress(maxSteps);\n            setStreamUrl(realUrl);\n            setStreamData({\n                title,\n                type,\n                seasons,\n                episodes,\n                slug,\n                source,\n                year,\n                subtitles\n            })\n            setText(`Streaming...`)\n            navigate(\"movie\")\n        } catch (err) {\n            console.error(err);\n            fail(\"Failed to get stream\")\n        }\n    }\n\n    async function searchMovie(query, contentType) {\n        setFailed(false);\n        setText(`Searching for ${contentType} \"${query}\"`);\n        setProgress(1)\n        setShowingOptions(false)\n\n        try {\n            const { options } = await findContent(query, contentType);\n\n            if (options.length === 0) {\n                return fail(`Could not find that ${contentType}`)\n            } else if (options.length > 1) {\n                setProgress(2);\n                setText(`Choose your ${contentType}`);\n                setOptions(options);\n                setShowingOptions(true);\n                return;\n            }\n\n            const { title, slug, type, source, year } = options[0];\n            history.push(`${routeMatch.url}/${source}/${title}/${slug}`);\n            getStream(title, slug, type, source, year);\n        } catch (err) {\n            console.error(err);\n            fail(`Failed to watch ${contentType}`)\n        }\n    }\n\n    React.useEffect(() => {\n        async function fetchHealth() {\n            await fetch(process.env.REACT_APP_CORS_PROXY_URL).catch(() => {\n                // Request failed; source likely offline\n                setErrorStatus(`Our content provider is currently offline, apologies.`)\n            })\n        }\n        fetchHealth()\n    }, []);\n\n    React.useEffect(() => {\n        if (streamRouteMatch) {\n            if (streamRouteMatch?.params.type === 'movie' || streamRouteMatch.params.type === 'show') getStream(streamRouteMatch.params.title, streamRouteMatch.params.slug, streamRouteMatch.params.type, streamRouteMatch.params.source);\n            else return setErrorStatus(\"Failed to find movie. Please try searching below.\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let newContinueWatching = []\n\n        Object.keys(progressData).forEach((source) => {\n            const all = [\n                ...Object.entries(progressData[source]?.show ?? {}),\n                ...Object.entries(progressData[source]?.movie ?? {})\n            ];\n\n            for (const [slug, data] of all) {\n                for (let subselection of Object.values(data)) {\n                    let entry = {\n                        slug,\n                        data: subselection,\n                        type: subselection.show ? 'show' : 'movie',\n                        percentageDone: Math.floor((subselection.currentlyAt / subselection.totalDuration) * 100),\n                        source\n                    }\n\n                    // due to a constraint with incompatible localStorage data,\n                    // we must quit here if episode and season data is not included\n                    // in the show's data. watching the show will resolve.\n                    if (!subselection.meta) continue;\n\n                    if (entry.percentageDone < 90) {\n                        newContinueWatching.push(entry)\n                        // begin next episode logic\n                    } else {\n                        // we can't do next episode for movies!\n                        if (!subselection.show) continue;\n\n                        let newShow = {};\n\n                        // if the current season has a next episode, load it\n                        if (subselection.meta.episodes[subselection.show.season].includes(`${parseInt(subselection.show.episode) + 1}`)) {\n                            newShow.season = subselection.show.season;\n                            newShow.episode = `${parseInt(subselection.show.episode) + 1}`;\n                            entry.percentageDone = 0;\n                            // if the current season does not have a next epsiode, and the next season has a first episode, load that\n                        } else if (subselection.meta.episodes?.[`${parseInt(subselection.show.season) + 1}`]?.[0]) {\n                            newShow.season = `${parseInt(subselection.show.season) + 1}`;\n                            newShow.episode = subselection.meta.episodes[`${parseInt(subselection.show.season) + 1}`][0];\n                            entry.percentageDone = 0;\n                            // the next episode does not exist\n                        } else {\n                            continue;\n                        }\n\n                        // assign the new episode and season data\n                        entry.data.show = { ...newShow };\n\n                        // if the next episode exists, continue. we don't want to end up with duplicate data.\n                        let nextEpisode = progressData?.[source]?.show?.[slug]?.[`${entry.data.show.season}-${entry.data.show.episode}`];\n                        if (nextEpisode) continue;\n\n                        newContinueWatching.push(entry);\n                    }\n                }\n            }\n\n            newContinueWatching = newContinueWatching.sort((a, b) => {\n                return b.data.updatedAt - a.data.updatedAt\n            });\n\n            setContinueWatching(newContinueWatching)\n        })\n    }, []);\n\n    if (!type || (type !== 'movie' && type !== 'show')) {\n        return <Redirect to=\"/movie\" />\n    }\n\n    const handleKeyPress = page => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setPage(page);\n        }\n    }\n\n    return (\n        <div className=\"cardView\">\n            <Helmet>\n                <title>{type === 'movie' ? 'movies' : 'shows'} | movie-web</title>\n            </Helmet>\n\n            {/* Nav */}\n            <nav>\n                <span className={page === 'search' ? 'selected-link' : ''} onClick={() => setPage('search')} onKeyPress={handleKeyPress('search')} tabIndex={0}>Search</span>\n                {continueWatching.length > 0 ?\n                    <span className={page === 'watching' ? 'selected-link' : ''} onClick={() => setPage('watching')} onKeyPress={handleKeyPress('watching')} tabIndex={0}>Continue watching</span>\n                    : ''}\n            </nav>\n\n            {/* Search */}\n            {page === 'search' ?\n                <React.Fragment>\n                    <Card>\n                        {errorStatus ? <ErrorBanner>{errorStatus}</ErrorBanner> : ''}\n                        <Title accent=\"Because watching content legally is boring\">\n                            What do you wanna watch?\n                        </Title>\n                        <TypeSelector\n                            setType={(type) => history.push(`/${type}`)}\n                            choices={[\n                                { label: \"Movie\", value: \"movie\" },\n                                { label: \"TV Show\", value: \"show\" }\n                            ]}\n                            noWrap={true}\n                            selected={type}\n                        />\n                        <InputBox placeholder={type === \"movie\" ? \"Hamilton\" : \"Atypical\"} onSubmit={(str) => searchMovie(str, type)} />\n                        <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                    </Card>\n\n                    <Card show={showingOptions} doTransition>\n                        <Title size=\"medium\">\n                            Whoops, there are a few {type}s like that\n                        </Title>\n                        {Object.entries(options.reduce((a, v) => {\n                            if (!a[v.source]) a[v.source] = []\n                            a[v.source].push(v)\n                            return a;\n                        }, {})).map(v => (\n                            <div key={v[0]}>\n                                <p className=\"source\">{v[0]}</p>\n                                {v[1].map((v, i) => (\n                                    <MovieRow key={i} title={v.title} slug={v.slug} type={v.type} year={v.year} source={v.source} onClick={() => {\n                                        history.push(`${routeMatch.url}/${v.source}/${v.title}/${v.slug}`);\n                                        setShowingOptions(false)\n                                        getStream(v.title, v.slug, v.type, v.source, v.year)\n                                    }} />\n                                ))}\n                            </div>\n                        ))}\n                    </Card>\n                </React.Fragment> : <React.Fragment />}\n\n            {/* Continue watching */}\n            {continueWatching.length > 0 && page === 'watching' ? <Card>\n                <Title>Continue watching</Title>\n                <Progress show={progress > 0} failed={failed} progress={progress} steps={maxSteps} text={text} />\n                {continueWatching?.map((v, i) => (\n                    <MovieRow key={i} title={v.data.meta.title} slug={v.data.meta.slug} type={v.type} year={v.data.meta.year} source={v.source} place={v.data.show} percentage={v.percentageDone} deletable onClick={() => {\n                        if (v.type === 'show') {\n                            history.push(`/show/${v.source}/${v.data.meta.title}/${v.slug}/season/${v.data.show.season}/episode/${v.data.show.episode}`)\n                        } else {\n                            history.push(`/movie/${v.source}/${v.data.meta.title}/${v.slug}`)\n                        }\n\n                        setShowingOptions(false)\n                        getStream(v.data.meta.title, v.data.meta.slug, v.type, v.source, v.data.meta.year)\n                    }} />\n                ))}\n            </Card> : <React.Fragment></React.Fragment>}\n\n            <div className=\"topRightCredits\">\n                <a href=\"https://github.com/JamesHawkinss/movie-web\" target=\"_blank\" rel=\"noreferrer\">Check it out on GitHub <Arrow /></a>\n                <br />\n                <a href=\"https://discord.gg/vXsRvye8BS\" target=\"_blank\" rel=\"noreferrer\">Join the Discord <Arrow /></a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './VideoPlaceholder.css'\n\nexport function VideoPlaceholder(props) {\n\treturn (\n\t\t<div className=\"videoPlaceholder\">\n\t\t\t<div className=\"videoPlaceholderBox\">\n\t\t\t\t<p>{props.children}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport Hls from 'hls.js'\nimport { VideoPlaceholder } from './VideoPlaceholder'\n\nimport './VideoElement.css'\n\n// streamUrl: string\n// loading: boolean\n// setProgress: (event: NativeEvent) => void\n// videoRef: useRef\n// startTime: number\nexport function VideoElement({ streamUrl, loading, setProgress, videoRef, startTime, streamData }) {\n    const [error, setError] = React.useState(false);\n\n    function onLoad() {\n        if (startTime)\n            videoRef.current.currentTime = startTime;\n    }\n\n    React.useEffect(() => {\n        if (!streamUrl.includes('.mp4') && !streamUrl.includes('redirector.php')) {\n            console.log(streamUrl)\n            setError(false)\n            if (!videoRef || !videoRef.current || !streamUrl || streamUrl.length === 0 || loading) return;\n            \n            const hls = new Hls();\n            \n            if (!Hls.isSupported() && videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                videoRef.current.src = streamUrl;\n                return;\n            } else if (!Hls.isSupported()) {\n                setError(true)\n                return;\n            }\n            \n            hls.attachMedia(videoRef.current);\n            hls.loadSource(streamUrl);\n        }\n    }, [videoRef, streamUrl, loading]);\n\n    if (error)\n        return (<VideoPlaceholder>Your browser is not supported</VideoPlaceholder>)\n\n    if (loading)\n        return <VideoPlaceholder>Loading episode...</VideoPlaceholder>\n    \n    if (!streamUrl || streamUrl.length === 0)\n        return <VideoPlaceholder>No video selected</VideoPlaceholder>\n\n    if (!streamUrl.includes('.mp4') && !streamUrl.includes('redirector.php')) {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={sub.file} />) }\n            </video>\n        )\n    } else {\n        return (\n            <video className=\"videoElement\" ref={videoRef} controls autoPlay onProgress={setProgress} onLoadedData={onLoad}>\n                { streamData.subtitles && streamData.subtitles.map((sub, index) => <track key={index} kind=\"captions\" label={sub.language} src={sub.file} />) }\n                <source src={streamUrl} type=\"video/mp4\" />\n            </video>\n        )\n    }\n}\n","import React from 'react';\n// import { Arrow } from './Arrow';\nimport './NumberSelector.css'\nimport { PercentageOverlay } from './PercentageOverlay';\n\n// setType: (txt: string) => void\n// choices: { label: string, value: string }[]\n// selected: string\nexport function NumberSelector({ setType, choices, selected }) {\n    const handleKeyPress = choice => event => {\n        if (event.code === 'Space' || event.code === 'Enter'){\n            setType(choice);\n        }\n    }\n    return (\n        <div className=\"numberSelector\">\n            {choices.map(v=>(\n                <div key={v.value} className=\"choiceWrapper\" tabIndex={0} onKeyPress={handleKeyPress(v.value)}>\n                    <div className={`choice ${selected&&selected===v.value?'selected':''}`} onClick={() => setType(v.value)}>\n                        {v.label}\n                        <PercentageOverlay percentage={v.percentage} />\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import { useRef, useState, useEffect } from \"react\"\nimport \"./SelectBox.css\"\n\nfunction Option({ option, ...props }) {\n    return (\n        <div className=\"option\" {...props}>\n            <input\n                type=\"radio\"\n                className=\"radio\"\n                id={option.id} />\n            <label htmlFor={option.id}>\n                <div className=\"item\">{option.name}</div>\n            </label>\n        </div>\n    )\n}\n\nexport function SelectBox({ options, selectedItem, setSelectedItem }) {\n    if (!Array.isArray(options)) {\n        throw new Error(\"Items must be an array!\")\n    }\n\n    const [active, setActive] = useState(false)\n\n    const containerRef = useRef();\n\n    const handleClick = e => {\n        if (containerRef.current.contains(e.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        closeDropdown()\n    };\n\n    const closeDropdown = () => {\n        setActive(false)\n    }\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onOptionClick = (e, option, i) => {\n        e.stopPropagation()\n        setSelectedItem(i)\n        closeDropdown()\n    }\n\n    const handleSelectedKeyPress = event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            setActive(a => !a);\n        }\n    }\n\n    const handleOptionKeyPress = (option, i) => event => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            onOptionClick(event, option, i);\n        }\n    }\n\n    return (\n        <div className=\"select-box\" ref={containerRef} onClick={() => setActive(a => !a)} >\n            <div className=\"selected\" tabIndex={0} onKeyPress={handleSelectedKeyPress}>\n                {options ? (\n                    <Option option={options[selectedItem]} />\n                ) : null}\n            </div>\n            <div className={\"options-container\" + (active ? \" active\" : \"\")}>\n                {options.map((opt, i) => (\n                    <Option option={opt} key={i} onClick={(e) => onOptionClick(e, opt, i)} tabIndex={active ? 0 : undefined} onKeyPress={active ? handleOptionKeyPress(opt, i) : undefined} />\n                ))}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { TypeSelector } from './TypeSelector';\nimport { NumberSelector } from './NumberSelector';\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\nimport { SelectBox } from '../components/SelectBox';\nimport './EpisodeSelector.css'\nimport { useWindowSize } from '../hooks/useWindowSize';\n\nexport function EpisodeSelector({ setSelectedSeason, selectedSeason, setEpisode, seasons, episodes, currentSeason, currentEpisode, streamData }) {\n    const choices = episodes ? episodes.map(v => {\n        const progressData = VideoProgressStore.get();\n        \n        let currentlyAt = 0;\n        let totalDuration = 0;\n\n        const progress = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[`${selectedSeason}-${v}`]\n\n        if (progress) {\n            currentlyAt = progress.currentlyAt\n            totalDuration = progress.totalDuration\n        }\n\n        const percentage = Math.round((currentlyAt / totalDuration) * 100)\n\n        return { \n            value: v.toString(), \n            label: v,\n            percentage\n        }\n    }) : [];\n\n    const windowSize = useWindowSize()\n\n    return (\n        <div className=\"episodeSelector\">\n            {\n                (seasons.length > 0 && (windowSize.width <= 768 || seasons.length > 4)) ? \n                (\n                    <SelectBox setSelectedItem={(index) => setSelectedSeason(seasons[index])} selectedItem={seasons.findIndex(s => s === selectedSeason)} options={seasons.map(season => { return {id: season, name: `Season ${season}` }})}/>\n                )\n                :\n                (\n                    <TypeSelector setType={setSelectedSeason} selected={selectedSeason} choices={seasons.map(v=>({ value: v.toString(), label: `Season ${v}`}))} />\n                )\n            }\n            <br></br>\n            <NumberSelector setType={(e) => setEpisode({episode: e, season: selectedSeason})} choices={choices} selected={(selectedSeason.toString() === currentSeason) ? currentEpisode : null} />\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n  }","import React from 'react'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport { Helmet } from 'react-helmet';\nimport { Title } from '../components/Title'\nimport { Card } from '../components/Card'\nimport { useMovie } from '../hooks/useMovie'\nimport { VideoElement } from '../components/VideoElement'\nimport { EpisodeSelector } from '../components/EpisodeSelector'\nimport { getStreamUrl } from '../lib/index'\nimport { VideoProgressStore } from '../lib/storage/VideoProgress'\n\nimport './Movie.css'\n\nexport function MovieView(props) {\n    const baseRouteMatch = useRouteMatch('/:type/:source/:title/:slug');\n    const showRouteMatch = useRouteMatch('/:type/:source/:title/:slug/season/:season/episode/:episode');\n    const history = useHistory();\n\n    const { streamUrl, streamData, setStreamUrl } = useMovie();\n    const [ seasonList, setSeasonList ] = React.useState([]);\n    const [ episodeLists, setEpisodeList ] = React.useState([]);\n    const [ loading, setLoading ] = React.useState(false);\n    const [ selectedSeason, setSelectedSeason ] = React.useState(\"1\");\n    const [ startTime, setStartTime ] = React.useState(0);\n    const videoRef = React.useRef(null);\n    let isVideoTimeSet = React.useRef(false);\n\n    const season = showRouteMatch?.params.season || \"1\";\n    const episode = showRouteMatch?.params.episode || \"1\";\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function setEpisode({ season, episode }) {\n        history.push(`${baseRouteMatch.url}/season/${season}/episode/${episode}`);\n        isVideoTimeSet.current = false;\n    }\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && !showRouteMatch) history.replace(`${baseRouteMatch.url}/season/1/episode/1`);\n    }, [streamData.type, showRouteMatch, history, baseRouteMatch.url]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\" && showRouteMatch) setSelectedSeason(showRouteMatch.params.season.toString());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        let cancel = false;\n\n        if (streamData.type !== \"show\") return () => {\n            cancel = true;\n        };\n\n        if (!episode) {\n            setLoading(false);\n            setStreamUrl('');\n            return;\n        }\n\n        setLoading(true);\n        getStreamUrl(streamData.slug, streamData.type, streamData.source, season, episode)\n        .then(({ url, subtitles }) => {\n                if (cancel) return;\n                streamData.subtitles = subtitles;\n                setStreamUrl(url)\n                setLoading(false);\n            })\n            .catch((e) => {\n                if (cancel) return;\n                console.error(e)\n            })\n\n        return () => {\n            cancel = true;\n        } \n    }, [episode, streamData, setStreamUrl, season]);\n\n    React.useEffect(() => {\n        if (streamData.type === \"show\") {\n            setSeasonList(streamData.seasons);\n            setEpisodeList(streamData.episodes[selectedSeason]);\n        }\n    }, [streamData.seasons, streamData.episodes, streamData.type, selectedSeason])\n\n    React.useEffect(() => {\n        const progressData = VideoProgressStore.get();\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        let time = progressData?.[streamData.source]?.[streamData.type]?.[streamData.slug]?.[key]?.currentlyAt;\n        setStartTime(time);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [baseRouteMatch, showRouteMatch]);\n\n    const setProgress = (evt) => {\n        let progressSave = VideoProgressStore.get();\n\n        if (!progressSave[streamData.source])\n            progressSave[streamData.source] = {}\n        if (!progressSave[streamData.source][streamData.type])\n            progressSave[streamData.source][streamData.type] = {}\n        if (!progressSave[streamData.source][streamData.type][streamData.slug])\n            progressSave[streamData.source][streamData.type][streamData.slug] = {}\n        \n        // Store real data\n        let key = streamData.type === \"show\" ? `${season}-${episode}` : \"full\"\n        progressSave[streamData.source][streamData.type][streamData.slug][key] = {\n            currentlyAt: Math.floor(evt.currentTarget.currentTime),\n            totalDuration: Math.floor(evt.currentTarget.duration),\n            updatedAt: Date.now(),\n            meta: streamData\n        }\n\n        if(streamData.type === \"show\") {\n            progressSave[streamData.source][streamData.type][streamData.slug][key].show = {\n                season,\n                episode\n            }\n        }\n\n        progressSave.save();\n    }\n\n    return (\n        <div className={`cardView showType-${streamData.type}`}>\n            <Helmet>\n                <title>{streamData.title}{streamData.type === 'show' ? ` | S${season}E${episode}` : ''} | movie-web</title>\n            </Helmet>\n\n            <Card fullWidth>\n                <Title accent=\"Return to home\" accentLink=\"search\">\n                    {streamData.title}\n                </Title>\n                {streamData.type === \"show\" ? <Title size=\"small\">\n                    Season {season}: Episode {episode}\n                </Title> : undefined}\n\n                <VideoElement streamUrl={streamUrl} loading={loading} setProgress={setProgress} videoRef={videoRef} startTime={startTime} streamData={streamData} />\n\n                {streamData.type === \"show\" ? \n                    <EpisodeSelector\n                        setSelectedSeason={setSelectedSeason}\n                        selectedSeason={selectedSeason}\n\n                        setEpisode={setEpisode}\n\n                        seasons={seasonList}\n                        episodes={episodeLists}\n\n                        currentSeason={season}\n                        currentEpisode={episode}\n\n                        streamData={streamData}\n                    />\n                : ''}\n            </Card>\n        </div>\n    )\n}\n","import { SearchView } from './views/Search';\nimport { MovieView } from './views/Movie';\nimport { useMovie, MovieProvider } from './hooks/useMovie';\nimport './index.css';\n\nfunction Router() {\n  const { streamData } = useMovie();\n  return streamData ? <MovieView /> : <SearchView />;\n}\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <Router />\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","import Fuse from 'fuse.js'\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://xemovie.co`;\n\nasync function findContent(searchTerm, type) {\n    try {\n        let results;\n\n        const searchUrl = `${BASE_URL}/search?q=${encodeURIComponent(searchTerm)}`;\n        const searchRes = await fetch(searchUrl).then((d) => d.text());\n\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(searchRes, \"text/html\");\n        switch (type) {\n            case 'show':\n                // const showContainer = doc.querySelectorAll(\".py-10\")[1].querySelector(\".grid\");\n                // const showNodes = [...showContainer.querySelectorAll(\"a\")].filter(link => !link.className);\n                // results = showNodes.map(node => {\n                //     node = node.parentElement\n                //     return {\n                //         type,\n                //         title: [...new Set(node.innerText.split(\"\\n\"))][1].split(\"(\")[0].trim(),\n                //         year: [...new Set(node.innerText.split(\"\\n\"))][3],\n                //         slug: node.querySelector(\"a\").href.split('/').pop(),\n                //         source: \"xemovie\"\n                //     }\n                // })\n                // break;\n                return { options: [] };\n            case 'movie':\n                const movieContainer = doc.querySelectorAll(\".py-10\")[0].querySelector(\".grid\");\n                const movieNodes = [...movieContainer.querySelectorAll(\"a\")].filter(link => !link.className);\n                results = movieNodes.map(node => {\n                    node = node.parentElement\n                    return {\n                        type,\n                        title: [...new Set(node.innerText.split(\"\\n\"))][1].split(\"(\")[0].trim(),\n                        year: [...new Set(node.innerText.split(\"\\n\"))][3],\n                        slug: node.querySelector(\"a\").href.split('/').pop(),\n                        source: \"xemovie\"\n                    }\n                })\n                break;\n            default:\n                results = [];\n                break;\n        }\n\n        const fuse = new Fuse(results, { threshold: 0.3, keys: [\"title\"] });\n        const matchedResults = fuse\n            .search(searchTerm)\n            .map(result => result.item);\n\n        if (matchedResults.length === 0) {\n            return { options: [] };\n        }\n\n        if (matchedResults.length > 1) {\n            const res = { options: [] };\n    \n            matchedResults.forEach((r) => res.options.push({\n                title: r.title,\n                slug: r.slug,\n                type: r.type,\n                year: r.year,\n                source: 'xemovie'\n            }));\n    \n            return res;\n        } else {\n            const { title, slug, type, year } = matchedResults[0];\n    \n            return {\n                options: [{ title, slug, type, year, source: 'xemovie' }]\n            }\n        }\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug, type, season, episode) {\n    let url;\n\n    if (type === \"show\") {\n\n    } else {\n        url = `${BASE_URL}/movies/${slug}/watch`;\n    }\n\n    let mediaUrl = \"\";\n    let subtitles = [];\n\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n\n    for (const script of DOM.scripts) {\n        if (script.textContent.match(/https:\\/\\/s[0-9]\\.xemovie\\.com/)) {\n            // eslint-disable-next-line\n            let data = JSON.parse(JSON.stringify(eval(`(${script.textContent.replace(\"const data = \", \"\").split(\"};\")[0]}})`)));\n            mediaUrl = data.playlist[0].file;\n            for (const subtitleTrack of data.playlist[0].tracks) {\n                const subtitleBlob = URL.createObjectURL(await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}${subtitleTrack.file}`).then(res => res.blob())); // do this so no need for CORS errors\n                subtitles.push({\n                    file: subtitleBlob,\n                    language: subtitleTrack.label\n                })\n            }\n        }\n    }\n    return { url: `${process.env.REACT_APP_CORS_PROXY_URL}${mediaUrl}`, subtitles: subtitles }\n}\n\nasync function getEpisodes(slug) {\n\n}\n\nconst xemovie = { findContent, getStreamUrl, getEpisodes }\nexport default xemovie;\n","// THIS SCRAPER CURRENTLY WORKS AND IS IN USE\nimport CryptoJS from \"crypto-js\";\nimport { unpack } from \"unpacker\";\n\nconst BASE_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://database.gdriveplayer.us`;\nconst API_URL = `${process.env.REACT_APP_CORS_PROXY_URL}https://api.gdriveplayer.us`;\n\nconst format = {\n    stringify: (cipher) => {\n        const ct = cipher.ciphertext.toString(CryptoJS.enc.Base64);\n        const iv = cipher.iv.toString() || \"\";\n        const salt = cipher.salt.toString() || \"\";\n        return JSON.stringify({\n            ct,\n            iv,\n            salt,\n        });\n    },\n    parse: (jsonStr) => {\n        const json = JSON.parse(jsonStr);\n        const ciphertext = CryptoJS.enc.Base64.parse(json.ct);\n        const iv = CryptoJS.enc.Hex.parse(json.iv) || \"\";\n        const salt = CryptoJS.enc.Hex.parse(json.s) || \"\";\n\n        const cipher = CryptoJS.lib.CipherParams.create({\n            ciphertext,\n            iv,\n            salt,\n        });\n        return cipher;\n    }\n};\n\nasync function findContent(searchTerm, type) {\n    if (type === 'show') return { options: [] }; // will be like this until rewrite\n    try {\n        const searchUrl = `${API_URL}/v1/movie/search?title=${searchTerm}`;\n        const searchRes = await fetch(searchUrl).then((r) => r.json());\n        const results = searchRes.map(movie => {\n            return {\n                type,\n                title: movie.title,\n                year: movie.year,\n                slug: encodeURIComponent(`player.php?imdb=${movie.imdb}`),\n                source: \"gdriveplayer\",\n            }\n        });\n\n        return { options: results };\n    } catch {\n        return { options: [] };\n    }\n}\n\nasync function getStreamUrl(slug) {\n    const url = `${BASE_URL}/${decodeURIComponent(slug)}`;\n    const res = await fetch(url).then(d => d.text());\n    const DOM = new DOMParser().parseFromString(res, \"text/html\");\n    \n    const script = [...DOM.querySelectorAll(\"script\")].find(s => s.textContent.includes(\"eval\"));\n    const unpacked = unpack(script.textContent);\n\n    const data = unpacked.split(\"var data=\\\\'\")[1].split(\"\\\\'\")[0].replace(/\\\\/g, \"\");\n    const decryptedData = unpack(CryptoJS.AES.decrypt(data, \"alsfheafsjklNIWORNiolNIOWNKLNXakjsfwnBdwjbwfkjbJjkopfjweopjASoiwnrflakefneiofrt\", { format }).toString(CryptoJS.enc.Utf8));\n    // eslint-disable-next-line\n    const sources = JSON.parse(JSON.stringify(eval(decryptedData.split(\"sources:\")[1].split(\",image\")[0].replace(/\\\\/g, \"\").replace(/document\\.referrer/g, \"\\\"\\\"\"))));\n    const unmappedSubtitles = JSON.parse(DOM.querySelector(\"#subtitlez\").textContent).filter(s => s.file.length !== 2);\n    const subtitles = unmappedSubtitles.map(async (sub) => {\n        const subtitleBlob = URL.createObjectURL(await fetch(`${process.env.REACT_APP_CORS_PROXY_URL}${sub.file}`).then(res => res.blob()));\n        return {\n            file: subtitleBlob,\n            language: sub.label,\n        }\n    });\n\n    return { url: sources[sources.length - 1].file, subtitles };\n}\n\nconst gdriveplayer = { findContent, getStreamUrl }\nexport default gdriveplayer;"],"sourceRoot":""}